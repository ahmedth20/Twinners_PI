{"version":3,"file":"static/js/9407.d8129a34.chunk.js","mappings":"iLAQO,MAAMA,EAAQC,EAAAA,GAAOC,KAAK;;;;;eAKlBC,EAAAA,GAAU;IACrBC,IAAM,QAAS,CACfC,MAAO,2BACaA,EAAAA,GAAMC,kBAE1BC,KAAM,2BACcA,EAAAA,GAAKD;;;;oBAMTE,EAAAA,GAAOC;;;;kBAITL,IAAM,QAAS,CAC3BC,MAAO,oBACPE,KAAM,aAAaC,EAAAA,GAAOD;;;;4BAKJC,EAAAA,GAAOE;;EAmBnC,EAfcC,IAAkE,IAAjE,KAACC,EAAO,OAAM,YAAEC,EAAW,MAAEC,EAAK,QAAEC,EAAO,GAAEC,EAAE,UAAEC,GAAUN,EACtE,OAAOO,EAAAA,EAAAA,KAAClB,EAAK,CAACY,KAAMA,EACNC,YAAaA,EACbC,MAAOA,EACPK,SAAUJ,EACVC,GAAIA,EACJC,UAAWA,GAAa,IACpC,C,4FCvCN,MAAMG,EAAYnB,EAAAA,GAAOoB,GAAG;;;;;;;;;;;qBAWPjB,IAAM,QAAS,CAC5BC,MAAOiB,EAAAA,GAAQC,YACfhB,KAAMe,EAAAA,GAAQE;;;;;;EAShBC,EAAgBxB,EAAAA,GAAOyB,IAAI;;;;;;eAMlBvB,EAAAA,GAAU;;iBAERwB,EAAAA,GAAMC;sBACDxB,IAAM,QAAS,CACjCC,MAAOA,EAAAA,GAAMwB,SACbtB,KAAMA,EAAAA,GAAKsB;;EAiBf,EAZuBlB,IAAa,IAAZ,KAACmB,GAAKnB,EAC1B,OACIO,EAAAA,EAAAA,KAACE,EAAS,CAACH,UAAU,YAAWc,UAC5Bb,EAAAA,EAAAA,KAACO,EAAa,CAAAM,SAAED,KACR,C,4FC9CpB,MAAME,EAAc/B,EAAAA,GAAOoB,GAAG;;IAE1BY,EAAAA,GAAKC;;;;;;wBAMe9B,IAAM,QAAS,CACjCC,MAAOA,EAAAA,GAAM8B,OACb5B,KAAMA,EAAAA,GAAK4B;;;mBAIER,EAAAA,GAAMC;;iBAERzB,EAAAA,GAAU;;EAY3B,EAR0BQ,IAAa,IAAZ,KAACmB,GAAKnB,EAC7B,OACIO,EAAAA,EAAAA,KAACc,EAAW,CAAAD,UACRb,EAAAA,EAAAA,KAAA,KAAAa,SAAID,KACM,C,oGCxBtB,MAAMM,EAAUhC,IAAM,QAAS,CAC3BC,MAAOA,EAAAA,GAAM8B,OACb5B,KAAMF,EAAAA,GAAMyB,OAGHO,EAAYpC,EAAAA,GAAOoB,GAAG;;;;;;;;EAUtBiB,EAASrC,EAAAA,GAAOsC,MAAM;;;eAGpBpC,EAAAA,GAAU;;;IAGrBC,IAAM,QAAS,CACfC,MAAO,oBACMG,EAAAA,GAAOE,oCACIL,EAAAA,GAAMC,mBAE9BC,KAAM,oBACOC,EAAAA,GAAOgC,yCACIjC,EAAAA,GAAKD;;IAI7B2B,EAAAA,GAAKC;;;;;wBAKeE;;EAIXK,EAAOxC,EAAAA,GAAOoB,GAAG;;wBAENe;;4JCzCxB,MAAMM,EAActC,IAAM,QAAS,CAC/BC,OAAOsC,EAAAA,EAAAA,IAAKtC,EAAAA,GAAM8B,OAAQ,IAC1B5B,MAAMoC,EAAAA,EAAAA,IAAK,UAAW,MAGbC,EAAW3C,EAAAA,GAAOoB,GAAG;;;;;;+BAMHqB;;;;;;;;;;;;;;;;;;;;;;;;MAwBzBT,EAAAA,GAAKY;;;;;;;;;;0BAUezC,IAAM,QAAS,CACjCC,MAAOA,EAAAA,GAAM8B,OACb5B,KAAMA,EAAAA,GAAK4B;;;;;;;;;;;;;;;;;;;;;UAsBTF,EAAAA,GAAKa;;;;;yBAKUC,GAASA,EAAMC,WAAa;;;;mBAIlCxC,EAAAA,GAAOE;uBACHP,EAAAA,GAAU;;;;;;;;;;;;;;;;;;;;;0BAqBPC,IAAM,QAAS,CAC3BC,MAAO,2BAA2BA,EAAAA,GAAMwB,iBAAgBc,EAAAA,EAAAA,IAAKtC,EAAAA,GAAMwB,SAAU,cAC7EtB,KAAM,2BAA2BA,EAAAA,GAAKsB,iBAAgBc,EAAAA,EAAAA,IAAKpC,EAAAA,GAAKsB,SAAU;;;;0BAK9DzB,IAAM,QAAS,CAC3BC,MAAO,2BAA2BA,EAAAA,GAAM8B,eAAcQ,EAAAA,EAAAA,IAAKtC,EAAAA,GAAM8B,OAAQ,cACzE5B,KAAM,2BAA2BA,EAAAA,GAAK4B,eAAcQ,EAAAA,EAAAA,IAAKpC,EAAAA,GAAK4B,OAAQ;;;;;yBAM3DhC,EAAAA,GAAU;;;2BAGR8C,EAAAA;;;;;;;uCClH3B,MA0DA,EA1DatC,IAA2C,IAA1C,KAACuC,EAAI,KAAEC,EAAI,aAAEC,EAAY,SAAEC,GAAS1C,EAC9C,MAAM,UAAC2C,EAAS,SAAEC,EAAQ,OAAEC,EAAM,SAAEC,EAAQ,YAAEC,EAAW,OAAEC,GAAUT,EAC/DU,EAASF,EAAYG,QAAOC,IAASA,EAAKC,OAAMC,OAChDC,EAAaP,EAAYG,QAAOC,IAASA,EAAKC,OAAMH,EAAS,GAC7DM,EAAcC,OAAOC,WAAW,0BAA0BC,QAO1DC,EAAUA,SACaC,IAArBN,EAAWO,OAEPC,EAAAA,EAAAA,MAAA,QAAMxD,UAAU,UAASc,SAAA,EACrBb,EAAAA,EAAAA,KAAA,KAAGD,UAAU,mBAAkB,yBAGXsD,IAArBN,EAAWS,OAEdD,EAAAA,EAAAA,MAAA,QAAMxD,UAAU,UAASc,SAAA,EACrBb,EAAAA,EAAAA,KAAA,KAAGD,UAAU,oBAAmB,YAGjCwC,GAEHgB,EAAAA,EAAAA,MAAA,QAAMxD,UAAU,UAASc,SAAA,EACrBb,EAAAA,EAAAA,KAAA,KAAGD,UAAU,kBAAiB,iBAI/BC,EAAAA,EAAAA,KAAA,QAAMD,UAAU,UAASc,SAAEkC,EAAWU,UAIrD,OACIzD,EAAAA,EAAAA,KAAC0B,EAAQ,CAAC3B,UAAWkC,IAASD,EAAKlC,GAAK,SAAW,GAAI4D,QA9BvCC,KAChBzB,EAAaF,EAAKlC,IAClBkD,GAAeb,GAAS,EAAK,EA4BgDL,UAAWY,EAAS,EAAE7B,UAC/F0C,EAAAA,EAAAA,MAAA,OAAKxD,UAAU,YAAWc,SAAA,EACtB0C,EAAAA,EAAAA,MAAA,OAAKxD,UAAU,OAAMc,SAAA,EACjBb,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACnB,OAAQA,EAAQoB,IAAK,GAAGzB,KAAaC,IAAYC,OAAQA,KACjEiB,EAAAA,EAAAA,MAAA,OAAKxD,UAAU,eAAcc,SAAA,EACzB0C,EAAAA,EAAAA,MAAA,QAAMxD,UAAU,OAAMc,SAAA,CAAEuB,EAAU,IAAEC,KAEhCU,GAAa/C,EAAAA,EAAAA,KAACoD,EAAO,IAAMpB,EAAK8B,aAAc9D,EAAAA,EAAAA,KAAA,QAAMD,UAAU,UAASc,SAAEmB,EAAK8B,mBAIzFpB,EAAS,IAAK1C,EAAAA,EAAAA,KAAC+D,EAAAA,GAAQ,CAAChE,UAAU,YAAWc,SAAE6B,QAE7C,E,2DCrCnB,MA4EA,EA5EiBjD,IAAyE,IAAxE,QAACuE,EAAO,KAAE/B,EAAI,aAAEC,EAAY,SAAEC,EAAQ,WAAE8B,EAAU,cAAEC,GAAczE,EAChF,MAAO0E,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAC7B1E,EAA0B,WAAZqE,GAAuC,YAAfC,EAA2B,kBAAoB,sCAErFK,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAYD,EAAAA,EAAAA,QAAO,MACnBE,GAASC,EAAAA,EAAAA,GAAiBJ,EAAWE,GAErCG,EAAWA,CAACC,EAAKC,KACnB,MAAMC,EAAOF,EAAIjC,QAAOC,GACH,GAAGA,EAAKR,aAAaQ,EAAKP,WAC3B0C,cAAcC,SAASb,EAAMY,gBAAkBnC,EAAKiC,OAASA,IAE5EI,KAAIrC,IACD5C,EAAAA,EAAAA,KAACkF,EAAAA,EAAIC,KAAI,CAACC,GAAG,MAAoBC,SAAUzC,EAAK9C,GAAI4D,QAASA,IAAMxB,EAAaU,EAAK9C,IAAIe,UACrFb,EAAAA,EAAAA,KAACsF,EAAI,CAACrD,KAAMA,EAAMD,KAAMY,EAAMV,aAAcA,EAAcC,SAAUA,KADhDS,EAAK9C,MAIrC,OAAOgF,EAAKhC,OAASgC,GAAO9E,EAAAA,EAAAA,KAACuF,EAAAA,EAAiB,GAAE,EAGpD,OACIhC,EAAAA,EAAAA,MAACiC,EAAAA,EAAM,CAACC,KAAK,oBAAmB5E,SAAA,CAEZ,WAAZmD,IACIT,EAAAA,EAAAA,MAAAmC,EAAAA,SAAA,CAAA7E,SAAA,EACIb,EAAAA,EAAAA,KAAC2F,EAAAA,GAAM,CAACC,IAAKtB,EAAUzD,UACnB0C,EAAAA,EAAAA,MAACpC,EAAAA,GAAS,CAAAN,SAAA,EACNb,EAAAA,EAAAA,KAACoB,EAAAA,GAAM,CAACrB,UAA0B,aAAfkE,EAA4B,SAAW,GAAIP,QAASA,IAAMQ,EAAc,YAAYrD,SAAC,cAGxGb,EAAAA,EAAAA,KAACoB,EAAAA,GAAM,CAACrB,UAA0B,YAAfkE,EAA2B,SAAW,GAAIP,QAASA,IAAMQ,EAAc,WAAWrD,SAAC,kBAK9Gb,EAAAA,EAAAA,KAAC6F,EAAAA,EAAe,CAACpB,OAAQA,EAAO5D,UAC5Bb,EAAAA,EAAAA,KAAC8F,EAAAA,GAAI,CAAC/F,UAAU,QAAOc,UACnBb,EAAAA,EAAAA,KAAA,OAAK+F,MAAO,CAACC,OAAQ,SAASnF,SAGlB8D,EAASsB,EAAAA,EADE,aAAfhC,EACqB,UAA8B,mBAS/D,YAAZD,IACAhE,EAAAA,EAAAA,KAAC6F,EAAAA,EAAe,CAACpB,OAAQA,EAAO5D,UAC5Bb,EAAAA,EAAAA,KAAC8F,EAAAA,GAAI,CAAC/F,UAAU,QAAOc,SAClB8D,EAASuB,EAAAA,EAAS,eAI/BlG,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CAACP,IAAKpB,EAAU3D,UACnB0C,EAAAA,EAAAA,MAAA,OAAKxD,UAAU,SAAQc,SAAA,EACnBb,EAAAA,EAAAA,KAACoG,EAAAA,EAAK,CAAC1G,KAAK,SAASC,YAAaA,EAAaC,MAAOuE,EAC/CtE,QAASwG,GAAKjC,EAASiC,EAAEC,OAAO1G,UACvCI,EAAAA,EAAAA,KAAA,UAAQD,UAAqB,KAAVoE,EAAe,UAAY,GAAIT,QAASA,IAAMU,EAAS,IAAIvD,UAC1Eb,EAAAA,EAAAA,KAAA,KAAGD,UAAU,6BAIpB,C,2HCpFV,MAAMwG,EAAkBxH,EAAAA,GAAOoB,GAAG;;6BAEZjB,IAAM,QAAS,CACxCC,MAAOA,EAAAA,GAAM8B,OACb5B,KAAM;;IAGN0B,EAAAA,GAAKY;;;;;;;;;mBASU1C,EAAAA,GAAU;;;;;;QAMrBuH,EAAAA,GAAYC;;;;;;;;;;;0BAWMvH,IAAM,QAAS,CACjCC,MAAOA,EAAAA,GAAMC,UACbC,KAAMA,EAAAA,GAAKD;;;4BAISE,EAAAA,GAAOE;;;;;IAK/BgH,EAAAA,GAAYE;;mBAEGzH,EAAAA,GAAU;;;uCC3C7B,MAAMmC,EAASrC,EAAAA,GAAOsC,MAAM;;IAExBN,EAAAA,GAAKC;;;eAGM/B,EAAAA,GAAU;;;WAGdE,EAAAA,GAAMyB;;;;aAIJtB,EAAAA,GAAOqH;;;;;;;;;wBASIrH,EAAAA,GAAOE;;;;;;;;IAQ3BgH,EAAAA,GAAYC;;;;;;;EA0BhB,EAjBqBhH,IAAiC,IAAhC,QAACI,EAAO,KAAEoC,EAAO,UAASxC,EAC5C,MAAMmH,EAAU,CACZC,KAAe,WAAT5E,EAAoB,UAAY,cACtCrB,KAAe,WAATqB,EAAoB,eAAiB,uBAE/C,OACIsB,EAAAA,EAAAA,MAACnC,EAAM,CAACrB,UAAU,aAAa2D,QAAS7D,EAAQgB,SAAA,EAC5Cb,EAAAA,EAAAA,KAAA,KAAGD,UAAW,aAAa6G,EAAQC,SAAY,KAAC7G,EAAAA,EAAAA,KAAA,QAAMD,UAAU,OAAMc,SAAE+F,EAAQhG,SAC3E,EClBjB,EAxBenB,IAA6B,IAA5B,KAACwC,EAAI,QAAE+B,EAAO,MAAE8C,GAAMrH,EAClC,MAAM,KAACoF,EAAI,UAAEzC,EAAS,SAAEC,EAAQ,OAAEC,EAAM,OAAEG,GAAUR,EAEpD,OACIsB,EAAAA,EAAAA,MAACgD,EAAe,CAACX,IAAKkB,EAAMjG,SAAA,EACxB0C,EAAAA,EAAAA,MAAA,OAAKxD,UAAU,OAAMc,SAAA,EACjBb,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACnB,OAAQA,EAAQH,OAAQA,EAAQuB,IAAK,GAAGzB,KAAaC,OAC7DkB,EAAAA,EAAAA,MAAA,MAAIxD,UAAU,QAAOc,SAAA,CAAW,WAATgE,GAAqB,MAAM,IAAEzC,EAAU,IAAEC,SAEpEkB,EAAAA,EAAAA,MAAA,OAAKxD,UAAU,UAASc,SAAA,CAEJ,WAAZmD,GAAiC,WAATa,GAAoB7E,EAAAA,EAAAA,KAAC+G,EAAY,IAAK,MAElE/G,EAAAA,EAAAA,KAACgH,EAAAA,EAAW,CAACC,MAAM,QAAQJ,KAAK,QAAQK,MAAM,cAEpC,ECtBbC,EAAmBpI,EAAAA,GAAOoB,GAAG;YAC9B0B,GAA0B,YAAjBA,EAAMuF,OAAuB,gBAAkB;IAChErG,EAAAA,GAAKa;;;;;;;mBAOUnB,EAAAA,GAAMC;iBACRzB,EAAAA,GAAU;kBACT4C,GAA0B,YAAjBA,EAAMuF,OAAuB,QAAU;;;;;eAKnDvF,GAASA,EAAMwF,SAAW,OAAS;wBAC1BnI,IAAM,QAAS,CACjCC,MAAO0C,GAA0B,YAAjBA,EAAMuF,OAAuBjI,EAAAA,GAAM8B,OAAS9B,EAAAA,GAAMC,UAClEC,KAAMwC,GAA0B,YAAjBA,EAAMuF,OAAuB/H,EAAAA,GAAK4B,OAAS5B,EAAAA,GAAKD;;;;;;;iBAQpDH,EAAAA,GAAU;;;;;;;;;;MAUrBuH,EAAAA,GAAYE;mBACCzH,EAAAA,GAAU;;;;;;;;qCC9B7B,MAAMkC,EAAYpC,EAAAA,GAAOoB,GAAG;;;;;;;;;;;;;;mBAcTM,EAAAA,GAAMC;iBACRzB,EAAAA,GAAU;;;EAqF3B,EAhFkB4C,IACd,MAAOyF,EAAOC,IAAYlD,EAAAA,EAAAA,UAAS,CAC/BmD,SAAS,EACTC,SAAU,EACVC,SAAU,EACVC,IAAK9F,EAAM8F,IACX7H,GAAI+B,EAAM/B,MAER,MAACZ,IAAS0I,EAAAA,EAAAA,OAETC,EAAMC,IAAWzD,EAAAA,EAAAA,UAAS,OAiCjC0D,EAAAA,EAAAA,YAAU,MA/BV,WACI,MAAMC,EAAQC,SAASC,cAAc,UAAUZ,EAAMxH,MACrD,GAAIkI,EAAO,CACP,MAAMG,EAAWC,IAAAA,OAAkB,CAC/BC,SAAU,EACVC,YAAa,EACbC,UAAW,aAAa1G,EAAM/B,KAC9B0I,QAAS,WACT/D,OAAQ,GACRgE,OAAQ,EACRC,UAAW,GACXC,cAAerJ,EAAAA,GAAOE,KACtBoJ,YAAY,EACZC,UAAqB,SAAV3J,EAAmBC,EAAAA,GAAMyB,KAAO,UAC3CkI,YAAa,gBAEjBhB,EAAQK,GACRA,EAASY,KAAKf,GACdG,EAASa,GAAG,SAAS,KACjBzB,EAAS,IAAID,EAAOI,SAAUS,EAASc,eAAe,IAE1Dd,EAASa,GAAG,gBAAgB,KACxBzB,EAAS,IAAID,EAAOG,SAAUU,EAASe,kBAAkB,IAE7Df,EAASa,GAAG,UAAU,KAClBzB,EAAS,IAAID,EAAOE,SAAS,EAAOC,SAAU,IAC9CU,EAASgB,OAAO,EAAE,GAE1B,CACJ,CAGIC,EAAM,GAEP,KAEHrB,EAAAA,EAAAA,YAAU,KACFF,GACAA,EAAKwB,aAAuB,SAAVnK,EAAmBC,EAAAA,GAAMyB,KAAO,UACtD,GACD,CAAC1B,EAAO2I,IAEX,MAKMyB,EAAcC,IAChB,MAAMC,EAAUC,KAAKC,MAAMH,EAAO,IAC5BI,EAAUF,KAAKC,MAAMH,EAAiB,GAAVC,GAClC,MAAO,GAAGA,KAAWG,EAAU,GAAK,IAAM,KAAKA,GAAS,EAG5D,OACIpG,EAAAA,EAAAA,MAACpC,EAAS,CAACpB,UAAU,QAAOc,SAAA,EACxBb,EAAAA,EAAAA,KAACgH,EAAAA,EAAW,CAACC,MAAM,QAAQJ,KAAOS,EAAME,QAAmB,QAAT,OACrCN,MAAQI,EAAME,QAAiC,sBAAvB,qBACxB3H,QAfF+J,KACfrC,EAAS,IAAID,EAAOE,SAAUF,EAAME,UACpCK,EAAKgC,WAAW,KAeZ7J,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAOD,GAAI,YAAYwH,EAAMxH,QAC5CE,EAAAA,EAAAA,KAAA,SAAOF,GAAI,SAASwH,EAAMxH,KAAM6H,IAAK9F,EAAM8F,OAC3CpE,EAAAA,EAAAA,MAAA,OAAKxD,UAAU,WAAUc,SAAA,CACpByI,EAAWhC,EAAMG,UAAU,MAAI6B,EAAWhC,EAAMI,eAE7C,E,mCC9FpB,MAwBA,EAxBgBjI,IAAyB,IAAxB,KAACuC,EAAI,WAAE8H,GAAWrK,EAC/B,MAAM,QAACgE,EAAO,KAAEsG,EAAI,OAAE3C,EAAM,MAAE5D,EAAK,MAAEF,GAAStB,GACxC,MAAC9C,IAAS0I,EAAAA,EAAAA,MACVoC,EAAyB,YAAX5C,EAAuB,MAAQ0C,EAEnD,OACIvG,EAAAA,EAAAA,MAAC4D,EAAgB,CAACC,OAAQA,EAAQC,SAAU/D,EAAMzC,SAAA,EAC9C0C,EAAAA,EAAAA,MAAA,QAAMxD,UAAU,WAAUc,SAAA,CACrB,GAAGmJ,MAAgB,IAAEC,IAAOF,GAAMG,OAAO,eAE9C3G,EAAAA,EAAAA,MAAA,OAAKxD,UAAU,UAASc,SAAA,CACnB4C,EACAD,IAASxD,EAAAA,EAAAA,KAAA,OAAK2H,IAAKnE,EAAOK,IAAI,gBAC9BP,IAAStD,EAAAA,EAAAA,KAACmK,EAAQ,CAACxC,IAAKrE,EAAOxD,IAAIsK,EAAAA,EAAAA,IAAO,GAAIlL,MAAOA,SAE3C,E,0BCT3B,MAAMmL,GAActL,EAAAA,EAAAA,IAAOoH,EAAAA,GAAO;;;;MAI5BpF,EAAAA,GAAKY;;;;;;;;qBAQU1C,EAAAA,GAAU;;;;MAIzBuH,EAAAA,GAAYE;;yBAEOzH,EAAAA,GAAU;;;;EA2CnC,EArCcQ,IAAsB,IAArB,GAAC6K,EAAE,GAAExK,EAAE,MAAEgH,GAAMrH,EAC1B,MAAM8K,GAAWhG,EAAAA,EAAAA,QAAO,MAClBiG,GAAWC,EAAAA,EAAAA,MAoBjB,OACIzK,EAAAA,EAAAA,KAACqK,EAAW,CAACzE,IAAKkB,EAAMjG,UACpB0C,EAAAA,EAAAA,MAAA,QAAMmH,SApBQrE,IAClBA,EAAEsE,iBAEF,MAAMlH,EAAU,CACZ2D,OAAQ,UACR3D,QAAS8G,EAASrJ,QAAQtB,MAC1BmK,KAAME,MAASW,UACf/H,MAAM,EACN/C,IAAIsK,EAAAA,EAAAA,OAGuB,KAA3BG,EAASrJ,QAAQtB,QACjB4K,GAASK,EAAAA,EAAAA,IAAW,CAACP,KAAIxK,KAAI2D,aAC7B8G,EAASrJ,QAAQtB,MAAQ,GACzB2K,EAASrJ,QAAQ4J,OACrB,EAKiCjK,SAAA,EACzBb,EAAAA,EAAAA,KAAA,SAAO4F,IAAK2E,EAAU7K,KAAK,OAAOC,YAAY,oBAAoBoL,YAAY,KAC9E/K,EAAAA,EAAAA,KAACgH,EAAAA,EAAW,CAACC,MAAM,QAAQJ,KAAK,cAAcK,MAAM,OAAOxH,KAAK,eAE1D,E,ssHCyBtB,EA1EaD,IAAsB,IAArB,KAACwC,EAAI,QAAE+B,GAAQvE,EACzB,MAAMwG,GAAS+E,EAAAA,EAAAA,KAAY1D,GAASA,EAAiB,UAAU,SACzDpB,GAAU8E,EAAAA,EAAAA,KAAY1D,GAASA,EAAiB,UAAW,UAC3DgD,EAAiB,YAAZtG,EAAwBkC,EAAUD,EACvCgF,EAAchJ,GAAQqI,EAAGY,MAAKtI,GAAQA,EAAK9C,KAAOmC,IAElDqC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAYD,EAAAA,EAAAA,QAAO,MACnBE,GAASC,EAAAA,EAAAA,GAAiBJ,EAAWE,GAErC2G,GAAW5G,EAAAA,EAAAA,QAAO,MAcxB,OAZAwD,EAAAA,EAAAA,YAAU,KACFoD,EAASjK,UACTiK,EAASjK,QAAQkK,UAAYD,EAASjK,QAAQmK,aAClD,GACD,CAACf,KAEJvC,EAAAA,EAAAA,YAAU,KACFoD,EAASjK,SACTiK,EAASjK,QAAQoK,SAAS,EAAG,EACjC,GACD,CAACrJ,KAGAsB,EAAAA,EAAAA,MAACpC,EAAAA,GAAS,CAAAN,SAAA,CAEFoK,IAAejL,EAAAA,EAAAA,KAAC2F,EAAM,CAAC3B,QAASA,EAAS/B,KAAMgJ,EAAanE,MAAOxC,KAEvEtE,EAAAA,EAAAA,KAAC6F,EAAAA,EAAe,CAACpB,OAAQA,EAAO5D,UAC5Bb,EAAAA,EAAAA,KAAA,OAAKD,UAAU,QAAQ6F,IAAKuF,EAAUpF,MAAO,CAACwF,QAAS,UAAU1K,SAEzDyJ,EAAGrF,KAAIrC,IACH,MAAM4I,EAAc,IAAI,IAAIC,IAAI7I,EAAKJ,YAAYyC,KAAIxB,GAAWwG,IAAOxG,EAAQsG,MAAMG,OAAO,kBAC5F,OACI3G,EAAAA,EAAAA,MAACmI,EAAAA,EAAIC,KAAI,CAACtG,SAAUzC,EAAK9C,GAAGe,SAAA,CAEpB2K,EAAYvG,KAAI8E,IAERxG,EAAAA,EAAAA,MAAA,OAAKxD,UAAU,QAAOc,SAAA,EAClBb,EAAAA,EAAAA,KAAC4L,EAAAA,EAAc,CACXhL,KAAMmJ,IAASE,MAASC,OAAO,cAAgB,QAAUH,IAEzDnH,EAAKJ,YAAYG,QAAOc,GAAWwG,IAAOxG,EAAQsG,MAAMG,OAAO,gBAAkBH,IAC5E9E,KAAI,CAACxB,EAASoI,KAEP7L,EAAAA,EAAAA,KAAC8L,EAAO,CAEJ9J,KAAMyB,EACNqG,WAAY,GAAGlH,EAAKR,aAAaQ,EAAKP,YAFjCoB,EAAQ3D,QART,GAAG8C,EAAK9C,MAAMiK,OAmBlDnH,EAAKL,WACLvC,EAAAA,EAAAA,KAAC+L,EAAAA,GAAS,CAAAlL,UACNb,EAAAA,EAAAA,KAACgM,IAAM,CAACC,cAAeC,QAzBDtJ,EAAK9C,GA4B5B,SAM/BE,EAAAA,EAAAA,KAAClB,EAAK,CAACwL,GAAItG,EAASlE,GAAImC,EAAM6E,MAAOtC,MAC7B,EC1EpB,EAbkB/E,IAAsB,IAArB,QAACuE,EAAO,KAAE/B,GAAKxC,EAC9B,OACIO,EAAAA,EAAAA,KAAC0L,EAAAA,EAAIS,QAAO,CAAC/G,GAAII,EAAAA,EAAQC,KAAK,YAAY2G,OAAQ,IAAIvL,SAErC,KAAToB,GACIjC,EAAAA,EAAAA,KAACqM,EAAAA,EAAiB,CAACzL,KAAK,uCAExBZ,EAAAA,EAAAA,KAACsM,EAAI,CAACtI,QAASA,EAAS/B,KAAMA,KAE5B,C,sHCXtB,MAAMT,EAActC,IAAM,QAAS,CAC/BC,MAAOA,EAAAA,GAAM8B,OACb5B,KAAM,YAGG8B,EAAYpC,EAAAA,GAAOoB,GAAG;IAC/BY,EAAAA,GAAKa;;;;;MAKHb,EAAAA,GAAKa;;;;;;;;EAUE+D,EAAS5G,EAAAA,GAAOoB,GAAG;6BACHqB;;EAIhB2E,EAASpH,EAAAA,GAAOoB,GAAG;;0BAENqB;;;;;;;;;;;;;;;mBAePvC,EAAAA,GAAU;eACdK,EAAAA,GAAOE;;;;;;;;;;;;;;EAgBTuM,EAAYhN,EAAAA,GAAOoB,GAAG;;;EAKtB2F,EAAO/G,EAAAA,GAAOoB,GAAG;wBACN0B,GAASA,EAAM4C;;kFCpEvC,MA0CA,EA1CyB8H,CAAC3G,EAAK4G,KAC3B,MAAOC,EAAaC,IAAkBrI,EAAAA,EAAAA,eAAShB,IACxCsJ,EAAeC,IAAoBvI,EAAAA,EAAAA,eAAShB,GAE7CwJ,EAAeA,KACjB,MAAM,QAAE3L,GAAY0E,EACc,IAAlC1E,EAAQL,SAAS,GAAGuK,UAAkBlK,EAAQ4L,UAAUC,IAAI,UAAY7L,EAAQ4L,UAAUE,OAAO,UAEtE9L,EAAQL,SAAS,GAAGwK,eAAkB5B,KAAKwD,KAAK/L,EAAQL,SAAS,GAAGuK,WAAalK,EAAQL,SAAS,GAAGqM,cAAiBhM,EAAQL,SAAS,GAAGwK,eAAkB5B,KAAKC,MAAMxI,EAAQL,SAAS,GAAGuK,WAAalK,EAAQL,SAAS,GAAGqM,aAClOhM,EAAQ4L,UAAUC,IAAI,aAAe7L,EAAQ4L,UAAUE,OAAO,YAAY,EA8BnG,OA3BAjF,EAAAA,EAAAA,YAAU,KACN,MAAM,QAAE7G,GAAY0E,EAEduH,EAAUA,KACZP,EAAiB1L,EAAQL,SAAS,GAAGwK,cAErC,MAAM+B,EAAclM,EAAQL,SAAS,GAAGwK,aAAenK,EAAQL,SAAS,GAAGqM,aAE3ER,EAAeU,GAER,OAAPlM,QAAO,IAAPA,GAAAA,EAAS4L,UAAUO,OAAO,eAAgBD,GAE1ClM,EAAQL,SAAS,GAAGyM,iBAAiB,SAAUT,GAE3CL,GAAUA,EAASY,EAAY,EAGnClM,IAEI,mBAAoB+B,QACpB,IAAIsK,eAAeJ,GAASK,QAAQtM,GAExCiM,IACJ,GAEA,CAACvH,EAAK4G,EAAUG,IAEbF,CAAW,E,eCjCtB,MAAMgB,EAAW1O,EAAAA,GAAOoB,GAAG;wBACH0B,GAASA,EAAM4C;;;;;;;;gBAQvB5C,GAAwB,UAAfA,EAAM6L,KAAmB,GAAK;;;oBAGnCxO,IAAM,QAAS,CAC3BC,MAAO,wEACPE,KAAM;;;;;;;;;;;;;;;;;;;;;;;;;EAuCd,EAXwBI,IAA+B,IAA9B,SAACoB,EAAQ,OAAE4D,EAAM,KAAEiJ,GAAKjO,EAC7C,MAAMmG,GAAMrB,EAAAA,EAAAA,QAAO,MACbkI,EAAcF,EAAiB3G,GAErC,OACI5F,EAAAA,EAAAA,KAACyN,EAAQ,CAAC1N,UAAW0M,EAAc,sBAAwB,GAAIhI,OAAQA,EAAQmB,IAAKA,EAAK8H,KAAMA,EAAK7M,SAC/FA,GACM,C,kDCvDnB,MAYA,EAZyB6D,CAACiJ,EAAQC,KAC9B,MAAOjB,EAAeC,IAAoBvI,EAAAA,EAAAA,UAAS,GAQnD,OAPA0D,EAAAA,EAAAA,YAAU,KACL,GAAe,OAAX4F,GAAiC,OAAdC,EAAoB,CACvC,MAAMC,EAAYF,EAAOzM,QAAUyM,EAAOzM,QAAQgM,aAAe,EAC3DY,EAAeF,GAAaA,EAAU1M,QAAU0M,EAAU1M,QAAQgM,aAAe,EACvFN,EAAiBiB,EAAYC,EACjC,IACF,CAACH,EAAQC,IACLjB,CAAa,C,8ECTjB,MAAMoB,EAAQC,EAAAA,EAAS;;;;;;;;;;;;;;;;;;;;;;EAwBjBC,EAAOD,EAAAA,EAAS;;;;;;;;;;;;EAchBjM,EAAMiM,EAAAA,EAAS;;;;;;;;;;EAYfE,EAASF,EAAAA,EAAS;;;;;;;;;EAWRA,EAAAA,EAAS","sources":["UI/Field/index.jsx","UI/GroupSeparator/index.jsx","UI/SelectPlaceholder/index.jsx","UI/TabNav/style.js","components/Messenger/UsersList/User/style.js","components/Messenger/UsersList/User/index.jsx","components/Messenger/UsersList/index.jsx","components/Messenger/Header/style.js","UI/ActionButton/index.jsx","components/Messenger/Header/index.jsx","components/Messenger/Message/style.js","components/Waveform/index.jsx","components/Messenger/Message/index.jsx","components/Messenger/Input/index.jsx","components/Messenger/Main/index.jsx","components/Messenger/index.jsx","components/Messenger/style.js","hooks/useElementScroll.js","components/ScrollContainer/index.jsx","hooks/useContentHeight.js","styles/keyframes.js"],"sourcesContent":["// styling\r\nimport styled from 'styled-components';\r\nimport {colors, dark, light, textSizes} from 'styles/vars';\r\nimport theme from 'styled-theming';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Input = styled.input`\r\n  height: 40px;\r\n  padding: 10px 16px;\r\n  border-radius: 8px;\r\n  border: 1px solid transparent;\r\n  font-size: ${textSizes['14']};\r\n  ${theme('theme', {\r\n    light: `\r\n    background-color: ${light.highlight};\r\n   `,\r\n    dark: `\r\n    background-color: ${dark.highlight};\r\n   `\r\n  })};\r\n  transition: border-color var(--transition), box-shadow var(--transition);\r\n  \r\n  &.error {\r\n    border-color: ${colors.error};\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: ${theme('theme', {\r\n      light: `0 0 0 2px #A2C0D4`,\r\n      dark: `0 0 0 2px ${colors.dark}`\r\n    })};\r\n  }\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 0 2px ${colors.blue};\r\n  }\r\n`\r\n\r\nconst Field = ({type = 'text', placeholder, value, handler, id, className}) => {\r\n    return <Input type={type}\r\n                  placeholder={placeholder}\r\n                  value={value}\r\n                  onChange={handler}\r\n                  id={id}\r\n                  className={className || ''}\r\n    />\r\n}\r\n\r\nField.propTypes = {\r\n    type: PropTypes.oneOf(['text', 'password', 'email', 'number', 'search']),\r\n    placeholder: PropTypes.string\r\n}\r\n\r\nexport default Field;","// styling\r\nimport styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {effects, fonts, textSizes, dark, light} from 'styles/vars';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Separator = styled.div`\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    border-bottom: ${theme('theme', {\r\n        light: effects.dashedLight,\r\n        dark: effects.dashedDark\r\n    })};\r\n    left: 0;\r\n    right: 0;\r\n    transform: translateY(-50%);\r\n    z-index: 1;\r\n  }\r\n`\r\n\r\nconst SeparatorText = styled.span`\r\n  text-transform: uppercase;\r\n  padding: 0 6px;\r\n  position: relative;\r\n  z-index: 2;\r\n  margin-left: 17px;\r\n  font-size: ${textSizes['10']};\r\n  font-weight: 500;\r\n  font-family: ${fonts.accent};\r\n  background-color: ${theme('theme', {\r\n    light: light.widgetBg,\r\n    dark: dark.widgetBg\r\n  })};\r\n})\r\n`\r\n\r\nconst GroupSeparator = ({text}) => {\r\n    return (\r\n        <Separator className=\"separator\">\r\n            <SeparatorText>{text}</SeparatorText>\r\n        </Separator>\r\n    )\r\n}\r\n\r\nGroupSeparator.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GroupSeparator;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {dark, fonts, light, textSizes, flex} from 'styles/vars';\r\n\r\nconst Placeholder = styled.div`\r\n  display: flex;\r\n  ${flex.center};\r\n  height: 100%;\r\n  \r\n  p {\r\n    width: fit-content;\r\n    padding: 8px 16px;\r\n    background-color: ${theme('theme', {\r\n      light: light.bodyBg,\r\n      dark: dark.bodyBg\r\n    })};\r\n    border-radius: 16px;\r\n    line-height: 1;\r\n    font-family: ${fonts.accent};\r\n    font-weight: 500;\r\n    font-size: ${textSizes['14']};\r\n  }\r\n`;\r\n\r\nconst SelectPlaceholder = ({text}) => {\r\n    return (\r\n        <Placeholder>\r\n            <p>{text}</p>\r\n        </Placeholder>\r\n    );\r\n}\r\n\r\nexport default SelectPlaceholder;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {flex, textSizes, light, dark, colors} from 'styles/vars';\r\n\r\nconst current = theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: light.text\r\n})\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-auto-columns: minmax(0, 1fr);\r\n  grid-auto-flow: column;\r\n  grid-gap: 2px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  height: 40px;\r\n  font-size: ${textSizes['14']};\r\n  text-transform: capitalize;\r\n  transition: background-color var(--transition);\r\n  ${theme('theme', {\r\n    light: `\r\n        color: ${colors.blue};\r\n        background-color: ${light.highlight};\r\n    `,\r\n    dark: `\r\n        color: ${colors.secondary};\r\n        background-color: ${dark.highlight};\r\n    `\r\n  })};\r\n  display: flex;\r\n  ${flex.center}\r\n  \r\n  &[aria-selected=\"true\"],\r\n  &.active,\r\n  &:hover, &:focus {\r\n    background-color: ${current};\r\n  }\r\n`\r\n\r\nexport const Item = styled.div`\r\n  &.active .nav-link {\r\n    background-color: ${current};\r\n  };\r\n`","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {flex, colors, textSizes, light, dark} from 'styles/vars';\r\nimport {rgba} from 'polished';\r\nimport {pen} from 'styles/keyframes';\r\n\r\nconst borderColor = theme('theme', {\r\n    light: rgba(light.bodyBg, 0.5),\r\n    dark: rgba('#4A4F54', 0.5),\r\n});\r\n\r\nexport const UserItem = styled.div`\r\n  margin: 2px;\r\n  position: relative;\r\n  cursor: pointer;\r\n\r\n  &:not(:last-of-type) {\r\n    border-bottom: 1px solid ${borderColor};\r\n  }\r\n\r\n  &:hover, &.active {\r\n    .container {\r\n      &:after {\r\n        opacity: 1;\r\n      }\r\n\r\n      .main_wrapper .preview {\r\n        &:after {\r\n          opacity: 0;\r\n        }\r\n\r\n        &:before {\r\n          opacity: 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .container {\r\n    padding: 20px 22px;\r\n    display: flex;\r\n    ${flex.between};\r\n    position: relative;\r\n\r\n    &:after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background-color: ${theme('theme', {\r\n        light: light.bodyBg,\r\n        dark: dark.bodyBg\r\n      })};\r\n      border-radius: 8px;\r\n      transition: opacity var(--transition);\r\n      z-index: 1;\r\n      opacity: 0;\r\n    }\r\n\r\n    .qty-badge {\r\n      position: absolute;\r\n      right: 20px;\r\n    }\r\n\r\n    .main {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 20px;\r\n      position: relative;\r\n      z-index: 2;\r\n      width: 100%;\r\n      \r\n      &_wrapper {\r\n        ${flex.col};\r\n        gap: 4px;\r\n        width: calc(100% - 60px);\r\n\r\n        .name {\r\n          font-weight: ${props => props.hasUnread && '500'};\r\n        }\r\n\r\n        .preview {\r\n          color: ${colors.blue};\r\n          font-size: ${textSizes['14']};\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          position: relative;\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n            text-overflow: ellipsis;\r\n          max-width: calc(100% - 60px);\r\n\r\n          &:after, &:before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            height: 100%;\r\n            width: 100px;\r\n            transition: opacity var(--transition);\r\n          }\r\n\r\n          &:after {\r\n            background: ${theme('theme', {\r\n              light: `linear-gradient(270deg, ${light.widgetBg} 0%, ${rgba(light.widgetBg, 0.0001)} 100%)`,\r\n              dark: `linear-gradient(270deg, ${dark.widgetBg} 0%, ${rgba(dark.widgetBg, 0.0001)} 100%)`,\r\n            })};\r\n          }\r\n\r\n          &:before {\r\n            background: ${theme('theme', {\r\n              light: `linear-gradient(270deg, ${light.bodyBg} 0%, ${rgba(light.bodyBg, 0.0001)} 100%)`,\r\n              dark: `linear-gradient(270deg, ${dark.bodyBg} 0%, ${rgba(dark.bodyBg, 0.0001)} 100%)`,\r\n            })};\r\n            opacity: 0;\r\n          }\r\n\r\n          .icon {\r\n            font-size: ${textSizes['12']};\r\n\r\n            &-pen {\r\n              animation: ${pen} 1.5s ease-in-out infinite both;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","// styled components\r\nimport {UserItem} from 'components/Messenger/UsersList/User/style';\r\n\r\n// components\r\nimport Avatar from 'UI/Avatar';\r\nimport {QtyBadge} from 'UI/Badge/style';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst User = ({data, user, onUserSelect, setModal}) => {\r\n    const {firstName, lastName, online, isTyping, chatHistory, avatar} = data;\r\n    const unread = chatHistory.filter(item => !item.read).length;\r\n    const lastUnread = chatHistory.filter(item => !item.read)[unread - 1];\r\n    const smallScreen = window.matchMedia('(max-width: 1038.98px)').matches;\r\n\r\n    const handleClick = () => {\r\n        onUserSelect(data.id);\r\n        smallScreen && setModal(true);\r\n    }\r\n\r\n    const Preview = () => {\r\n        if (lastUnread.audio !== undefined) {\r\n            return (\r\n                <span className=\"preview\">\r\n                    <i className=\"icon icon-play\"/> Audio message\r\n                </span>\r\n            )\r\n        } else if (lastUnread.media !== undefined) {\r\n            return (\r\n                <span className=\"preview\">\r\n                    <i className=\"icon icon-image\"/> Photo\r\n                </span>\r\n            )\r\n        } else if (isTyping) {\r\n            return (\r\n                <span className=\"preview\">\r\n                    <i className=\"icon icon-pen\"/> Typing...\r\n                </span>\r\n            )\r\n        } else {\r\n            return <span className=\"preview\">{lastUnread.message}</span>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <UserItem className={user === data.id ? 'active' : ''} onClick={handleClick} hasUnread={unread > 0}>\r\n            <div className=\"container\">\r\n                <div className=\"main\">\r\n                    <Avatar avatar={avatar} alt={`${firstName} ${lastName}`} online={online} />\r\n                    <div className=\"main_wrapper\">\r\n                        <span className=\"name\">{firstName} {lastName}</span>\r\n                        {\r\n                            lastUnread ? <Preview /> : data.speciality && <span className=\"preview\">{data.speciality}</span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {unread > 0 && <QtyBadge className=\"qty-badge\">{unread}</QtyBadge>}\r\n            </div>\r\n        </UserItem>\r\n    )\r\n}\r\n\r\nUser.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    onUserSelect: PropTypes.func.isRequired\r\n}\r\n\r\nexport default User;","// styled components\r\nimport Field from 'UI/Field';\r\nimport {Footer, Header, List} from 'components/Messenger/style';\r\nimport {Container, Button} from 'UI/TabNav/style';\r\n\r\n// components\r\nimport Widget from 'components/Widget';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport User from 'components/Messenger/UsersList/User';\r\nimport ScrollContainer from 'components/ScrollContainer';\r\nimport NoDataPlaceholder from 'components/NoDataPlaceholder';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\n// hooks\r\nimport {useRef, useState} from 'react';\r\nimport useContentHeight from 'hooks/useContentHeight';\r\n\r\n// data placeholder\r\nimport {doctor, patient} from 'db/messenger';\r\n\r\nconst UserList = ({variant, user, onUserSelect, setModal, activeList, setActiveList}) => {\r\n    const [query, setQuery] = useState('');\r\n    const placeholder = variant === 'doctor' && activeList !== 'doctors' ? 'Search patients' : 'Search doctor or medical department';\r\n\r\n    const headerRef = useRef(null);\r\n    const footerRef = useRef(null);\r\n    const height = useContentHeight(headerRef, footerRef);\r\n\r\n    const drawList = (arr, role) => {\r\n        const list = arr.filter(item => {\r\n            const fullName = `${item.firstName} ${item.lastName}`;\r\n            return fullName.toLowerCase().includes(query.toLowerCase()) && item.role === role;\r\n        })\r\n            .map(item => (\r\n                <Nav.Link as=\"div\" key={item.id} eventKey={item.id} onClick={() => onUserSelect(item.id)}>\r\n                    <User user={user} data={item} onUserSelect={onUserSelect} setModal={setModal}/>\r\n                </Nav.Link>\r\n            ));\r\n        return list.length ? list : <NoDataPlaceholder/>;\r\n    }\r\n\r\n    return (\r\n        <Widget name=\"MessengerUserList\">\r\n            {\r\n                variant === 'doctor' && (\r\n                    <>\r\n                        <Header ref={headerRef}>\r\n                            <Container>\r\n                                <Button className={activeList === 'patients' ? 'active' : ''} onClick={() => setActiveList('patients')}>\r\n                                    Patients\r\n                                </Button>\r\n                                <Button className={activeList === 'doctors' ? 'active' : ''} onClick={() => setActiveList('doctors')}>\r\n                                    Doctors\r\n                                </Button>\r\n                            </Container>\r\n                        </Header>\r\n                        <ScrollContainer height={height}>\r\n                            <List className=\"track\">\r\n                                <div style={{margin: '2px 0'}}>\r\n                                    {\r\n                                        activeList === 'patients' ?\r\n                                            drawList(doctor, 'patient') : drawList(doctor, 'doctor')\r\n                                    }\r\n                                </div>\r\n                            </List>\r\n                        </ScrollContainer>\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                variant === 'patient' &&\r\n                <ScrollContainer height={height}>\r\n                    <List className=\"track\">\r\n                        {drawList(patient, 'doctor')}\r\n                    </List>\r\n                </ScrollContainer>\r\n            }\r\n            <Footer ref={footerRef}>\r\n                <div className=\"search\">\r\n                    <Field type=\"search\" placeholder={placeholder} value={query}\r\n                           handler={e => setQuery(e.target.value)}/>\r\n                    <button className={query !== '' ? 'visible' : ''} onClick={() => setQuery('')}>\r\n                        <i className=\"icon icon-close\"/>\r\n                    </button>\r\n                </div>\r\n            </Footer>\r\n        </Widget>\r\n    );\r\n}\r\n\r\nUserList.propTypes = {\r\n    variant: PropTypes.oneOf(['doctor', 'patient']).isRequired,\r\n    onUserSelect: PropTypes.func.isRequired,\r\n    user: PropTypes.any.isRequired\r\n}\r\n\r\nexport default UserList;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {breakpoints, colors, dark, flex, light, textSizes} from 'styles/vars';\r\n\r\nexport const HeaderContainer = styled.div`\r\n  padding: 20px 24px;\r\n  border-bottom: 2px solid ${theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: '#4A4F54'\r\n  })};\r\n  display: flex;\r\n  ${flex.between};\r\n  gap: 16px;\r\n\r\n  .main {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n\r\n    .title {\r\n      font-size: ${textSizes['16']};\r\n    }\r\n\r\n    .avatar {\r\n      display: none;\r\n\r\n      ${breakpoints.mobileL} {\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n\r\n  .actions {\r\n    display: flex;\r\n    gap: 20px;\r\n\r\n    .btn-action {\r\n      background-color: ${theme('theme', {\r\n        light: light.highlight,\r\n        dark: dark.highlight\r\n      })};\r\n\r\n      &:hover, &:focus {\r\n        background-color: ${colors.blue};\r\n      }\r\n    }\r\n  }\r\n\r\n  ${breakpoints.tablet} {\r\n    .main .title {\r\n      font-size: ${textSizes['20']};\r\n    }\r\n  }\r\n`;","// styling\r\nimport styled from 'styled-components';\r\nimport {textSizes, light, colors, flex, breakpoints} from 'styles/vars';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  ${flex.center};\r\n  gap: 8px;\r\n  border-radius: 20px;\r\n  font-size: ${textSizes['14']};\r\n  height: 40px;\r\n  width: 40px;\r\n  color: ${light.text};\r\n  transition: color var(--transition), background-color var(--transition);\r\n\r\n  .icon {\r\n    color: ${colors.gray};\r\n    transition: color var(--transition);\r\n  }\r\n\r\n  .text {\r\n    display: none;\r\n  }\r\n\r\n  &:hover, &:focus {\r\n    background-color: ${colors.blue};\r\n    color: #fff;\r\n\r\n    .icon {\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.mobileL} {\r\n    width: fit-content;\r\n    padding: 0 16px;\r\n    .text {\r\n      display: block;\r\n    }\r\n  }\r\n`\r\n\r\nconst ActionButton = ({handler, user = 'doctor'}) => {\r\n    const options = {\r\n        icon: user === 'doctor' ? 'painmap' : 'plus-circle',\r\n        text: user === 'doctor' ? 'Case history' : 'Make an appointment',\r\n    }\r\n    return (\r\n        <Button className=\"btn-action\" onClick={handler}>\r\n            <i className={`icon icon-${options.icon}`}></i> <span className=\"text\">{options.text}</span>\r\n        </Button>\r\n    )\r\n}\r\n\r\nActionButton.propTypes = {\r\n    handler: PropTypes.func,\r\n    user: PropTypes.oneOf(['doctor', 'patient'])\r\n}\r\n\r\nexport default ActionButton;","// styled components\r\nimport {HeaderContainer} from 'components/Messenger/Header/style';\r\n\r\n// components\r\nimport Avatar from 'UI/Avatar';\r\nimport ShapeButton from 'UI/ShapeButton';\r\nimport ActionButton from 'UI/ActionButton';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({user, variant, elRef}) => {\r\n    const {role, firstName, lastName, online, avatar} = user;\r\n\r\n    return (\r\n        <HeaderContainer ref={elRef}>\r\n            <div className=\"main\">\r\n                <Avatar avatar={avatar} online={online} alt={`${firstName} ${lastName}`}/>\r\n                <h3 className=\"title\">{role === 'doctor' && 'Dr.'} {firstName} {lastName}</h3>\r\n            </div>\r\n            <div className=\"actions\">\r\n                {\r\n                    variant === 'doctor' && role !== 'doctor' ? <ActionButton/> : null\r\n                }\r\n                <ShapeButton shape=\"round\" icon=\"phone\" label=\"Call\"/>\r\n            </div>\r\n        </HeaderContainer>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    variant: PropTypes.oneOf(['doctor', 'patient']).isRequired\r\n}\r\n\r\nexport default Header;","import styled from 'styled-components';\r\nimport {dark, breakpoints, flex, fonts, light, textSizes} from 'styles/vars';\r\nimport theme from 'styled-theming';\r\n\r\nexport const MessageContainer = styled.div`\r\n  margin: ${props => props.sender === 'current' ? '0 24px 0 auto' : '0 auto 0 24px'};\r\n  ${flex.col};\r\n  gap: 8px;\r\n  max-width: 60%;\r\n  width: fit-content;\r\n  padding-bottom: 20px;\r\n\r\n  .metadata {\r\n    font-family: ${fonts.accent};\r\n    font-size: ${textSizes['12']};\r\n    text-align: ${props => props.sender === 'current' ? 'right' : 'left'};\r\n  }\r\n\r\n  .content {\r\n    border-radius: 8px;\r\n    padding: ${props => props.hasAudio ? '20px' : '10px'};\r\n    background-color: ${theme('theme', {\r\n      light: props => props.sender !== 'current' ? light.bodyBg : light.highlight,\r\n      dark: props => props.sender !== 'current' ? dark.bodyBg : dark.highlight,\r\n    })};\r\n    gap: 10px;\r\n    width: fit-content;\r\n    word-break: break-word;\r\n    overflow: hidden;\r\n    will-change: transform;\r\n    line-height: 1.5;\r\n    font-size: ${textSizes['14']};\r\n\r\n    img {\r\n      border-radius: 4px;\r\n    }\r\n\r\n    .wave {\r\n      display: none;\r\n    }\r\n\r\n    ${breakpoints.tablet} {\r\n      font-size: ${textSizes['16']};\r\n\r\n      .wave {\r\n        display: block;\r\n        min-width: 200px;\r\n      }\r\n    }\r\n  }\r\n`;","// styling\r\nimport styled from 'styled-components';\r\nimport {colors, light, fonts, textSizes} from 'styles/vars';\r\n\r\n// components\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport ShapeButton from 'UI/ShapeButton';\r\n\r\n// hooks\r\nimport {useState, useEffect} from 'react';\r\nimport {useTheme} from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  height: 40px;\r\n  gap: 10px;\r\n\r\n  .wave {\r\n    flex-grow: 1;\r\n    min-width: 50px;\r\n    max-width: 200px;\r\n  }\r\n\r\n  .duration {\r\n    font-family: ${fonts.accent};\r\n    font-size: ${textSizes['10']};\r\n    min-width: 70px;\r\n  }\r\n`;\r\n\r\nconst Waveform = (props) => {\r\n    const [state, setState] = useState({\r\n        playing: false,\r\n        progress: 0,\r\n        duration: 0,\r\n        src: props.src,\r\n        id: props.id\r\n    });\r\n    const {theme} = useTheme();\r\n\r\n    const [wave, setWave] = useState(null);\r\n\r\n    function init() {\r\n        const track = document.querySelector(`#track_${state.id}`);\r\n        if (track) {\r\n            const waveform = WaveSurfer.create({\r\n                barWidth: 1,\r\n                cursorWidth: 1,\r\n                container: `#waveform_${props.id}`,\r\n                backend: 'WebAudio',\r\n                height: 33,\r\n                barGap: 2,\r\n                barRadius: 0.5,\r\n                progressColor: colors.blue,\r\n                responsive: true,\r\n                waveColor: theme === 'dark' ? light.text : '#87BFFF',\r\n                cursorColor: 'transparent',\r\n            });\r\n            setWave(waveform);\r\n            waveform.load(track);\r\n            waveform.on('ready', () => {\r\n                setState({...state, duration: waveform.getDuration()});\r\n            });\r\n            waveform.on('audioprocess', () => {\r\n                setState({...state, progress: waveform.getCurrentTime()});\r\n            })\r\n            waveform.on('finish', () => {\r\n                setState({...state, playing: false, progress: 0});\r\n                waveform.seekTo(0);\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (wave) {\r\n            wave.setWaveColor(theme === 'dark' ? light.text : '#87BFFF');\r\n        }\r\n    }, [theme, wave]);\r\n\r\n    const handlePlay = () => {\r\n        setState({...state, playing: !state.playing});\r\n        wave.playPause();\r\n    };\r\n\r\n    const formatTime = (time) => {\r\n        const minutes = Math.floor(time / 60);\r\n        const seconds = Math.floor(time - minutes * 60);\r\n        return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n    }\r\n\r\n    return (\r\n        <Container className=\"audio\">\r\n            <ShapeButton shape=\"round\" icon={!state.playing ? 'play' : 'pause'}\r\n                         label={!state.playing ? 'Play voice message' : 'Pause voice message'}\r\n                         handler={handlePlay}\r\n            />\r\n            <div className=\"wave\" id={`waveform_${state.id}`}/>\r\n            <audio id={`track_${state.id}`} src={props.src}/>\r\n            <div className=\"duration\">\r\n                {formatTime(state.progress)} / {formatTime(state.duration)}\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Waveform;","// styled components\r\nimport {MessageContainer} from 'components/Messenger/Message/style';\r\n\r\n// components\r\nimport Waveform from 'components/Waveform';\r\n\r\n// hooks\r\nimport {useTheme} from 'styled-components';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport {nanoid} from 'nanoid';\r\n\r\nconst Message = ({data, senderName}) => {\r\n    const {message, date, sender, media, audio} = data;\r\n    const {theme} = useTheme();\r\n    const displayName = sender === 'current' ? 'You' : senderName;\r\n\r\n    return (\r\n        <MessageContainer sender={sender} hasAudio={audio}>\r\n            <span className=\"metadata\">\r\n                {`${displayName}, `} {moment(date).format('hh:mm A')}\r\n            </span>\r\n            <div className=\"content\">\r\n                {message}\r\n                {media && <img src={media} alt=\"placeholder\"/>}\r\n                {audio && <Waveform src={audio} id={nanoid(5)} theme={theme}/>}\r\n            </div>\r\n        </MessageContainer>\r\n    )\r\n}\r\n\r\nMessage.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    senderName: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;","// styling\r\nimport styled from 'styled-components';\r\nimport {flex, textSizes, breakpoints} from 'styles/vars';\r\n\r\n// styled components\r\nimport {Footer} from 'components/Messenger/style';\r\nimport ShapeButton from 'UI/ShapeButton';\r\n\r\n// hooks\r\nimport {useRef} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport {nanoid} from 'nanoid';\r\n\r\n// actions\r\nimport {addMessage} from 'store/features/messenger';\r\n\r\nconst InputFooter = styled(Footer)`\r\n  padding: 15px 24px 20px;\r\n  form {\r\n    display: flex;\r\n    ${flex.between};\r\n    gap: 8px;\r\n\r\n    input {\r\n      height: 40px;\r\n      max-width: calc(100% - 48px);\r\n\r\n      &::placeholder {\r\n        font-size: ${textSizes['14']};;\r\n      }\r\n    }\r\n    \r\n    ${breakpoints.tablet} {\r\n        input::placeholder {\r\n            font-size: ${textSizes['18']};\r\n        }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = ({db, id, elRef}) => {\r\n    const inputRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const message = {\r\n            sender: 'current',\r\n            message: inputRef.current.value,\r\n            date: moment().valueOf(),\r\n            read: false,\r\n            id: nanoid(),\r\n        };\r\n\r\n        if (inputRef.current.value !== '') {\r\n            dispatch(addMessage({db, id, message}));\r\n            inputRef.current.value = '';\r\n            inputRef.current.blur();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <InputFooter ref={elRef}>\r\n            <form onSubmit={handleSubmit}>\r\n                <input ref={inputRef} type=\"text\" placeholder=\"Type a message...\" spellCheck={true} />\r\n                <ShapeButton shape=\"round\" icon=\"paper-plane\" label=\"Send\" type=\"submit\"/>\r\n            </form>\r\n        </InputFooter>\r\n    )\r\n}\r\n\r\nInput.propTypes = {\r\n    db: PropTypes.oneOf(['doctor', 'patient']).isRequired,\r\n    id: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Input;","// styled components\r\nimport {Container, Animation} from 'components/Messenger/style';\r\n\r\n// components\r\nimport Header from 'components/Messenger/Header';\r\nimport Message from 'components/Messenger/Message';\r\nimport Input from 'components/Messenger/Input';\r\nimport Lottie from 'lottie-react';\r\nimport GroupSeparator from 'UI/GroupSeparator';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport ScrollContainer from 'components/ScrollContainer';\r\n\r\n// utils\r\nimport moment from 'moment';\r\n\r\n// hooks\r\nimport {useRef, useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport useContentHeight from 'hooks/useContentHeight';\r\n\r\n// assets\r\nimport typing from 'assets/typing.json';\r\n\r\nconst Main = ({user, variant}) => {\r\n    const doctor = useSelector(state => state['messenger']['doctor']);\r\n    const patient = useSelector(state => state['messenger']['patient']);\r\n    const db = variant === 'patient' ? patient : doctor;\r\n    const currentUser = user && db.find(item => item.id === user);\r\n\r\n    const headerRef = useRef(null);\r\n    const footerRef = useRef(null);\r\n    const height = useContentHeight(headerRef, footerRef);\r\n\r\n    const trackRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (trackRef.current) {\r\n            trackRef.current.scrollTop = trackRef.current.scrollHeight;\r\n        }\r\n    }, [db]);\r\n\r\n    useEffect(() => {\r\n        if (trackRef.current) {\r\n            trackRef.current.scrollTo(0, 0);\r\n        }\r\n    }, [user]);\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                currentUser && <Header variant={variant} user={currentUser} elRef={headerRef}/>\r\n            }\r\n            <ScrollContainer height={height}>\r\n                <div className=\"track\" ref={trackRef} style={{padding: '20px 0'}}>\r\n                    {\r\n                        db.map(item => {\r\n                            const uniqueDates = [...new Set(item.chatHistory.map(message => moment(message.date).format('DD.MM.YYYY')))];\r\n                            return (\r\n                                <Tab.Pane eventKey={item.id} key={item.id}>\r\n                                    {\r\n                                        uniqueDates.map(date => {\r\n                                            return (\r\n                                                <div className=\"group\" key={`${item.id}-${date}`}>\r\n                                                    <GroupSeparator\r\n                                                        text={date === moment().format('DD.MM.YYYY') ? 'Today' : date}/>\r\n                                                    {\r\n                                                        item.chatHistory.filter(message => moment(message.date).format('DD.MM.YYYY') === date)\r\n                                                            .map((message, i) => {\r\n                                                                return (\r\n                                                                    <Message\r\n                                                                        key={message.id}\r\n                                                                        data={message}\r\n                                                                        senderName={`${item.firstName} ${item.lastName}`}/>\r\n                                                                )\r\n                                                            })\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    {\r\n                                        item.isTyping &&\r\n                                        <Animation>\r\n                                            <Lottie animationData={typing}/>\r\n                                        </Animation>\r\n                                    }\r\n                                </Tab.Pane>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </ScrollContainer>\r\n            <Input db={variant} id={user} elRef={footerRef}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Main;","// components\r\nimport Widget from 'components/Widget';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport SelectPlaceholder from 'UI/SelectPlaceholder';\r\nimport Main from 'components/Messenger/Main';\r\n\r\nconst Messenger = ({variant, user}) => {\r\n    return (\r\n        <Tab.Content as={Widget} name=\"Messenger\" mobile={600}>\r\n            {\r\n                user === '' ?\r\n                    <SelectPlaceholder text=\"Select a chart to start messaging\"/>\r\n                    :\r\n                    <Main variant={variant} user={user}/>\r\n            }\r\n        </Tab.Content>\r\n    )\r\n}\r\n\r\nexport default Messenger;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {light, textSizes, flex, colors} from 'styles/vars';\r\n\r\nconst borderColor = theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: '#4A4F54'\r\n});\r\n\r\nexport const Container = styled.div`\r\n  ${flex.col};\r\n  height: 100%;\r\n\r\n  .content {\r\n    padding: 20px 0;\r\n    ${flex.col};\r\n    flex-grow: 1;\r\n    gap: 20px;\r\n\r\n    .separator, .group {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  border-bottom: 2px solid ${borderColor};\r\n  padding: 20px 24px 19px;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  padding: 17px 24px 20px;\r\n  border-top: 2px solid ${borderColor};\r\n\r\n  .search {\r\n    position: relative;\r\n\r\n    input {\r\n      width: 100%;\r\n      padding-right: 36px;\r\n    }\r\n\r\n    button {\r\n      position: absolute;\r\n      right: 16px;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n      font-size: ${textSizes['14']};\r\n      color: ${colors.blue};\r\n      transition: .2s ease-in-out;\r\n      will-change: transform;\r\n      opacity: 0;\r\n\r\n      &:hover, &:focus {\r\n        transform: translateY(-50%) scale(1.2);\r\n      }\r\n      \r\n      &.visible {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Animation = styled.div`\r\n  max-width: 80px;\r\n  margin-top: -20px;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  height: calc(100% - ${props => props.height}px);\r\n  overflow-y: auto;\r\n`;","import {useEffect, useState} from 'react';\r\n\r\nconst useElementScroll = (ref, callback) => {\r\n    const [isOverflown, setIsOverflown] = useState(undefined);\r\n    const [contentHeight, setContentHeight] = useState(undefined);\r\n\r\n    const handleScroll = () => {\r\n        const { current } = ref;\r\n        current.children[0].scrollTop === 0 ? current.classList.add('is-top') : current.classList.remove('is-top');\r\n\r\n        const inScrolledToBottom = current.children[0].scrollHeight === (Math.ceil(current.children[0].scrollTop) + current.children[0].clientHeight) || current.children[0].scrollHeight === (Math.floor(current.children[0].scrollTop) + current.children[0].clientHeight);\r\n        inScrolledToBottom ? current.classList.add('is-bottom') : current.classList.remove('is-bottom');\r\n    }\r\n\r\n    useEffect(() => {\r\n        const { current } = ref;\r\n\r\n        const trigger = () => {\r\n            setContentHeight(current.children[0].scrollHeight);\r\n\r\n            const hasOverflow = current.children[0].scrollHeight > current.children[0].clientHeight;\r\n\r\n            setIsOverflown(hasOverflow);\r\n\r\n            current?.classList.toggle('has-overflow', hasOverflow);\r\n\r\n            current.children[0].addEventListener('scroll', handleScroll);\r\n\r\n            if (callback) callback(hasOverflow);\r\n        };\r\n\r\n        if (current) {\r\n\r\n            if ('ResizeObserver' in window) {\r\n                new ResizeObserver(trigger).observe(current);\r\n            }\r\n            trigger();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    } , [ref, callback, contentHeight]);\r\n\r\n    return isOverflown;\r\n}\r\n\r\nexport default useElementScroll;","// styling\r\nimport styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\n\r\n// hooks\r\nimport useElementScroll from 'hooks/useElementScroll';\r\nimport {useRef} from 'react';\r\n\r\nconst Scroller = styled.div`\r\n  height: calc(100% - ${props => props.height}px);\r\n  position: relative;\r\n  flex-grow: 1;\r\n\r\n  &.has-overflow {\r\n    &:before, &:after {\r\n      content: '';\r\n      display: block;\r\n      height: ${props => props.size === 'small' ? 40 : 80}px;\r\n      position: absolute;\r\n      width: 100%;;\r\n      background: ${theme('theme', {\r\n        light: 'linear-gradient(180deg, rgba(255, 255, 255, 0.0001) 0%, #FFFFFF 100%)',\r\n        dark: 'linear-gradient(180deg, rgba(23, 24, 25, 0.0001) 0%, #171819 100%)'\r\n      })};\r\n      left: 0;\r\n      z-index: 300;\r\n      transition: height var(--transition);\r\n    }\r\n\r\n    &:before {\r\n      top: 0;\r\n      transform: scaleY(-1);\r\n    }\r\n\r\n    &:after {\r\n      bottom: 0;\r\n    }\r\n\r\n    &.is-top:before,\r\n    &.is-bottom:after {\r\n      height: 0;\r\n    }\r\n  }\r\n\r\n  .track {\r\n    height: 100%;\r\n    overflow-y: auto;\r\n  }\r\n`;\r\n\r\nconst ScrollContainer = ({children, height, size}) => {\r\n    const ref = useRef(null);\r\n    const isOverflown = useElementScroll(ref);\r\n\r\n    return (\r\n        <Scroller className={isOverflown ? 'is-top has-overflow' : ''} height={height} ref={ref} size={size}>\r\n            {children}\r\n        </Scroller>\r\n    );\r\n}\r\n\r\nexport default ScrollContainer;","import {useState, useEffect} from 'react';\r\n\r\nconst useContentHeight = (topRef, bottomRef) => {\r\n    const [contentHeight, setContentHeight] = useState(0);\r\n    useEffect(() => {\r\n         if (topRef !== null && bottomRef !== null) {\r\n             const topHeight = topRef.current ? topRef.current.clientHeight : 0;\r\n             const bottomHeight = bottomRef && bottomRef.current ? bottomRef.current.clientHeight : 0;\r\n             setContentHeight(topHeight + bottomHeight);\r\n         }\r\n    }, [topRef, bottomRef]);\r\n    return contentHeight;\r\n}\r\n\r\nexport default useContentHeight;","import {keyframes} from 'styled-components';\r\n\r\nexport const pulse = keyframes`\r\n  from {\r\n    transform: scale(1);\r\n    transform-origin: center center;\r\n    animation-timing-function: linear;\r\n  }\r\n  10% {\r\n    transform: scale(0.91);\r\n    animation-timing-function: linear;\r\n  }\r\n  17% {\r\n    transform: scale(0.98);\r\n    animation-timing-function: linear;\r\n  }\r\n  33% {\r\n    transform: scale(0.87);\r\n    animation-timing-function: linear;\r\n  }\r\n  45% {\r\n    transform: scale(1);\r\n    animation-timing-function: linear;\r\n  }\r\n`\r\n\r\nexport const aura = keyframes`\r\n  0% {\r\n    opacity: 1;\r\n    transform: scale(0);\r\n  }\r\n  90% {\r\n    opacity: .3;\r\n  }\r\n  to {\r\n    opacity: .1;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport const pen = keyframes`\r\n  0% {\r\n    transform: translateX(0);\r\n  }\r\n  50% {\r\n    transform: translateX(2px);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nexport const fadeIn = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(2px);\r\n  }\r\n    100% {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    }\r\n`;\r\n\r\nexport const fadeOut = keyframes`\r\n  0% {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n    100% {\r\n    opacity: 0;\r\n    transform: translateY(2rem);\r\n    }\r\n`;"],"names":["Input","styled","input","textSizes","theme","light","highlight","dark","colors","error","blue","_ref","type","placeholder","value","handler","id","className","_jsx","onChange","Separator","div","effects","dashedLight","dashedDark","SeparatorText","span","fonts","accent","widgetBg","text","children","Placeholder","flex","center","bodyBg","current","Container","Button","button","secondary","Item","borderColor","rgba","UserItem","between","col","props","hasUnread","pen","data","user","onUserSelect","setModal","firstName","lastName","online","isTyping","chatHistory","avatar","unread","filter","item","read","length","lastUnread","smallScreen","window","matchMedia","matches","Preview","undefined","audio","_jsxs","media","message","onClick","handleClick","Avatar","alt","speciality","QtyBadge","variant","activeList","setActiveList","query","setQuery","useState","headerRef","useRef","footerRef","height","useContentHeight","drawList","arr","role","list","toLowerCase","includes","map","Nav","Link","as","eventKey","User","NoDataPlaceholder","Widget","name","_Fragment","Header","ref","ScrollContainer","List","style","margin","doctor","patient","Footer","Field","e","target","HeaderContainer","breakpoints","mobileL","tablet","gray","options","icon","elRef","ActionButton","ShapeButton","shape","label","MessageContainer","sender","hasAudio","state","setState","playing","progress","duration","src","useTheme","wave","setWave","useEffect","track","document","querySelector","waveform","WaveSurfer","barWidth","cursorWidth","container","backend","barGap","barRadius","progressColor","responsive","waveColor","cursorColor","load","on","getDuration","getCurrentTime","seekTo","init","setWaveColor","formatTime","time","minutes","Math","floor","seconds","handlePlay","playPause","senderName","date","displayName","moment","format","Waveform","nanoid","InputFooter","db","inputRef","dispatch","useDispatch","onSubmit","preventDefault","valueOf","addMessage","blur","spellCheck","useSelector","currentUser","find","trackRef","scrollTop","scrollHeight","scrollTo","padding","uniqueDates","Set","Tab","Pane","GroupSeparator","i","Message","Animation","Lottie","animationData","typing","Content","mobile","SelectPlaceholder","Main","useElementScroll","callback","isOverflown","setIsOverflown","contentHeight","setContentHeight","handleScroll","classList","add","remove","ceil","clientHeight","trigger","hasOverflow","toggle","addEventListener","ResizeObserver","observe","Scroller","size","topRef","bottomRef","topHeight","bottomHeight","pulse","keyframes","aura","fadeIn"],"sourceRoot":""}