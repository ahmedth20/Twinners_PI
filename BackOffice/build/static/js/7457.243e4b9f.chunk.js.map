{"version":3,"file":"static/js/7457.243e4b9f.chunk.js","mappings":"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","sources":["UI/Btn/index.jsx","UI/Field/index.jsx","UI/Select/style.js","UI/Select/index.jsx","UI/TabNav/TabNavItem/index.jsx","UI/TabNav/index.jsx","UI/TabNav/style.js","components/Widget/WidgetBody/index.jsx","components/Widget/index.jsx","components/Widget/style.js","hooks/useNotistack.js","layout/Page/style.js","layout/Grid/index.jsx","layout/Page/index.jsx","widgets/UserSettings/style.js","components/DropFiles/index.jsx","UI/LabeledFormInput/index.jsx","components/MaskedInputs/Date/style.js","components/MaskedInputs/Date/index.jsx","components/MaskedInputs/Phone/index.jsx","widgets/UserSettings/Form/index.jsx","widgets/UserSettings/index.jsx","pages/Settings.jsx","styles/keyframes.js"],"sourcesContent":["// styling\r\nimport styled from 'styled-components';\r\nimport {colors, textSizes, fonts, flex} from 'styles/vars';\r\nimport {darken} from 'polished';\r\n\r\n// utils\r\nimport {motion, AnimatePresence} from 'framer-motion';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n  border-radius: 8px;\r\n  background-color: ${colors.blue};\r\n  color: #fff;\r\n  font-size: ${textSizes['14']};\r\n  font-family: ${fonts.accent};\r\n  height: 40px;\r\n  width: 100%;\r\n  display: flex;\r\n  ${flex.center};\r\n  gap: 8px;\r\n  line-height: 1;\r\n  transition: background-color var(--transition);\r\n  \r\n\r\n  &:hover, &:focus {\r\n    background-color: ${darken(0.1, colors.blue)};\r\n  }\r\n\r\n  &.success {\r\n    background-color: ${colors.success};\r\n\r\n    &:hover, &:focus {\r\n      background-color: ${darken(0.1, colors.success)};\r\n    }\r\n  }\r\n\r\n  &.error {\r\n    background-color: ${colors.error};\r\n\r\n    &:hover, &:focus {\r\n      background-color: ${darken(0.1, colors.error)};\r\n    }\r\n  }\r\n\r\n  &.disabled {\r\n    background-color: ${colors.gray};\r\n    pointer-events: none;\r\n  }\r\n`\r\n\r\nconst Btn = ({text, handler, type = 'button', isVisible = true, className, icon}) => {\r\n    return (\r\n        <AnimatePresence>\r\n            {\r\n                isVisible && (\r\n                    <Button as={motion.button}\r\n                            className={className ? className : ''}\r\n                            onClick={handler}\r\n                            type={type}\r\n                            initial={false}\r\n                            animate={{opacity: 1}}\r\n                            exit={{opacity: 0}}\r\n                            transition={{duration: .3}}>\r\n                        {icon && <i className={`icon icon-${icon}`} /> } {text}\r\n                    </Button>\r\n                )\r\n            }\r\n        </AnimatePresence>\r\n    )\r\n}\r\n\r\nBtn.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    handler: PropTypes.func,\r\n    type: PropTypes.oneOf(['button', 'submit', 'reset']),\r\n    isVisible: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    icon: PropTypes.string\r\n}\r\n\r\nexport default Btn;","// styling\r\nimport styled from 'styled-components';\r\nimport {colors, dark, light, textSizes} from 'styles/vars';\r\nimport theme from 'styled-theming';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Input = styled.input`\r\n  height: 40px;\r\n  padding: 10px 16px;\r\n  border-radius: 8px;\r\n  border: 1px solid transparent;\r\n  font-size: ${textSizes['14']};\r\n  ${theme('theme', {\r\n    light: `\r\n    background-color: ${light.highlight};\r\n   `,\r\n    dark: `\r\n    background-color: ${dark.highlight};\r\n   `\r\n  })};\r\n  transition: border-color var(--transition), box-shadow var(--transition);\r\n  \r\n  &.error {\r\n    border-color: ${colors.error};\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: ${theme('theme', {\r\n      light: `0 0 0 2px #A2C0D4`,\r\n      dark: `0 0 0 2px ${colors.dark}`\r\n    })};\r\n  }\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 0 2px ${colors.blue};\r\n  }\r\n`\r\n\r\nconst Field = ({type = 'text', placeholder, value, handler, id, className}) => {\r\n    return <Input type={type}\r\n                  placeholder={placeholder}\r\n                  value={value}\r\n                  onChange={handler}\r\n                  id={id}\r\n                  className={className || ''}\r\n    />\r\n}\r\n\r\nField.propTypes = {\r\n    type: PropTypes.oneOf(['text', 'password', 'email', 'number', 'search']),\r\n    placeholder: PropTypes.string\r\n}\r\n\r\nexport default Field;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {textSizes, light, dark, colors, fonts, breakpoints} from 'styles/vars';\r\nimport {fadeIn} from 'styles/keyframes';\r\nimport Select from 'react-select';\r\n\r\nconst basicBg = theme('theme', {\r\n    light: light.highlight,\r\n    dark: dark.highlight,\r\n})\r\n\r\nconst basicColor = theme('theme', {\r\n    light: light.text,\r\n    dark: dark.text,\r\n})\r\n\r\nconst NormalizedSelect = styled(Select)`\r\n  .Select {\r\n    &__control {\r\n      cursor: pointer;\r\n      transition: var(--transition);\r\n      border: none;\r\n      background-color: ${basicBg};\r\n      border-radius: 8px;\r\n      font-size: ${textSizes['16']};\r\n      height: 40px;\r\n      padding-right: 16px;\r\n\r\n      &--is-focused, &:hover {\r\n        outline: none;\r\n      }\r\n\r\n      &--is-focused, &--is-focused:hover {\r\n        box-shadow: 0 0 0 2px ${colors.blue} !important;\r\n      }\r\n\r\n      &:hover {\r\n        box-shadow: ${theme('theme', {\r\n          light: `0 0 0 2px #A2C0D4`,\r\n          dark: `0 0 0 2px ${colors.dark}`\r\n        })};\r\n      }\r\n\r\n      .icon {\r\n        transition: .3s ease-in-out;\r\n        color: ${theme('theme', {\r\n          light: '#A2C0D4',\r\n          dark: colors.gray,\r\n        })};\r\n        font-size: ${textSizes['12']};\r\n      }\r\n    }\r\n\r\n    &__menu {\r\n      min-width: max-content;\r\n      width: 100%;\r\n      color: ${basicColor};\r\n      background-color: ${basicBg};\r\n      border-radius: 8px;\r\n      animation: ${fadeIn} var(--transition);\r\n      z-index: 100;\r\n\r\n      &-list {\r\n        max-height: 180px;\r\n        overflow-y: auto;\r\n        scroll-behavior: smooth;\r\n        z-index: 100;\r\n      }\r\n    }\r\n\r\n    &__indicator, &__indicator-separator {\r\n      display: none;\r\n    }\r\n\r\n    &__option {\r\n      cursor: pointer;\r\n      transition: var(--transition);\r\n\r\n      &:hover,\r\n      &--is-focused,\r\n      &--is-selected {\r\n        background: transparent;\r\n        color: ${colors.blue};\r\n      }\r\n    }\r\n\r\n    &__single-value {\r\n      color: ${theme('theme', {\r\n        light: light.text,\r\n        dark: dark.text,\r\n      })};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Basic = styled(NormalizedSelect)`\r\n  .Select {\r\n    &__control {\r\n      font-size: ${textSizes['14']};\r\n    }\r\n\r\n    &__input-container {\r\n      color: ${basicColor};\r\n    }\r\n\r\n    &__value-container {\r\n      padding: 0 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Minimal = styled(NormalizedSelect)`\r\n  .Select {\r\n    &__control {\r\n      background-color: transparent;\r\n      width: fit-content;\r\n      font-weight: 500;\r\n      font-family: ${fonts.accent};\r\n      border-radius: 0;\r\n      height: unset;\r\n      padding: 0;\r\n      font-size: ${textSizes['18']};\r\n\r\n      &--is-focused, &:hover {\r\n        box-shadow: none !important;\r\n      }\r\n    }\r\n\r\n    &__value-container {\r\n      padding: 0 20px 0 0;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.tablet} {\r\n    .Select__control {\r\n      font-size: ${textSizes['20']};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const User = styled(NormalizedSelect)`\r\n  .Select {\r\n    &__control {\r\n      &--is-focused, &:hover {\r\n        box-shadow: none !important;\r\n      }\r\n    }\r\n\r\n    &__input-container {\r\n      padding-left: 16px;\r\n      color: inherit;\r\n    }\r\n\r\n    &__value-container {\r\n      padding: 0 16px 0 0;\r\n    }\r\n\r\n    &__value-container,\r\n    &__option {\r\n      .user-option {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 10px;\r\n        color: inherit;\r\n      }\r\n    }\r\n  }\r\n`;","// styled components\r\nimport {Basic, Minimal, User} from './style';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\nimport {components} from 'react-select';\r\n\r\n// hooks\r\nimport {useEffect, useState} from 'react';\r\n\r\nconst CustomSelect = ({label, options, variant, value, changeHandler, placeholder}) => {\r\n    // automatically select the first option if no placeholder is provided\r\n    useEffect(() => {\r\n        if (!placeholder && value === null) {\r\n            changeHandler(options[0]);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const [uniqueId] = useState(\r\n        () => 'select_' + Math.random().toFixed(5).slice(2),\r\n    );\r\n\r\n    const Control = ({children, ...props}) => (\r\n        <components.Control {...props}>\r\n            {children}\r\n            <i className={`icon icon-${variant === 'minimal' ? 'caret' : 'chevron'}-down`}></i>\r\n        </components.Control>\r\n    );\r\n\r\n    const commonProps = {\r\n        classNamePrefix: 'Select',\r\n        inputId: label,\r\n        isSearchable: variant !== 'user',\r\n        options: options,\r\n        value: value,\r\n        onChange: changeHandler,\r\n        placeholder: placeholder,\r\n        openMenuOnFocus: true,\r\n        components: {\r\n            Control: Control,\r\n            Menu: (props) => <components.Menu {...props} className=\"menu\">\r\n                {props.children}\r\n            </components.Menu>\r\n        },\r\n        id: uniqueId,\r\n        blurInputOnSelect: true,\r\n        className: `select-${variant}`\r\n    }\r\n\r\n    switch (variant) {\r\n        default:\r\n        case 'basic': {\r\n            return <Basic {...commonProps} />;\r\n        }\r\n        case 'minimal': {\r\n            return <Minimal {...commonProps} />;\r\n        }\r\n        case 'user': {\r\n            return <User {...commonProps} />;\r\n        }\r\n    }\r\n}\r\n\r\nCustomSelect.propTypes = {\r\n    options: PropTypes.any,\r\n    variant: PropTypes.oneOf(['minimal', 'basic', 'user']).isRequired,\r\n    value: PropTypes.any,\r\n    changeHandler: PropTypes.func,\r\n    placeholder: PropTypes.string\r\n}\r\n\r\nexport default CustomSelect;","// styled components\r\nimport {Item, Button} from '../style'\r\n\r\n// components\r\nimport {Nav} from 'react-bootstrap';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TabNavItem = ({className, eventKey, title, handler}) => {\r\n    return (\r\n        <Item className={className ? className : ''} as={Nav.Item} onClick={handler}>\r\n            <Button as={Nav.Link} eventKey={eventKey}>{title}</Button>\r\n        </Item>\r\n    )\r\n}\r\n\r\nTabNavItem.propTypes = {\r\n    eventKey: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    handler: PropTypes.func\r\n}\r\n\r\nexport default TabNavItem;","// styled components\r\nimport {Container} from './style';\r\n\r\n// components\r\nimport {Nav} from 'react-bootstrap';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TabNav = ({children}) => {\r\n    return <Container as={Nav}>{children}</Container>\r\n}\r\n\r\nTabNav.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]).isRequired\r\n}\r\n\r\nexport default TabNav;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {flex, textSizes, light, dark, colors} from 'styles/vars';\r\n\r\nconst current = theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: light.text\r\n})\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-auto-columns: minmax(0, 1fr);\r\n  grid-auto-flow: column;\r\n  grid-gap: 2px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  height: 40px;\r\n  font-size: ${textSizes['14']};\r\n  text-transform: capitalize;\r\n  transition: background-color var(--transition);\r\n  ${theme('theme', {\r\n    light: `\r\n        color: ${colors.blue};\r\n        background-color: ${light.highlight};\r\n    `,\r\n    dark: `\r\n        color: ${colors.secondary};\r\n        background-color: ${dark.highlight};\r\n    `\r\n  })};\r\n  display: flex;\r\n  ${flex.center}\r\n  \r\n  &[aria-selected=\"true\"],\r\n  &.active,\r\n  &:hover, &:focus {\r\n    background-color: ${current};\r\n  }\r\n`\r\n\r\nexport const Item = styled.div`\r\n  &.active .nav-link {\r\n    background-color: ${current};\r\n  };\r\n`","// styled components\r\nimport {Body} from '../style';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WidgetBody = ({children, style, sidePadding = false, elRef, ...props}) => {\r\n    return <Body ref={elRef} sidePadding={sidePadding} style={style} {...props}>{children}</Body>\r\n}\r\n\r\nWidgetBody.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]).isRequired,\r\n    sidePadding: PropTypes.bool,\r\n    style: PropTypes.any,\r\n}\r\n\r\nexport default WidgetBody;","// styled components\r\nimport {Container} from './style';\r\n\r\n// components\r\nimport {motion} from 'framer-motion';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\n// hooks\r\nimport {useInterfaceContext} from 'contexts/interfaceContext';\r\n\r\nconst Widget = ({name, children, style, shadow = false, ...props}) => {\r\n    const {direction} = useInterfaceContext();\r\n    return (\r\n        <Container as={motion.div}\r\n                   data-widget={name}\r\n                   initial={{opacity: 0}}\r\n                   whileInView={{opacity: 1}}\r\n                   transition={{duration: .4}}\r\n                   viewport={{once: true}}\r\n                   style={style}\r\n                   className={shadow ? 'shadow' : ''}\r\n                   dir={direction}\r\n                   mobile={props.mobile}\r\n        >\r\n            {children}\r\n        </Container>\r\n    )\r\n}\r\n\r\nWidget.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]).isRequired,\r\n    style: PropTypes.object,\r\n    shadow: PropTypes.bool\r\n}\r\n\r\nexport default Widget;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {flex, light, dark, colors, textSizes, effects, breakpoints} from 'styles/vars';\r\n\r\nconst bg = theme('theme', {\r\n    light: light.widgetBg,\r\n    dark: dark.widgetBg\r\n})\r\n\r\nconst bar = theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: dark.bodyBg\r\n})\r\n\r\nconst borderShadow = theme('theme', {\r\n    light: light.shadow,\r\n    dark: dark.shadow\r\n})\r\n\r\nconst navBg = theme('theme', {\r\n    light: light.highlight,\r\n    dark: dark.highlight\r\n})\r\n\r\nexport const Container = styled.div`\r\n  box-shadow: ${effects.widgetShadow};\r\n  border-radius: 10px;\r\n  position: relative;\r\n  background-color: ${bg};\r\n  overflow: hidden;\r\n  ${flex.col};\r\n  min-height: 182px;\r\n  flex-grow: 1;\r\n  ${props => props.mobile && `height: ${props.mobile}px`};\r\n  // iOS fix\r\n  transform: translate3d(0, 0, 0);\r\n  \r\n  &.shadow {\r\n    &:before, &:after {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  &:before, &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    background: ${borderShadow};\r\n    height: 100%;\r\n    width: 24px;\r\n    z-index: 3;\r\n    filter: blur(1px);\r\n    display: none;\r\n  }\r\n\r\n  &:before {\r\n    left: -2px;\r\n    transform: ${props => props.dir === 'rtl' ? 'scaleX(-1)' : 'scaleX(1)'};\r\n  }\r\n\r\n  &:after {\r\n    right: -2px;\r\n    transform: rotate(180deg) ${props => props.dir === 'rtl' ? 'scaleX(-1)' : 'scaleX(1)'};\r\n  }\r\n  \r\n  ${breakpoints.tablet} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  ${props => props.flex === 'column' ? `flex-direction: column;` : flex.between};\r\n  padding: ${props => !props.sidePadding ? '24px 24px 20px' : '24px 0 20px'};\r\n  flex-wrap: wrap;\r\n  gap: 20px 10px;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  .title {\r\n    margin: ${props => props.sidePadding ? '0 24px' : '0'};\r\n    flex-shrink: 0;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  &.nav .title {\r\n    max-width: calc(100% - 60px);\r\n    display: block;\r\n  }\r\n`\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  ${flex.col};\r\n  width: 100%;\r\n  margin: 0 20px;\r\n  gap: 20px;\r\n\r\n  .navigator {\r\n    background-color: ${navBg};\r\n  }\r\n`\r\n\r\nexport const Body = styled.div`\r\n  padding: ${props => !props.sidePadding ? '0 24px 24px' : '0 0 24px'};\r\n  height: ${props => props.height ? `calc(100% - ${props.height}px)` : '100%'};\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  ${flex.col};\r\n  flex-grow: 1;\r\n`\r\n\r\nexport const Nav = styled.div`\r\n  font-size: ${textSizes['14']};\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${colors.gray};\r\n  margin-right: -9px;\r\n\r\n  button {\r\n    opacity: 0.5;\r\n    transition: opacity var(--transition);\r\n    padding: 0 9px;\r\n\r\n    &:hover, &:focus {\r\n      opacity: 1;\r\n    }\r\n    \r\n    &.disabled {\r\n      visibility: hidden;\r\n      pointer-events: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Navbar = styled.ul`\r\n  margin: 0 2px;\r\n  border-radius: 8px;\r\n  height: 40px;\r\n  padding-left: 22px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: ${bar};\r\n  flex-grow: 1;\r\n`\r\n\r\nexport const Divider = styled.div`\r\n  height: 2px;\r\n  background-color: ${bar};\r\n  width: 100%;\r\n`","import {useSnackbar} from 'notistack';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useNotistack = (text, type = 'success') => {\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const notify = () => enqueueSnackbar(text, {variant: type});\r\n    return {notify};\r\n}\r\n\r\nuseNotistack.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    type: PropTypes.oneOf(['success', 'error', 'warning', 'info']),\r\n}\r\n\r\nexport default useNotistack;","import styled from 'styled-components';\r\nimport {breakpoints, flex} from 'styles/vars';\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px 20px 84px;\r\n  flex-grow: 1;\r\n  height: auto;\r\n  width: 100%;\r\n  display: flex;\r\n  margin-top: var(--header-height);\r\n\r\n  ${breakpoints.tablet} {\r\n    padding: 20px 30px 30px;\r\n    ${flex.col};\r\n  }\r\n\r\n  ${breakpoints.laptopL} {\r\n    padding: 0;\r\n    margin-top: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) and (min-height: 800px) {\r\n    overflow: hidden;\r\n  }\r\n`\r\nexport const ContentTitle = styled.h1`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 18px;\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n\r\n  ${breakpoints.laptopL} {\r\n    margin-top: 40px;\r\n  }\r\n\r\n  ${breakpoints.desktop} {\r\n    flex-direction: row;\r\n    ${flex.between};\r\n  }\r\n`\r\n\r\nexport const Controls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  padding-right: 16px;\r\n`\r\n\r\nexport const Widgets = styled.div`\r\n  ${flex.col};\r\n  width: 100%;\r\n  flex-grow: 1;\r\n`","// styling\r\nimport styled from 'styled-components';\r\n\r\n// components\r\nimport {Responsive, WidthProvider} from 'react-grid-layout';\r\nimport {withSize} from 'react-sizeme';\r\n\r\n// hooks\r\nimport {useInterfaceContext} from 'contexts/interfaceContext';\r\nimport {useDispatch} from 'react-redux';\r\nimport {updateLayout, saveToLocalStorage} from 'store/features/layout';\r\nimport useWindowSize from 'hooks/useWindowSize';\r\n\r\nconst ResponsiveGridLayout = withSize()(WidthProvider(Responsive));\r\n\r\nconst StaticGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n`;\r\n\r\nconst Grid = ({layouts, children, id, desktop}) => {\r\n    const {isLayoutEditable, fontScale} = useInterfaceContext();\r\n    const dispatch = useDispatch();\r\n    const isMobile = useWindowSize().width < 768;\r\n\r\n    const handleLayoutChange = (layouts) => {\r\n        if (isLayoutEditable) {\r\n            dispatch(updateLayout({id, layouts}));\r\n            dispatch(saveToLocalStorage());\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isMobile ?\r\n                    <StaticGrid>{children}</StaticGrid>\r\n                    :\r\n                    <ResponsiveGridLayout className=\"content_layout\"\r\n                                          layouts={layouts}\r\n                                          breakpoints={{xl: 1026, lg: 1039, md: 708, sm: 0}}\r\n                                          cols={{xl: 3, lg: 3, md: 2, sm: 1}}\r\n                                          margin={[24, 24]}\r\n                                          isResizable={false}\r\n                                          rowHeight={fontScale === 1 ? 182 : 182 + (fontScale * 11)}\r\n                                          isDraggable={isLayoutEditable}\r\n                                          isBounded={true}\r\n                                          compactType=\"vertical\"\r\n                                          useCSSTransforms={false}\r\n                                          autoSize={true}\r\n                                          onLayoutChange={desktop ? handleLayoutChange : undefined}>\r\n                        {children}\r\n                    </ResponsiveGridLayout>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Grid;","// styled components\r\nimport {Content, ContentTitle, Controls, Wrapper, Widgets} from './style';\r\nimport {QtyBadge} from 'UI/Badge/style';\r\nimport {ControlWrapper} from 'components/GlobalSettingsControls/style';\r\n\r\n// components\r\nimport {Helmet} from 'react-helmet';\r\nimport {\r\n    ContrastControl,\r\n    FullscreenControl,\r\n    LayoutControl,\r\n    ScaleControl,\r\n    ThemeControl,\r\n    DirectionControl\r\n} from 'components/GlobalSettingsControls';\r\nimport Grid from 'layout/Grid';\r\nimport {motion} from 'framer-motion';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\n// hooks\r\nimport useWindowSize from 'hooks/useWindowSize';\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {useRef, useEffect} from 'react';\r\n\r\nconst Page = ({title, children, hasBadge, hasTitle = true, qty}) => {\r\n    const pageRef = useRef(null);\r\n    const device = useMobileDetect();\r\n    const {width} = useWindowSize();\r\n    const isTablet = width > 767.98;\r\n\r\n    // get the current location from the router\r\n    const {pathname} = useLocation();\r\n    // detect if the current location is dashboard\r\n    const isDashboard = pathname.includes('dashboard');\r\n    // modify the path to get corresponding layout from the store\r\n    const layoutKey = pathname.replace('/', '');\r\n    const layouts = useSelector(state => state['layout'].layout);\r\n    const current = layouts[layoutKey];\r\n\r\n    useEffect(() => {\r\n        if (pageRef.current) {\r\n            pageRef.current.scrollTop = 0;\r\n        }\r\n    }, [pathname]);\r\n\r\n    return (\r\n        <Content ref={pageRef}>\r\n            <Helmet>\r\n                <title>{`Smart190 | ${title}`}</title>\r\n            </Helmet>\r\n            <Widgets>\r\n                <Wrapper as={motion.div}\r\n                         initial={{opacity: 0}}\r\n                         whileInView={{opacity: 1}}\r\n                         transition={{duration: .4}}\r\n                         viewport={{once: true}}>\r\n                    {\r\n                        hasTitle && (\r\n                            <ContentTitle>\r\n                                {title} {hasBadge && qty && qty > 0 && <QtyBadge>+{qty}</QtyBadge>}\r\n                            </ContentTitle>\r\n                        )\r\n                    }\r\n                    {\r\n                        isTablet &&\r\n                        <Controls>\r\n                            {\r\n                                device.isDesktop() && (\r\n                                    <>\r\n                                        {\r\n                                            isDashboard && (\r\n                                                <ControlWrapper>\r\n                                                    <LayoutControl/>\r\n                                                </ControlWrapper>\r\n                                            )\r\n                                        }\r\n                                        <ControlWrapper>\r\n                                            <FullscreenControl/>\r\n                                        </ControlWrapper>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            <ControlWrapper>\r\n                                <ContrastControl/>\r\n                            </ControlWrapper>\r\n                            <ControlWrapper>\r\n                                <ThemeControl/>\r\n                            </ControlWrapper>\r\n                            <ControlWrapper>\r\n                                <DirectionControl/>\r\n                            </ControlWrapper>\r\n                            <ControlWrapper>\r\n                                <ScaleControl/>\r\n                            </ControlWrapper>\r\n                        </Controls>\r\n                    }\r\n                </Wrapper>\r\n                {current ? <Grid id={layoutKey} layouts={current} desktop={device.isDesktop()}>{children}</Grid> : children}\r\n            </Widgets>\r\n        </Content>\r\n    )\r\n}\r\n\r\nPage.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]).isRequired,\r\n    hasBadge: PropTypes.bool,\r\n    hasTitle: PropTypes.bool,\r\n    qty: PropTypes.number,\r\n}\r\n\r\nexport default Page;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {flex, light, dark, textSizes, breakpoints, colors} from 'styles/vars';\r\n\r\nexport const SettingsHeader = styled.div`\r\n  ${flex.col};\r\n  margin-bottom: 24px;\r\n  gap: 24px;\r\n\r\n  .wrapper {\r\n    padding: 24px 24px 0;\r\n\r\n    .title {\r\n      display: inline-block;\r\n      width: 100%;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.landscapeS} {\r\n    .wrapper {\r\n      display: flex;\r\n      ${flex.between};\r\n\r\n      .title {\r\n        margin-bottom: 0;\r\n      }\r\n\r\n      .nav {\r\n        max-width: 300px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-gap: 24px;\r\n  margin-bottom: 24px;\r\n\r\n  ${breakpoints.landscapeS} {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`\r\n\r\nexport const StyledForm = styled.form`\r\n  .dropzone {\r\n    border-radius: 50%;\r\n    aspect-ratio: 1 / 1;\r\n    width: 120px;\r\n    margin: 0 auto 24px;\r\n    background-color: ${theme('theme', {\r\n      light: light.highlight,\r\n      dark: dark.highlight\r\n    })};\r\n    ${flex.col};\r\n    ${flex.center};\r\n    font-size: ${textSizes['18']};\r\n    cursor: pointer;\r\n    border: 2px dashed transparent;\r\n    transition: border-color var(--transition);\r\n\r\n    .icon {\r\n      opacity: 0.5;\r\n    }\r\n\r\n    &:hover, &:focus, &.active {\r\n      border-color: ${theme('theme', {\r\n        light: colors.light_gray,\r\n        dark: colors.dark\r\n      })};\r\n    }\r\n\r\n    .hint {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.tablet} {\r\n    button[type='submit'] {\r\n      max-width: 200px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .dropzone {\r\n      width: 200px;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.laptopL} {\r\n    .wrapper {\r\n      display: grid;\r\n      grid-gap: 24px;\r\n      grid-template-columns: 350px minmax(0, calc(100% - 350px));\r\n    }\r\n\r\n    button[type='submit'] {\r\n      margin: 0 0 0 auto;\r\n    }\r\n\r\n    .dropzone {\r\n      width: 350px;\r\n      padding: 20px;\r\n      margin-bottom: 0;\r\n\r\n      .icon {\r\n        font-size: ${textSizes['32']};\r\n      }\r\n\r\n      .hint {\r\n        display: block;\r\n        margin-top: 20px;\r\n        font-size: ${textSizes['14']};\r\n        opacity: 0.5;\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n`;","// hooks\r\nimport {useDropzone} from 'react-dropzone';\r\nimport useNotistack from 'hooks/useNotistack';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst imgTypes = {\r\n    'image/jpeg': [],\r\n    'image/png': [],\r\n    'image/gif': [],\r\n    'image/bmp': [],\r\n    'image/webp': [],\r\n    'image/svg+xml': []\r\n}\r\n\r\nconst docTypes = {\r\n    'application/pdf': [],\r\n    'application/msword': [],\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': [],\r\n    'application/vnd.ms-excel': [],\r\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': []\r\n}\r\n\r\nconst DropFiles = ({type, multiple, children}) => {\r\n    const {notify} = useNotistack('File has been successfully uploaded.', 'success');\r\n    const handleDrop = () => notify();\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive\r\n    } = useDropzone({\r\n        accept: type === 'image' ? {...imgTypes} : {...docTypes},\r\n        multiple: multiple,\r\n        onDrop: handleDrop\r\n    });\r\n\r\n    return (\r\n        <div {...getRootProps()} className={isDragActive ? 'dropzone active' : 'dropzone'}>\r\n            <input {...getInputProps()} />\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nDropFiles.propTypes = {\r\n    type: PropTypes.oneOf(['image', 'doc']).isRequired,\r\n    multiple: PropTypes.bool.isRequired,\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default DropFiles;","// styling\r\nimport styled from 'styled-components';\r\nimport {flex, textSizes} from 'styles/vars';\r\n\r\n// components\r\nimport Field from 'UI/Field';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Wrapper = styled.div`\r\n  ${flex.col};\r\n`\r\n\r\nconst Label = styled.label`\r\n  font-size: ${textSizes['14']};\r\n  width: fit-content;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst LabeledFormInput = ({id, title, type = 'text', placeholder, value = '', customInput}) => {\r\n    return (\r\n        <Wrapper>\r\n            <Label htmlFor={id}>{title}</Label>\r\n            {\r\n                customInput ?\r\n                    customInput\r\n                    :\r\n                    <Field type={type} defaultValue={value} id={id} placeholder={placeholder}/>\r\n            }\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nLabeledFormInput.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    type: PropTypes.oneOf(['text', 'password', 'email', 'number']),\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    customInput: PropTypes.element\r\n}\r\n\r\nexport default LabeledFormInput;","import styled from 'styled-components';\r\nimport {colors} from 'styles/vars';\r\nimport theme from 'styled-theming';\r\n\r\nexport const DateInputWrapper = styled.div`\r\n  position: relative;\r\n  cursor: pointer;\r\n\r\n  input {\r\n    width: 100%;\r\n\r\n    &::placeholder {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  .icon {\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 16px;\r\n    transform: translateY(-50%);\r\n    font-size: 14px;\r\n    color: ${theme('theme', {\r\n      light: '#A2C0D4',\r\n      dark: colors.gray,\r\n    })};\r\n    transition: color var(--transition);\r\n\r\n    &:hover, &:focus {\r\n      color: ${colors.blue};\r\n    }\r\n  }\r\n`;","// styled components\r\nimport {DateInputWrapper} from './style';\r\nimport {Input} from 'UI/Field';\r\n\r\n// components\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\r\nimport {DatePicker} from '@mui/x-date-pickers/DatePicker';\r\n\r\n// utils\r\nimport {useRef, useState} from 'react';\r\n\r\nconst DateInput = ({id}) => {\r\n    const [value, setValue] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const today = new Date();\r\n    const customInputRef = useRef(null);\r\n    const buttonRef = useRef(null);\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterMoment}>\r\n            <DatePicker\r\n                open={open}\r\n                value={value}\r\n                maxDate={today}\r\n                onChange={(newValue) => {\r\n                    setValue(newValue);\r\n                }}\r\n                onClose={() => setOpen(false)}\r\n                PopperProps={{anchorEl: customInputRef.current}}\r\n                PaperProps={{className: 'date-picker'}}\r\n                renderInput={({\r\n                                  ref,\r\n                                  inputProps,\r\n                                  disabled,\r\n                                  onChange,\r\n                                  value\r\n                              }) => (\r\n                    <DateInputWrapper ref={ref}>\r\n                        <Input\r\n                            id={id}\r\n                            value={value && value.toISOString()}\r\n                            onChange={onChange}\r\n                            disabled={disabled}\r\n                            ref={customInputRef}\r\n                            placeholder=\"MM/DD/YYYY\"\r\n                            {...inputProps}\r\n                            onClick={() => setOpen(true)}\r\n                        />\r\n                        <i className=\"icon icon-calendar\" ref={buttonRef} onClick={() => setOpen(true)}/>\r\n                    </DateInputWrapper>\r\n                )}\r\n            />\r\n        </LocalizationProvider>\r\n    )\r\n}\r\n\r\nexport default DateInput;","// components\r\nimport Field from 'UI/Field';\r\nimport {PatternFormat} from 'react-number-format';\r\n\r\nconst Phone = ({id, placeholder}) => {\r\n    return (\r\n        <Field as={PatternFormat} id={id} placeholder={placeholder} format=\"+1 (###) ### ## ##\"/>\r\n    );\r\n}\r\n\r\nexport default Phone;","// styled components\r\nimport {StyledForm, Container} from 'widgets/UserSettings/style';\r\nimport {Input} from 'UI/Field';\r\n\r\n// components\r\nimport DropFiles from 'components/DropFiles';\r\nimport Btn from 'UI/Btn';\r\nimport LabeledFormInput from 'UI/LabeledFormInput';\r\nimport CustomSelect from 'UI/Select';\r\nimport DateInput from 'components/MaskedInputs/Date';\r\nimport Phone from 'components/MaskedInputs/Phone';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\nimport countryList from 'react-select-country-list';\r\nimport {City} from 'country-state-city';\r\n\r\n// hooks\r\nimport {useState} from 'react';\r\nimport useNotistack from 'hooks/useNotistack';\r\n\r\nconst Form = ({type}) => {\r\n    const {notify} = useNotistack('Your changes have been successfully saved.', 'success');\r\n    const hint = 'Drag image here or click to select file';\r\n\r\n    const [selectedCountry, setSelectedCountry] = useState();\r\n    const [selectedCity, setSelectedCity] = useState();\r\n    const [cities, setCities] = useState([]);\r\n\r\n    const getCountriesOptions = () => {\r\n        let countries = countryList().getData();\r\n        for (let i = 0; i < countries.length; i++) {\r\n            if (countries[i].value === 'RU') {\r\n                countries[i].label = 'Russia [terrorist state]';\r\n            }\r\n        }\r\n        return countries\r\n    }\r\n\r\n    const handleCountryChange = (country) => {\r\n        setSelectedCountry(country);\r\n        setSelectedCity(null);\r\n        let options = [];\r\n        const rawData = City.getCitiesOfCountry(country.value);\r\n        rawData.map(item => options.push({value: item.name, label: item.name}));\r\n        setCities(options);\r\n    }\r\n\r\n    return (\r\n        <StyledForm action=\"#\" method=\"post\" id={`settings_${type}`} onSubmit={e => e.preventDefault()}>\r\n            <div className=\"wrapper\">\r\n                <DropFiles multiple={false} type=\"image\">\r\n                    <i className=\"icon icon-image\" aria-label={hint} />\r\n                    <span className=\"hint\">{hint}</span>\r\n                </DropFiles>\r\n                <Container>\r\n                    <LabeledFormInput id={`${type}ProfileFirstName`} title=\"First Name\" placeholder=\"First Name\"/>\r\n                    <LabeledFormInput id={`${type}ProfileLastName`} title=\"Last Name\" placeholder=\"Last Name\"/>\r\n                    <LabeledFormInput id={`${type}ProfileProfileResidence`} title=\"Residence\" placeholder=\"Residence\" customInput={\r\n                        <CustomSelect label={`${type}ProfileProfileResidence`} placeholder=\"Residence\" options={getCountriesOptions()} value={selectedCountry}\r\n                                      variant=\"basic\" changeHandler={e => handleCountryChange(e)}/>\r\n                    }/>\r\n                    <LabeledFormInput id={`${type}ProfileCity`} title=\"City\" placeholder=\"City\" customInput={\r\n                        <CustomSelect label={`${type}ProfileCity`} placeholder=\"City\" options={cities} value={selectedCity}\r\n                                      variant=\"basic\" changeHandler={e => setSelectedCity(e)}/>\r\n                    }/>\r\n                    <LabeledFormInput id={`${type}ProfileStreet`} title=\"Street\" placeholder=\"Street\"/>\r\n                    <LabeledFormInput id={`${type}ProfileAddress1`} title=\"Address Line 1\" placeholder=\"Address Line 1\"/>\r\n                    <LabeledFormInput id={`${type}ProfileAddress2`} title=\"Address Line 2\" placeholder=\"Address Line 2\"/>\r\n                    <LabeledFormInput id={`${type}ProfileBirthday`} title=\"Birthday\" placeholder=\"Birthday\"\r\n                                      customInput={<Input as={DateInput} id={`${type}ProfileBirthday`} />}/>\r\n                    {\r\n                        type === 'patient' && <>\r\n                            <LabeledFormInput id=\"patientProfilePhone\" title=\"Phone\" placeholder=\"Phone\" customInput={\r\n                                <Phone id=\"patientProfilePhone\" placeholder=\"+1(000)-000-00-00\" />\r\n                            } />\r\n                            <LabeledFormInput id=\"patientProfileEmail\" title=\"Email\" placeholder=\"example@domain.com\"/>\r\n                        </>\r\n                    }\r\n                </Container>\r\n            </div>\r\n            <Btn text=\"Save\" handler={notify} type=\"submit\" />\r\n        </StyledForm>\r\n    )\r\n}\r\n\r\nForm.propTypes = {\r\n    type: PropTypes.oneOf(['patient', 'doctor']).isRequired\r\n}\r\n\r\nexport default Form;","// styled components\r\nimport {SettingsHeader} from 'widgets/UserSettings/style';\r\nimport {Divider} from 'components/Widget/style';\r\n// components\r\nimport Widget from 'components/Widget';\r\nimport WidgetBody from 'components/Widget/WidgetBody';\r\nimport {Tab} from 'react-bootstrap'\r\nimport TabNav from 'UI/TabNav';\r\nimport TabNavItem from 'UI/TabNav/TabNavItem';\r\nimport Form from './Form';\r\n\r\nconst UserSettings = () => {\r\n    return (\r\n        <Widget name=\"UserSettings\">\r\n            <Tab.Container defaultActiveKey=\"patient\" transition={true}>\r\n                <SettingsHeader>\r\n                    <div className=\"wrapper\">\r\n                        <h2 className=\"title\">Your account</h2>\r\n                        <TabNav>\r\n                            <TabNavItem eventKey=\"patient\" title=\"Patient\" />\r\n                            <TabNavItem eventKey=\"doctor\" title=\"Doctor\" />\r\n                        </TabNav>\r\n                    </div>\r\n                    <Divider />\r\n                </SettingsHeader>\r\n                <WidgetBody>\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"patient\">\r\n                            <Form type=\"patient\" />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"doctor\">\r\n                            <Form type=\"doctor\" />\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                </WidgetBody>\r\n            </Tab.Container>\r\n        </Widget>\r\n    )\r\n}\r\n\r\nexport default UserSettings;","// components\r\nimport Page from 'layout/Page';\r\nimport UserSettings from 'widgets/UserSettings';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <Page title=\"Settings\">\r\n            <UserSettings/>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default Settings;","import {keyframes} from 'styled-components';\r\n\r\nexport const pulse = keyframes`\r\n  from {\r\n    transform: scale(1);\r\n    transform-origin: center center;\r\n    animation-timing-function: linear;\r\n  }\r\n  10% {\r\n    transform: scale(0.91);\r\n    animation-timing-function: linear;\r\n  }\r\n  17% {\r\n    transform: scale(0.98);\r\n    animation-timing-function: linear;\r\n  }\r\n  33% {\r\n    transform: scale(0.87);\r\n    animation-timing-function: linear;\r\n  }\r\n  45% {\r\n    transform: scale(1);\r\n    animation-timing-function: linear;\r\n  }\r\n`\r\n\r\nexport const aura = keyframes`\r\n  0% {\r\n    opacity: 1;\r\n    transform: scale(0);\r\n  }\r\n  90% {\r\n    opacity: .3;\r\n  }\r\n  to {\r\n    opacity: .1;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport const pen = keyframes`\r\n  0% {\r\n    transform: translateX(0);\r\n  }\r\n  50% {\r\n    transform: translateX(2px);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nexport const fadeIn = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(2px);\r\n  }\r\n    100% {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    }\r\n`;\r\n\r\nexport const fadeOut = keyframes`\r\n  0% {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n    100% {\r\n    opacity: 0;\r\n    transform: translateY(2rem);\r\n    }\r\n`;"],"names":["Button","styled","button","colors","blue","textSizes","fonts","accent","flex","center","darken","success","error","gray","_ref","text","handler","type","isVisible","className","icon","_jsx","AnimatePresence","children","_jsxs","as","motion","onClick","initial","animate","opacity","exit","transition","duration","Input","input","theme","light","highlight","dark","placeholder","value","id","onChange","basicBg","basicColor","NormalizedSelect","Select","fadeIn","Basic","Minimal","breakpoints","tablet","User","label","options","variant","changeHandler","useEffect","uniqueId","useState","Math","random","toFixed","slice","commonProps","classNamePrefix","inputId","isSearchable","openMenuOnFocus","components","Control","_ref2","props","Menu","blurInputOnSelect","eventKey","title","Item","Nav","Link","Container","current","bodyBg","div","secondary","style","sidePadding","elRef","Body","ref","name","shadow","direction","useInterfaceContext","whileInView","viewport","once","dir","mobile","bg","widgetBg","bar","borderShadow","navBg","effects","widgetShadow","col","Header","between","HeaderWrapper","height","Navbar","ul","Divider","useNotistack","arguments","length","undefined","enqueueSnackbar","useSnackbar","notify","propTypes","PropTypes","isRequired","Content","laptopL","ContentTitle","h1","Wrapper","desktop","Controls","Widgets","ResponsiveGridLayout","withSize","WidthProvider","Responsive","StaticGrid","layouts","isLayoutEditable","fontScale","dispatch","useDispatch","isMobile","useWindowSize","width","_Fragment","xl","lg","md","sm","cols","margin","isResizable","rowHeight","isDraggable","isBounded","compactType","useCSSTransforms","autoSize","onLayoutChange","updateLayout","saveToLocalStorage","hasBadge","hasTitle","qty","pageRef","useRef","device","useMobileDetect","isTablet","pathname","useLocation","isDashboard","includes","layoutKey","replace","useSelector","state","layout","scrollTop","Helmet","QtyBadge","isDesktop","ControlWrapper","LayoutControl","FullscreenControl","ContrastControl","ThemeControl","DirectionControl","ScaleControl","Grid","SettingsHeader","landscapeS","StyledForm","form","light_gray","imgTypes","docTypes","multiple","getRootProps","getInputProps","isDragActive","useDropzone","accept","onDrop","handleDrop","Label","customInput","htmlFor","Field","defaultValue","DateInputWrapper","setValue","open","setOpen","today","Date","customInputRef","buttonRef","LocalizationProvider","dateAdapter","AdapterMoment","DatePicker","maxDate","newValue","onClose","PopperProps","anchorEl","PaperProps","renderInput","inputProps","disabled","toISOString","PatternFormat","format","hint","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","cities","setCities","action","method","onSubmit","e","preventDefault","DropFiles","LabeledFormInput","CustomSelect","getCountriesOptions","countries","countryList","getData","i","country","City","getCitiesOfCountry","map","item","push","handleCountryChange","DateInput","Phone","Btn","UserSettings","Widget","Tab","defaultActiveKey","TabNav","TabNavItem","WidgetBody","Pane","Form","Settings","Page","pulse","keyframes","aura","pen"],"sourceRoot":""}