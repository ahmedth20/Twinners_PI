{"version":3,"file":"static/js/9667.575225c7.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@restart/ui/esm/TabContext.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/esm/NavItem.js","../node_modules/@restart/ui/esm/Nav.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/NavItem.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/NavLink.js","../node_modules/react-bootstrap/esm/Nav.js"],"sourcesContent":["import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import * as React from 'react';\nconst TabContext = /*#__PURE__*/React.createContext(null);\nexport default TabContext;","import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","import { useMemo } from 'react';\nconst toFnRef = ref => !ref || typeof ref === 'function' ? ref : value => {\n  ref.current = value;\n};\nexport function mergeRefs(refA, refB) {\n  const a = toFnRef(refA);\n  const b = toFnRef(refB);\n  return value => {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\nfunction useMergedRefs(refA, refB) {\n  return useMemo(() => mergeRefs(refA, refB), [refA, refB]);\n}\nexport default useMergedRefs;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","const _excluded = [\"as\", \"active\", \"eventKey\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useNavItem({\n  key,\n  onClick,\n  active,\n  id,\n  role,\n  disabled\n}) {\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const tabContext = useContext(TabContext);\n  let isActive = active;\n  const props = {\n    role\n  };\n  if (navContext) {\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\n    const contextControlledId = navContext.getControlledId(key != null ? key : null);\n\n    // @ts-ignore\n    props[dataAttr('event-key')] = key;\n    props.id = contextControllerId || id;\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\n\n    /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\n  }\n  if (props.role === 'tab') {\n    props['aria-selected'] = isActive;\n    if (!isActive) {\n      props.tabIndex = -1;\n    }\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n  }\n  props.onClick = useEventCallback(e => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(e);\n    if (key == null) {\n      return;\n    }\n    if (parentOnSelect && !e.isPropagationStopped()) {\n      parentOnSelect(key, e);\n    }\n  });\n  return [props, {\n    isActive\n  }];\n}\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: Component = Button,\n      active,\n      eventKey\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [props, meta] = useNavItem(Object.assign({\n    key: makeEventKey(eventKey, options.href),\n    active\n  }, options));\n\n  // @ts-ignore\n  props[dataAttr('active')] = meta.isActive;\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\n    ref: ref\n  }));\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'div',\n      onSelect,\n      activeKey,\n      role,\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    // TODO: do we need to duplicate these?\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n  const listNode = useRef(null);\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (!tabContext) {\n      return;\n    }\n    let nextActiveChild;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n      default:\n        return;\n    }\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","import { useReducer } from 'react';\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are strictly equal to the last state value\n  const [, dispatch] = useReducer(revision => revision + 1, 0);\n  return dispatch;\n}","\"use client\";\n\nimport * as React from 'react';\n\n// TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavItem = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavLink = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as: Component = Anchor,\n  active,\n  eventKey,\n  disabled = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-link');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    disabled,\n    ...props\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...navItemProps,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, bsPrefix, disabled && 'disabled', meta.isActive && 'active')\n  });\n});\nNavLink.displayName = 'NavLink';\nexport default NavLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport CardHeaderContext from './CardHeaderContext';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Nav = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    as = 'div',\n    bsPrefix: initialBsPrefix,\n    variant,\n    fill = false,\n    justify = false,\n    navbar,\n    navbarScroll,\n    className,\n    activeKey,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'nav');\n  let navbarBsPrefix;\n  let cardHeaderBsPrefix;\n  let isNavbar = false;\n  const navbarContext = useContext(NavbarContext);\n  const cardHeaderContext = useContext(CardHeaderContext);\n  if (navbarContext) {\n    navbarBsPrefix = navbarContext.bsPrefix;\n    isNavbar = navbar == null ? true : navbar;\n  } else if (cardHeaderContext) {\n    ({\n      cardHeaderBsPrefix\n    } = cardHeaderContext);\n  }\n  return /*#__PURE__*/_jsx(BaseNav, {\n    as: as,\n    ref: ref,\n    activeKey: activeKey,\n    className: classNames(className, {\n      [bsPrefix]: !isNavbar,\n      [`${navbarBsPrefix}-nav`]: isNavbar,\n      [`${navbarBsPrefix}-nav-scroll`]: isNavbar && navbarScroll,\n      [`${cardHeaderBsPrefix}-${variant}`]: !!cardHeaderBsPrefix,\n      [`${bsPrefix}-${variant}`]: !!variant,\n      [`${bsPrefix}-fill`]: fill,\n      [`${bsPrefix}-justified`]: justify\n    }),\n    ...props\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem,\n  Link: NavLink\n});"],"names":["makeEventKey","eventKey","href","arguments","length","undefined","String","React","value","ref","useRef","useEffect","current","useEventCallback","fn","useCommittedRef","useCallback","toFnRef","refA","refB","useMemo","a","b","mergeRefs","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","NavContext","displayName","ATTRIBUTE_PREFIX","dataAttr","property","_excluded","useButtonProps","_ref2","tagName","disabled","target","rel","role","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","onKeyDown","key","Button","_ref","as","asProp","props","r","e","t","n","hasOwnProperty","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","Object","assign","_jsx","useNavItem","active","id","parentOnSelect","useContext","SelectableContext","navContext","tabContext","TabContext","isActive","contextControllerId","getControllerId","contextControlledId","getControlledId","activeKey","unmountOnExit","mountOnEnter","isPropagationStopped","NavItem","options","noop","EVENT_KEY_ATTR","Nav","onSelect","forceUpdate","dispatch","useReducer","revision","useForceUpdate","needsRefocusRef","listNode","getNextActiveTab","offset","currentListNode","items","activeChild","querySelector","document","activeElement","index","nextIndex","handleSelect","focus","mergedRef","useMergedRefs","Provider","children","nextActiveChild","dataset","Item","context","className","bsPrefix","useBootstrapPrefix","classNames","global","navigator","product","WeakMap","Anchor","handleKeyDown","NavLink","navItemProps","uncontrolledProps","initialBsPrefix","variant","fill","justify","navbar","navbarScroll","useUncontrolled","navbarBsPrefix","cardHeaderBsPrefix","isNavbar","navbarContext","NavbarContext","cardHeaderContext","CardHeaderContext","BaseNav","Link"],"sourceRoot":""}