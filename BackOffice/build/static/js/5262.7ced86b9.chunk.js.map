{"version":3,"file":"static/js/5262.7ced86b9.chunk.js","mappings":"oHAAIA,E,iCACJ,SAASC,IAAa,OAAOA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAIF,UAAUD,GAAI,IAAK,IAAII,KAAKD,GAAG,CAAG,GAAEE,eAAeC,KAAKH,EAAGC,KAAOL,EAAEK,GAAKD,EAAEC,GAAK,CAAE,OAAOL,CAAG,EAAGJ,EAASY,MAAM,KAAMN,UAAY,CAEnR,SAASO,EAAgBC,EAAMC,GAC7B,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAOd,EAAS,CACtDmB,MAAO,GACPC,OAAQ,EACRC,QAAS,WACTC,KAAM,OACNC,MAAO,6BACPC,IAAKT,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DS,GAAIR,GACHD,GAAS,KAAMjB,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EoB,MAAO,GACPC,OAAQ,EACRM,GAAI,EACJJ,KAAM,kBAEV,CACA,MAAMK,EAA0B,aAAiBd,GAClC,IC3Bf,IAAI,EACJ,SAAS,IAAa,OAAO,EAAWZ,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAIF,UAAUD,GAAI,IAAK,IAAII,KAAKD,GAAG,CAAG,GAAEE,eAAeC,KAAKH,EAAGC,KAAOL,EAAEK,GAAKD,EAAEC,GAAK,CAAE,OAAOL,CAAG,EAAG,EAASQ,MAAM,KAAMN,UAAY,CAEnR,SAASsB,EAAed,EAAMC,GAC5B,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAO,EAAS,CACtDK,MAAO,GACPC,OAAQ,EACRC,QAAS,WACTC,KAAM,OACNC,MAAO,6BACPC,IAAKT,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DS,GAAIR,GACHD,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3Ea,EAAG,GACHC,EAAG,GACHX,MAAO,GACPC,OAAQ,EACRM,GAAI,IACJK,OAAQ,kBAEZ,CACA,MAAM,EAA0B,aAAiBH,GAClC,I,0BClBf,MAAMI,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAe,CAChCE,QAAS,kBACTC,IAAK,EACLC,UAAW,OACX,cAAe,CACXC,MAAO,WAEX,eAAgB,CACZA,MAAO,aAkBf,EAdqBxB,IAAc,IAAb,MAACyB,GAAMzB,EACzB,MAAM0B,GAAYC,EAAAA,EAAAA,KAAWD,UAE7B,OACIE,EAAAA,EAAAA,KAACV,EAAY,CACTW,UAAU,gBACVC,cAAeL,EACfC,UAAWA,EACXK,aAAaH,EAAAA,EAAAA,KAACI,EAAK,CAACH,UAAU,UAC9BI,YAAYL,EAAAA,EAAAA,KAACM,EAAM,CAACL,UAAU,WAC9BM,UAAQ,GAAG,C,4FCzBvB,MAAMC,EAAYjB,EAAAA,GAAOkB,GAAG;;;;;;;;;;;qBAWPC,IAAM,QAAS,CAC5BC,MAAOC,EAAAA,GAAQC,YACfC,KAAMF,EAAAA,GAAQG;;;;;;EAShBC,EAAgBzB,EAAAA,GAAO0B,IAAI;;;;;;eAMlBC,EAAAA,GAAU;;iBAERC,EAAAA,GAAMC;sBACDV,IAAM,QAAS,CACjCC,MAAOA,EAAAA,GAAMU,SACbP,KAAMA,EAAAA,GAAKO;;EAiBf,EAZuBjD,IAAa,IAAZ,KAACkD,GAAKlD,EAC1B,OACI4B,EAAAA,EAAAA,KAACQ,EAAS,CAACP,UAAU,YAAWsB,UAC5BvB,EAAAA,EAAAA,KAACgB,EAAa,CAAAO,SAAED,KACR,C,4DC5CpB,MAsDA,EAtDuBlD,IAAoC,IAAnC,MAACoD,EAAK,QAAEC,EAAO,KAAEC,GAAO,GAAKtD,EAoCjD,OACI4B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,CAACF,QAnCE9D,IACb,MAAMmC,EAAYnC,EAAEiE,cAAcC,QAAQ/B,UAC1C,IAAIgC,EAAUN,EAAMO,OAEF,SAAdjC,EACY,IAAZgC,EAAgBA,IAAYA,EAAU,GAE1B,KAAZA,EAAiBA,IAAYA,EAAU,EAE3CL,GAAQO,IACG,IAAIA,EAAWD,OAAQD,MAGlC,IAAIG,GAAe,IAAIC,MAAOC,WAC1BC,EAAYH,EAAe,EAC3BI,EAAYJ,EAAe,EAE3BK,EAAQ,GACZ,MAAMC,EAAU,IAAIL,KAAK,KAAMJ,EAAS,GAGpCQ,EADAR,IAAYG,EACJ,aACDH,IAAYM,EACX,iBACDN,IAAYO,EACX,aAEAE,EAAQC,eAAe,QAAS,CAACC,MAAO,SAEpDhB,GAAQO,IACG,IAAIA,EAAWM,MAAOA,KAC/B,EAKShB,KAAME,EAAMc,MACZI,cAAehB,GAAyB,IAAjBF,EAAMO,OAC7BY,cAAejB,GAAQF,EAAMO,UAAW,IAAIG,MAAOC,YAC5D,C,6DCzCV,MAqBA,EArBkB/D,IAA4D,IAA3D,KAACkD,EAAI,QAAEG,EAAO,aAAEiB,EAAY,aAAEC,KAAiBnE,GAAMJ,EACpE,OACIwE,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CAAC5C,UAAU,eAAgBzB,EAAK+C,SAAA,EACpCvB,EAAAA,EAAAA,KAAA,UAAQC,UAAWyC,EAAe,WAAa,GAAII,QAASrB,EAAS,iBAAe,OAAO,aAAW,WAAUF,UAC5GvB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,8BAEjBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,QAAOsB,SAAED,KACzBtB,EAAAA,EAAAA,KAAA,UAAQC,UAAW0C,EAAe,WAAa,GAAIG,QAASrB,EAAS,iBAAe,OAAO,aAAW,OAAMF,UACxGvB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gCAEX,C,iFCZX,MAAM4C,EAAUtD,EAAAA,GAAOkB,GAAG;;IAE7BsC,EAAAA,GAAKC;;;;eAIM9B,EAAAA,GAAU;;sBAEHR,IAAM,QAAS,CAACC,MAAOA,EAAAA,GAAMsC,OAAQnC,KAAMA,EAAAA,GAAKmC;;;;;;;;;;;;;;;;;;oFCAtE,MA0BA,EA1BiB7E,IAA+C,IAA9C,MAACwB,EAAQsD,EAAAA,GAAOC,KAAI,MAAEtD,EAAK,MAAEuD,EAAQ,CAAC,GAAEhF,EACtD,MAAM,MAACsC,IAASX,EAAAA,EAAAA,MAEhB,OAAOC,EAAAA,EAAAA,KAACqD,EAAAA,EAAc,CAACpD,UAAU,cACVqD,QAAQ,cACR,aAAYzD,EACZA,MAAOA,EACP0D,GAAI,CACAC,gBAA2B,UAAV9C,EAAoB,UAAYI,EAAAA,GAAK2C,UACtD/E,OAAQ,EACRgF,aAAc,KACXN,EAEH,2BAA4B,CACxBI,gBAAiB5D,EACjB8D,aAAc,KAElB,C,mFCrB/B,MAAMb,EAAUtD,EAAAA,GAAOoE,MAAM;;IAEzBZ,EAAAA,GAAKa;;;;eAIM1C,EAAAA,GAAU;;sBAEH1C,GAAS0E,EAAAA,GAAOW,EAAAA,EAAWC,MAAKC,GAAQA,EAAKC,MAAQxF,EAAMyF,WAAUrE;;;;;;;EA2B3F,EAlBiBxB,IAA0B,IAAzB,SAAC6F,EAAQ,QAAExC,GAAQrD,EACjC,MAAM,KAACkD,EAAI,KAAE4C,GAAQD,EACrB,OACIrB,EAAAA,EAAAA,MAACC,EAAO,CAAC5C,UAAU,WAAW6C,QAASrB,EAASwC,SAAUC,EAAK3C,SAAA,EAC3DvB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBACbD,EAAAA,EAAAA,KAAA,QAAAuB,SAAOD,MACD,C,oGC3BlB,MAAMQ,EAAUpB,IAAM,QAAS,CAC3BC,MAAOA,EAAAA,GAAMsC,OACbnC,KAAMH,EAAAA,GAAMW,OAGH6C,EAAY5E,EAAAA,GAAOkB,GAAG;;;;;;;;EAUtB2D,EAAS7E,EAAAA,GAAOoE,MAAM;;;eAGpBzC,EAAAA,GAAU;;;IAGrBR,IAAM,QAAS,CACfC,MAAO,oBACMuC,EAAAA,GAAOC,oCACIxC,EAAAA,GAAM8C,mBAE9B3C,KAAM,oBACOoC,EAAAA,GAAOmB,yCACIvD,EAAAA,GAAK2C;;IAI7BV,EAAAA,GAAKa;;;;;wBAKe9B;;EAIXwC,EAAO/E,EAAAA,GAAOkB,GAAG;;wBAENqB;;wECxCxB,MAAMyC,EAAYnG,IAA+B,IAA9B,MAACoD,EAAK,OAAEgD,EAAM,QAAE/C,GAAQrD,EACvC,MAAMqG,EAAWjD,EAAM3B,QAAU2E,EAAO3E,MACxC,OACIG,EAAAA,EAAAA,KAACoE,EAAAA,GAAM,CAACnE,UAAWwE,EAAW,SAAW,GACjC3B,QAASA,IAAMrB,EAAQ,CAAC5B,MAAO2E,EAAO3E,MAAOyC,MAAOkC,EAAOlC,QAAQf,SAEtEiD,EAAOlC,OACH,EAwCjB,EApCkBoC,IAAuB,IAAtB,MAAClD,EAAK,QAAEC,GAAQiD,EAgB/B,OACI1E,EAAAA,EAAAA,KAACmE,EAAAA,GAAS,CAACQ,GAAG,KAAK1E,UAAU,SAAQsB,SAhBzB,CACZ,CACI1B,MAAO,MACPyC,MAAO,OAEX,CACIzC,MAAO,OACPyC,MAAO,OAEX,CACIzC,MAAO,SACPyC,MAAO,UAOKsC,KAAIb,IAEJ/D,EAAAA,EAAAA,KAACsE,EAAAA,GAAI,CAAA/C,UACDvB,EAAAA,EAAAA,KAACuE,EAAS,CAAC/C,MAAOA,EAAOgD,OAAQT,EAAMtC,QAASA,MADzCoD,EAAAA,EAAAA,IAAO,OAMtB,C,iKCzCb,MAAMC,EAAQvF,EAAAA,GAAOkB,GAAG;;;;;MAKzBsC,EAAAA,GAAKgC;;;;;;;;mBAQQ7D,EAAAA,GAAU;;;;;;;;;;;;;;;;;;EAoBN3B,EAAAA,GAAOkB,GAAG;IAC7BsC,EAAAA,GAAKgC;;;;;sBAKarE,IAAM,QAAS,CACjCC,MAAOA,EAAAA,GAAM8C,UACb3C,KAAMA,EAAAA,GAAK2C;;;;;wBAMS/C,IAAM,QAAS,CACjCC,MAAOA,EAAAA,GAAMsC,OACbnC,KAAMA,EAAAA,GAAKmC;;;;;;;;;;;;;mBAcE/B,EAAAA,GAAU;;;;;;MAMvB6B,EAAAA,GAAKgC;;iBAEM7D,EAAAA,GAAU;mBACRC,EAAAA,GAAMC;;;;;;;;;;;;;;;;mBAgBNF,EAAAA,GAAU;qBACRC,EAAAA,GAAMC;;;eAGZV,IAAM,QAAS,CACtBC,MAAOuC,EAAAA,GAAOC,KACdrC,KAAM;;;;;;;;;wBAUUJ,IAAM,QAAS,CACjCC,MAAOA,EAAAA,GAAMU,SACbP,KAAMA,EAAAA,GAAKO;;;0BAIS6B,EAAAA,GAAOC;;;;;;;;;;;;;;;;QAgBzB2B;;;;;;IAMJE,EAAAA,GAAYC;;;;;;IAMZD,EAAAA,GAAYE;;;;;;;;;;;QAWRJ;;;;;;;;;MASFA;;;;;;;IAOFE,EAAAA,GAAYG;;;;;EAMM5F,EAAAA,GAAOoE,MAAM;;IAE/BZ,EAAAA,GAAKa;;;eAGM1C,EAAAA,GAAU;;;WAGdP,EAAAA,GAAMW;;;;aAIJ4B,EAAAA,GAAOkC;;;;;;;;;wBASIlC,EAAAA,GAAOC;;;;;;;;IAQ3B6B,EAAAA,GAAYK;;;;;;;+DClMH9F,EAAAA,GAAO+F,EAAE;IAClBvC,EAAAA,GAAKgC;;;8DCLT,MAaA,EAbmB3G,IAA8D,IAA7D,SAACmD,EAAQ,MAAE6B,EAAK,YAAEmC,GAAc,EAAK,MAAEC,KAAUhH,GAAMJ,EACvE,OAAO4B,EAAAA,EAAAA,KAACyF,EAAAA,GAAI,CAAC3G,IAAK0G,EAAOD,YAAaA,EAAanC,MAAOA,KAAW5E,EAAK+C,SAAGA,GAAgB,C,2CCP1F,MAAMsC,EAAa,CACtB,CAACG,IAAK,YAAa1B,MAAO,YAAa1C,MAAO,OAC9C,CAACoE,IAAK,eAAgB1B,MAAO,eAAgB1C,MAAO,SACpD,CAACoE,IAAK,OAAQ1B,MAAO,cAAe1C,MAAO,QAC3C,CAACoE,IAAK,UAAW1B,MAAO,kBAAmB1C,MAAO,UAClD,CAACoE,IAAK,OAAQ1B,MAAO,aAAc1C,MAAO,WAGjC8F,EAAc,CACvB,CAAC1B,IAAK,OAAQpE,MAAO,QACrB,CAACoE,IAAK,SAAUpE,MAAO,UACvB,CAACoE,IAAK,SAAUpE,MAAO,SACvB,CAACoE,IAAK,QAASpE,MAAO,U,kDCV1B,MAeA,EAfyB+F,IACrB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,CAAEjG,MAAO,MAAOyC,MAAO,QAO5D,MAAO,CACHyD,UANeH,GACM,QAAjBA,EAAO/F,MAAwB8F,EAC5BA,EAAUnB,QAAOT,IAAI,IAAAiC,EAAA,OAAY,QAARA,EAAAjC,EAAKkC,WAAG,IAAAD,OAAA,EAARA,EAAUE,iBAAkBN,EAAO/F,KAAK,IAKxE+F,SACAC,YACH,C,0ICTqBtG,EAAAA,EAAAA,IAAO4G,EAAAA,IAAcC,WAAA,CAAAC,YAAA,gBAArB9G,CAAqB,0DAC3CyF,EAAAA,GAAYC,OAEVlC,EAAAA,GAAKC,SAQczD,EAAAA,GAAO+F,GAAEc,WAAA,CAAAC,YAAA,gBAAT9G,CAAS,4IASZmB,IAAM,QAAS,CACjCC,MAAOA,EAAAA,GAAMsC,OACbnC,KAAMA,EAAAA,GAAKmC,UAIiB1D,EAAAA,GAAOkB,IAAG2F,WAAA,CAAAC,YAAA,gBAAV9G,CAAU,mQAUxBmB,IAAM,QAAS,CAC3BC,MAAOA,EAAAA,GAAM2F,OACbxF,KAAMA,EAAAA,GAAKyF,gBAmBYhH,EAAAA,GAAOiH,EAACJ,WAAA,CAAAC,YAAA,gBAAR9G,CAAQ,8SAEjCwD,EAAAA,GAAKa,OAIEV,EAAAA,GAAOC,KAEFzC,IAAM,QAAS,CAC3BC,MAAOA,EAAAA,GAAMU,SACbP,KAAMA,EAAAA,GAAKO,WAKS6B,EAAAA,GAAOC,KAOlBzC,IAAM,QAAS,CACtBC,MAAOA,EAAAA,GAAMW,KACbR,KAAMA,EAAAA,GAAKQ,Q,uFCpFjB,MAAMmF,EAAU,uCA0DhB,EAxD8B,CAE5BC,sBAAuBC,UACrB,IAEE,aADuBC,EAAAA,EAAMC,IAAIJ,IACjBK,IAClB,CAAE,MAAOC,GAEP,MADAC,QAAQD,MAAM,kDAAmDA,GAC3DA,CACR,GAIFE,sBAAuBN,UACrB,IAEE,aADuBC,EAAAA,EAAMC,IAAI,GAAGJ,KAAW1H,MAC/B+H,IAClB,CAAE,MAAOC,GAEP,MADAC,QAAQD,MAAM,2DAAsDA,GAC9DA,CACR,GAIFG,qBAAsBP,UACpB,IAEE,aADuBC,EAAAA,EAAMO,KAAKV,EAASW,IAC3BN,IAClB,CAAE,MAAOC,GAEP,MADAC,QAAQD,MAAM,oDAAkDA,GAC1DA,CACR,GAIFM,qBAAsBV,MAAO5H,EAAIqI,KAC/B,IAEE,aADuBR,EAAAA,EAAMU,IAAI,GAAGb,KAAW1H,IAAMqI,IACrCN,IAClB,CAAE,MAAOC,GAEP,MADAC,QAAQD,MAAM,uDAAqDA,GAC7DA,CACR,GAIFQ,qBAAsBZ,UACpB,UACQC,EAAAA,EAAMY,OAAO,GAAGf,KAAW1H,IACnC,CAAE,MAAOgI,GAEP,MADAC,QAAQD,MAAM,oDAAqDA,GAC7DA,CACR,I,eC5CSxH,EAAAA,GAAO+F,GAAEc,WAAA,CAAAC,YAAA,gBAAT9G,CAAS,8BAClBwD,EAAAA,GAAKgC,K,8DCVT,MAAM0C,EAAS,CACbC,uBAAwB,CACtBC,QAAS,OACTnE,gBAAiB,UACjBE,aAAc,MACdkE,UAAW,gCAEbC,MAAO,CACLpJ,MAAO,OACPqJ,eAAgB,WAChBnI,UAAW,QAEboI,GAAI,CACFJ,QAAS,YACTK,UAAW,OACXxE,gBAAiB,UACjB5D,MAAO,QACPqI,WAAY,QAEdC,GAAI,CACFP,QAAS,YACTK,UAAW,QAEbG,QAAS,CACP3E,gBAAiB,WAEnBG,OAAQ,CACNgE,QAAS,WACTS,OAAQ,MACRC,OAAQ,OACR3E,aAAc,MACd4E,OAAQ,WAEVC,WAAY,CACV/E,gBAAiB,UACjB5D,MAAO,SAET4I,aAAc,CACZhF,gBAAiB,UACjB5D,MAAO,SAET6I,aAAc,CACZC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNnK,MAAO,OACPC,OAAQ,OACR8E,gBAAiB,qBACjB/D,QAAS,OACToJ,eAAgB,SAChBC,WAAY,UAEdC,aAAc,CACZvF,gBAAiB,QACjBmE,QAAS,OACTjE,aAAc,MACdkE,UAAW,+BACXoB,SAAU,SAEZC,YAAa,CACXC,MAAO,QACPZ,OAAQ,UACRa,SAAU,OACVlB,WAAY,OACZrI,MAAO,OACPyI,OAAQ,OACRe,WAAY,QAEdC,MAAO,CACL5K,MAAO,OACPkJ,QAAS,MACTS,OAAQ,SACRC,OAAQ,iBACR3E,aAAc,OAEhB4F,aAAc,CACZ7K,MAAO,OACP+E,gBAAiB,UACjB5D,MAAO,QACP+H,QAAS,OACTU,OAAQ,OACR3E,aAAc,MACd4E,OAAQ,YAwJZ,EApJsBiB,KACpBvC,QAAQwC,IAAI,OACZ,MAAOC,EAAYC,IAAiB5D,EAAAA,EAAAA,UAAS,KACtC6D,EAAmBC,IAAwB9D,EAAAA,EAAAA,UAAS,OACpD+D,EAAaC,IAAkBhE,EAAAA,EAAAA,WAAS,IACxCiE,EAAUC,IAAelE,EAAAA,EAAAA,UAAS,CACvCmE,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,YAAa,GACbC,YAAa,MAGfC,EAAAA,EAAAA,YAAU,KACc3D,WACpB,IACE,MAAMG,QAAayD,EAAe7D,wBAClCgD,EAAc5C,EAChB,CAAE,MAAOC,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,GAEFyD,EAAe,GACd,IA2CH,OACE5H,EAAAA,EAAAA,MAAA,OAAKQ,MAAOqE,EAAOC,uBAAuBnG,SAAA,EACxCqB,EAAAA,EAAAA,MAAA,SAAOQ,MAAOqE,EAAOI,MAAMtG,SAAA,EACzBvB,EAAAA,EAAAA,KAAA,SAAAuB,UACEqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,EACEvB,EAAAA,EAAAA,KAAA,MAAIoD,MAAOqE,EAAOM,GAAGxG,SAAC,SACtBvB,EAAAA,EAAAA,KAAA,MAAIoD,MAAOqE,EAAOM,GAAGxG,SAAC,eACtBvB,EAAAA,EAAAA,KAAA,MAAIoD,MAAOqE,EAAOM,GAAGxG,SAAC,WACtBvB,EAAAA,EAAAA,KAAA,MAAIoD,MAAOqE,EAAOM,GAAGxG,SAAC,kBACtBvB,EAAAA,EAAAA,KAAA,MAAIoD,MAAOqE,EAAOM,GAAGxG,SAAC,oBACtBvB,EAAAA,EAAAA,KAAA,MAAIoD,MAAOqE,EAAOM,GAAGxG,SAAC,kBAG1BvB,EAAAA,EAAAA,KAAA,SAAAuB,SACGkI,EAAW5L,OAAS,EACnB4L,EAAW7E,KAAI,CAAC6F,EAAWC,KAAK,IAAAC,EAAAC,EAAAC,EAAA,OAC9BjI,EAAAA,EAAAA,MAAA,MAAwBQ,MAAOsH,EAAQ,IAAM,EAAIjD,EAAOU,QAAU,CAAC,EAAE5G,SAAA,EACnEvB,EAAAA,EAAAA,KAAA,MAAIoD,MAAOqE,EAAOS,GAAG3G,UAAgB,QAAdoJ,EAAAF,EAAUK,YAAI,IAAAH,OAAA,EAAdA,EAAgBV,YAAa,aACpDjK,EAAAA,EAAAA,KAAA,MAAIoD,MAAOqE,EAAOS,GAAG3G,UAAgB,QAAdqJ,EAAAH,EAAUK,YAAI,IAAAF,OAAA,EAAdA,EAAgBV,WAAY,aACnDlK,EAAAA,EAAAA,KAAA,MAAIoD,MAAOqE,EAAOS,GAAG3G,UAAgB,QAAdsJ,EAAAJ,EAAUK,YAAI,IAAAD,OAAA,EAAdA,EAAgBV,QAAS,aAChDnK,EAAAA,EAAAA,KAAA,MAAIoD,MAAOqE,EAAOS,GAAG3G,SAAEkJ,EAAUL,eACjCpK,EAAAA,EAAAA,KAAA,MAAIoD,MAAOqE,EAAOS,GAAG3G,SAAEkJ,EAAUJ,eACjCzH,EAAAA,EAAAA,MAAA,MAAIQ,MAAOqE,EAAOS,GAAG3G,SAAA,EACnBvB,EAAAA,EAAAA,KAAA,UACEoD,MAAO,IAAKqE,EAAO9D,UAAW8D,EAAOc,YACrCzF,QAASA,IAxDF2H,KAAe,IAADM,EAAAC,EAAAC,EACrCrB,EAAqBa,GACrBT,EAAY,CACVC,WAAyB,QAAdc,EAAAN,EAAUK,YAAI,IAAAC,OAAA,EAAdA,EAAgBd,YAAa,GACxCC,UAAwB,QAAdc,EAAAP,EAAUK,YAAI,IAAAE,OAAA,EAAdA,EAAgBd,WAAY,GACtCC,OAAqB,QAAdc,EAAAR,EAAUK,YAAI,IAAAG,OAAA,EAAdA,EAAgBd,QAAS,GAChCC,YAAaK,EAAUL,aAAe,GACtCC,YAAaI,EAAUJ,aAAe,KAExCP,GAAe,EAAK,EA+CWoB,CAAgBT,GAAWlJ,SAC3C,cAGDvB,EAAAA,EAAAA,KAAA,UACEoD,MAAO,IAAKqE,EAAO9D,UAAW8D,EAAOe,cACrC1F,QAASA,IAxEN6D,WACnB,UACQ4D,EAAehD,qBAAqBxI,GAC1C2K,GAAeyB,GAASA,EAAK3G,QAAQ4G,GAAMA,EAAEC,MAAQtM,MACrDuM,OAAOC,SAASC,QAClB,CAAE,MAAOzE,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,GAiE+B0E,CAAahB,EAAUY,KAAK9J,SAC5C,mBAhBIkJ,EAAUY,IAoBd,KAGPrL,EAAAA,EAAAA,KAAA,MAAAuB,UACEvB,EAAAA,EAAAA,KAAA,MAAI0L,QAAQ,IAAItI,MAAOqE,EAAOS,GAAG3G,SAAC,wCAMzCsI,IACC7J,EAAAA,EAAAA,KAAA,OAAKoD,MAAOqE,EAAOgB,aAAalH,UAC9BqB,EAAAA,EAAAA,MAAA,OAAKQ,MAAOqE,EAAOsB,aAAaxH,SAAA,EAC9BvB,EAAAA,EAAAA,KAAA,UAAQoD,MAAOqE,EAAOwB,YAAanG,QAASA,IAAMgH,GAAe,GAAOvI,SAAC,YACzEvB,EAAAA,EAAAA,KAAA,MAAAuB,SAAI,iCACJqB,EAAAA,EAAAA,MAAA,QAAM+I,SAtEKhF,UACnBiF,EAAMC,iBACN,UACQtB,EAAelD,qBAAqBsC,EAAkB0B,IAAKtB,GAM/D+B,YAAW,KACThC,GAAe,GACfwB,OAAOC,SAASC,QAAQ,GACtB,IAER,CAAE,MAAOzE,GACPC,QAAQD,MAAM,mCAAiCA,EACjD,GAsDqCxF,SAAA,EAC3BvB,EAAAA,EAAAA,KAAA,SACEkE,KAAK,OACL6H,YAAY,YACZ3I,MAAOqE,EAAO4B,MACdxJ,MAAOkK,EAASE,UAChB+B,SAAWrO,GAAMqM,EAAY,IAAKD,EAAUE,UAAWtM,EAAEsO,OAAOpM,WAElEG,EAAAA,EAAAA,KAAA,SACEkE,KAAK,OACL6H,YAAY,MACZ3I,MAAOqE,EAAO4B,MACdxJ,MAAOkK,EAASG,SAChB8B,SAAWrO,GAAMqM,EAAY,IAAKD,EAAUG,SAAUvM,EAAEsO,OAAOpM,WAEjEG,EAAAA,EAAAA,KAAA,SACEkE,KAAK,QACL6H,YAAY,QACZ3I,MAAOqE,EAAO4B,MACdxJ,MAAOkK,EAASI,MAChB6B,SAAWrO,GAAMqM,EAAY,IAAKD,EAAUI,MAAOxM,EAAEsO,OAAOpM,WAE9DG,EAAAA,EAAAA,KAAA,UAAQkE,KAAK,SAASd,MAAOqE,EAAO6B,aAAa/H,SAAC,+BAKtD,E,SCnNV,MAgBA,EAhBqB2K,MACEC,EAAAA,EAAAA,QAAO,MAA1B,MACOC,EAAUC,IAAevG,EAAAA,EAAAA,UAAS,KAClCwG,EAAgBC,IAAqBzG,EAAAA,EAAAA,UAAS,OAC9C0G,EAAYC,IAAiB3G,EAAAA,EAAAA,UAAS,MAK7C,OACI9F,EAAAA,EAAAA,KAAC0M,EAAAA,EAAM,CAACC,KAAK,qBAAoBpL,UAChCvB,EAAAA,EAAAA,KAAC4M,EAAkB,KACX,E,gDCrBjB,MAAMC,EAAgBC,EAAAA,GAAS,CAC7B7C,UAAW6C,EAAAA,KAAWC,IAAI,EAAG,CAAEC,QAAS,iDACxC9C,SAAU4C,EAAAA,KAAWC,IAAI,EAAG,CAAEC,QAAS,gDACvC7C,MAAO2C,EAAAA,KAAW3C,MAAM,CAAE6C,QAAS,yBACnC5C,YAAa0C,EAAAA,KAAWC,IAAI,EAAE,CAACC,QAAS,kDAExC3C,YAAayC,EAAAA,KAAWC,IAAI,EAAG,CAAEC,QAAS,oDAuF5C,EA9E8B5O,IAA0B,IAAD6O,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAxB,OAAEC,EAAM,QAAEC,GAASnP,EAChD,MAAOoP,EAAMC,IAAW3H,EAAAA,EAAAA,UAAS,IAE3B,SACJ4H,EAAQ,aACRC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYnB,KAiBxB,OAAKS,GAGHtN,EAAAA,EAAAA,KAACiO,EAAAA,GAAY,CAAA1M,UACXqB,EAAAA,EAAAA,MAACsL,EAAAA,GAAY,CAACvJ,GAAIwJ,EAAAA,EAAO1N,IAAK2N,QAAS,CAAEC,QAAS,EAAGC,MAAO,IAAOC,QAAS,CAAEF,QAAS,EAAGC,MAAO,GAAI/M,SAAA,EACnGvB,EAAAA,EAAAA,KAACwO,EAAAA,GAAW,CAAC1L,QAASyK,EAAQhM,SAAC,YAC/BvB,EAAAA,EAAAA,KAACyO,EAAAA,GAAK,CAAAlN,SAAC,6BAIPvB,EAAAA,EAAAA,KAAC0O,EAAAA,GAAI,CAAC/C,SAAUgC,GArBLhH,UACf,UACQ4D,EAAerD,qBAAqBJ,GAC1C6H,MAAM,6CACNpB,GACF,CAAE,MAAOxG,GAAQ,IAAD6H,EACdD,MAAM,6CACN3H,QAAQD,MAAM,2BAAuC,QAAhB6H,EAAE7H,EAAM8H,gBAAQ,IAAAD,OAAA,EAAdA,EAAgB9H,KACzD,KAa2CvF,SAC3B,IAATiM,IACC5K,EAAAA,EAAAA,MAAAkM,EAAAA,SAAA,CAAAvN,SAAA,EACEvB,EAAAA,EAAAA,KAAC+O,EAAAA,GAAS,CAAAxN,SAAC,sBACXqB,EAAAA,EAAAA,MAACoM,EAAAA,GAAQ,CAAAzN,SAAA,EACPqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACEvB,EAAAA,EAAAA,KAACiP,EAAAA,GAAK,CAAC/K,KAAK,UAAWwJ,EAAS,aAAc3B,YAAY,gBAC1D/L,EAAAA,EAAAA,KAACkP,EAAAA,GAAK,CAAA3N,SAAkB,QAAlB0L,EAAEY,EAAO5D,iBAAS,IAAAgD,OAAA,EAAhBA,EAAkBD,cAE5BpK,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACEvB,EAAAA,EAAAA,KAACiP,EAAAA,GAAK,CAAC/K,KAAK,UAAWwJ,EAAS,YAAa3B,YAAY,eACzD/L,EAAAA,EAAAA,KAACkP,EAAAA,GAAK,CAAA3N,SAAiB,QAAjB2L,EAAEW,EAAO3D,gBAAQ,IAAAgD,OAAA,EAAfA,EAAiBF,iBAG7BpK,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACEvB,EAAAA,EAAAA,KAACiP,EAAAA,GAAK,CAAC/K,KAAK,UAAWwJ,EAAS,SAAU3B,YAAY,WACtD/L,EAAAA,EAAAA,KAACkP,EAAAA,GAAK,CAAA3N,SAAc,QAAd4L,EAAEU,EAAO1D,aAAK,IAAAgD,OAAA,EAAZA,EAAcH,cAExBpK,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACEvB,EAAAA,EAAAA,KAACiP,EAAAA,GAAK,IAAMvB,EAAS,eAAgB3B,YAAY,iBACjD/L,EAAAA,EAAAA,KAACkP,EAAAA,GAAK,CAAA3N,SAAoB,QAApB6L,EAAES,EAAOzD,mBAAW,IAAAgD,OAAA,EAAlBA,EAAoBJ,cAG9BpK,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACEvB,EAAAA,EAAAA,KAACiP,EAAAA,GAAK,CAAC/K,KAAK,UAAWwJ,EAAS,eAAgB3B,YAAY,iBAC5D/L,EAAAA,EAAAA,KAACkP,EAAAA,GAAK,CAAA3N,SAAoB,QAApB8L,EAAEQ,EAAOxD,mBAAW,IAAAgD,OAAA,EAAlBA,EAAoBL,cAG9BhN,EAAAA,EAAAA,KAAA,OAAKoD,MAAO,CAAEzD,UAAW,QAAS4B,UAClCvB,EAAAA,EAAAA,KAACmP,EAAAA,GAAY,CAACjL,KAAK,SAAQ3C,SAAC,uBAvCpB,IAiDH,E,eC9FnB,MA8CA,EA9CiB6N,KACf,MAAOC,EAAiBC,IAAsBxJ,EAAAA,EAAAA,WAAS,IAChDyJ,EAAmBC,IAAwB1J,EAAAA,EAAAA,WAAS,GACrD2J,GAAWC,EAAAA,EAAAA,MAYjB,OACE9M,EAAAA,EAAAA,MAAC+M,EAAAA,EAAI,CAACrR,MAAM,uBAAsBiD,SAAA,EAChCvB,EAAAA,EAAAA,KAAC4P,EAAAA,GAAY,KACb5P,EAAAA,EAAAA,KAACmE,EAAAA,GAAS,CAAA5C,UACRvB,EAAAA,EAAAA,KAAC6P,EAAAA,GAAS,CAAC/M,QAASA,IAAM0M,GAAqB,GAAMjO,SAAC,gCAIvD8N,IACCrP,EAAAA,EAAAA,KAACiO,EAAAA,GAAY,CAAA1M,UACXqB,EAAAA,EAAAA,MAACsL,EAAAA,GAAY,CAAA3M,SAAA,EACXvB,EAAAA,EAAAA,KAACwO,EAAAA,GAAW,CAAC1L,QAASA,IAAMwM,GAAmB,GAAO/N,SAAC,YACvDvB,EAAAA,EAAAA,KAAA,MAAAuB,SAAI,yBACJqB,EAAAA,EAAAA,MAACkN,EAAAA,GAAW,CAAAvO,SAAA,EACVvB,EAAAA,EAAAA,KAAC+P,EAAAA,GAAW,CAACzM,QAAQ,SAASR,QAxBdkN,KAC1BV,GAAmB,GACnBE,GAAqB,EAAK,EAsB2CjO,SAAC,oBAC5DvB,EAAAA,EAAAA,KAAC+P,EAAAA,GAAW,CAACzM,QAAQ,UAAUR,QApBdmN,KAC3BX,GAAmB,GACnBG,EAAS,gBAAgB,EAkB8ClO,SAAC,yCAOtEvB,EAAAA,EAAAA,KAACkQ,EAAqB,CAAC5C,OAAQiC,EAAmBhC,QAASA,IAAMiC,GAAqB,MAEtFxP,EAAAA,EAAAA,KAACmQ,EAAAA,GAAkB,CAAC7C,OAAQiC,GAAqBF,EAAgB9N,UAC/DvB,EAAAA,EAAAA,KAACkM,EAAY,QAEV,C","sources":["assets/filledrating.svg","assets/emptyrating.svg","UI/CustomRating/index.jsx","UI/GroupSeparator/index.jsx","UI/Navigator/MonthNavigator/index.jsx","UI/Navigator/index.jsx","UI/Navigator/style.js","UI/Progress/index.jsx","UI/Reminder/index.jsx","UI/TabNav/style.js","components/GenderNav/index.jsx","components/PersonList/Item/style.js","components/PersonList/index.jsx","components/Widget/WidgetBody/index.jsx","constants/colors.js","hooks/useGenderFilter.js","widgets/servicemanagerlist/style.js","services/ServiceMangerService.js","components/servicemaangerlist/index.jsx","components/servicemaangerlist/Item/index.jsx","widgets/servicemanagerlist/index.jsx","pages/addserviecmanager.jsx","pages/srevicemanager.jsx"],"sourcesContent":["var _rect;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgFilledrating(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 4,\n    viewBox: \"0 0 16 4\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilledrating);\nexport default __webpack_public_path__ + \"static/media/filledrating.8ca5f69685cd0edbb131ac269b415328.svg\";\nexport { ForwardRef as ReactComponent };","var _rect;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgEmptyrating(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 4,\n    viewBox: \"0 0 16 4\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.5,\n    y: 0.5,\n    width: 15,\n    height: 3,\n    rx: 1.5,\n    stroke: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEmptyrating);\nexport default __webpack_public_path__ + \"static/media/emptyrating.24b49c3ea04b53f7657b6427d3464322.svg\";\nexport { ForwardRef as ReactComponent };","// styling\r\nimport styled from 'styled-components';\r\n\r\n// components\r\nimport Rating from 'react-rating'\r\nimport {ReactComponent as Filled} from 'assets/filledrating.svg';\r\nimport {ReactComponent as Empty} from 'assets/emptyrating.svg';\r\n\r\n// hooks\r\nimport {useTheme} from '@mui/material/styles';\r\n\r\nconst StyledRating = styled(Rating)({\r\n    display: 'flex !important',\r\n    gap: 4,\r\n    marginTop: '-8px',\r\n    '& svg.empty': {\r\n        color: '#A2C0D4',\r\n    },\r\n    '& svg.filled': {\r\n        color: '#7ED321',\r\n    }\r\n});\r\n\r\nconst CustomRating = ({value}) => {\r\n    const direction = useTheme().direction;\r\n\r\n    return (\r\n        <StyledRating\r\n            className=\"styled-rating\"\r\n            initialRating={value}\r\n            direction={direction}\r\n            emptySymbol={<Empty className=\"empty\"/>}\r\n            fullSymbol={<Filled className=\"filled\"/>}\r\n            readonly />\r\n    )\r\n}\r\n\r\nexport default CustomRating;","// styling\r\nimport styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {effects, fonts, textSizes, dark, light} from 'styles/vars';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Separator = styled.div`\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    border-bottom: ${theme('theme', {\r\n        light: effects.dashedLight,\r\n        dark: effects.dashedDark\r\n    })};\r\n    left: 0;\r\n    right: 0;\r\n    transform: translateY(-50%);\r\n    z-index: 1;\r\n  }\r\n`\r\n\r\nconst SeparatorText = styled.span`\r\n  text-transform: uppercase;\r\n  padding: 0 6px;\r\n  position: relative;\r\n  z-index: 2;\r\n  margin-left: 17px;\r\n  font-size: ${textSizes['10']};\r\n  font-weight: 500;\r\n  font-family: ${fonts.accent};\r\n  background-color: ${theme('theme', {\r\n    light: light.widgetBg,\r\n    dark: dark.widgetBg\r\n  })};\r\n})\r\n`\r\n\r\nconst GroupSeparator = ({text}) => {\r\n    return (\r\n        <Separator className=\"separator\">\r\n            <SeparatorText>{text}</SeparatorText>\r\n        </Separator>\r\n    )\r\n}\r\n\r\nGroupSeparator.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GroupSeparator;","// components\r\nimport Navigator from 'UI/Navigator';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MonthNavigator = ({state, handler, loop = true}) => {\r\n\r\n    const navigate = e => {\r\n        const direction = e.currentTarget.dataset.direction;\r\n        let current = state.number;\r\n\r\n        if (direction === 'prev') {\r\n            current !== 0 ? current-- : current = 11;\r\n        } else {\r\n            current !== 11 ? current++ : current = 0;\r\n        }\r\n        handler(prevState => {\r\n            return {...prevState, number: current}\r\n        });\r\n\r\n        let currentMonth = new Date().getMonth(),\r\n            prevMonth = currentMonth - 1,\r\n            nextMonth = currentMonth + 1;\r\n\r\n        let label = '';\r\n        const dateObj = new Date(2022, current, 1);\r\n\r\n        if (current === currentMonth) {\r\n            label = 'This month'\r\n        } else if (current === prevMonth) {\r\n            label = 'Previous month';\r\n        } else if (current === nextMonth) {\r\n            label = 'Next month';\r\n        } else {\r\n            label = dateObj.toLocaleString('en-US', {month: 'long'})\r\n        }\r\n        handler(prevState => {\r\n            return {...prevState, label: label}\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Navigator handler={navigate}\r\n                   text={state.label}\r\n                   prevDisabled={!loop && state.number === 0}\r\n                   nextDisabled={!loop && state.number === new Date().getMonth()}\r\n        />\r\n    )\r\n}\r\n\r\nMonthNavigator.propTypes = {\r\n    state: PropTypes.shape(\r\n        {\r\n            number: PropTypes.number.isRequired,\r\n            label: PropTypes.string.isRequired\r\n        }).isRequired,\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default MonthNavigator;","// styled components\r\nimport {Wrapper} from './style';\r\n\r\n// utils\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navigator = ({text, handler, prevDisabled, nextDisabled, ...props}) => {\r\n    return (\r\n        <Wrapper className=\"navigator\" {...props}>\r\n            <button className={prevDisabled ? 'disabled' : ''} onClick={handler} data-direction=\"prev\" aria-label=\"Previous\">\r\n                <i className=\"icon icon-chevron-left\"></i>\r\n            </button>\r\n            <span className=\"label\">{text}</span>\r\n            <button className={nextDisabled ? 'disabled' : ''} onClick={handler} data-direction=\"next\" aria-label=\"Next\">\r\n                <i className=\"icon icon-chevron-right\"></i>\r\n            </button>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nNavigator.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    handler: PropTypes.func.isRequired,\r\n    prevDisabled: PropTypes.bool,\r\n    nextDisabled: PropTypes.bool\r\n}\r\n\r\nexport default Navigator;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {dark, flex, light, textSizes} from 'styles/vars';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  ${flex.between};\r\n  height: 40px;\r\n  gap: 20px;\r\n  padding: 0 22px;\r\n  font-size: ${textSizes['14']};\r\n  border-radius: 8px;\r\n  background-color: ${theme('theme', {light: light.bodyBg, dark: dark.bodyBg})};\r\n\r\n  .label {\r\n    user-select: none;\r\n  }\r\n\r\n  button {\r\n    transition: opacity var(--transition);\r\n\r\n    &:hover, &:focus {\r\n      opacity: .8;\r\n    }\r\n\r\n    &.disabled {\r\n      pointer-events: none;\r\n      opacity: 0;\r\n    }\r\n  }\r\n`","// styling\r\nimport {dark, colors} from 'styles/vars';\r\n\r\n// components\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\n// hooks\r\nimport {useTheme} from 'styled-components';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Progress = ({color = colors.blue, value, style = {}}) => {\r\n    const {theme} = useTheme();\r\n\r\n    return <LinearProgress className=\"progressbar\"\r\n                           variant=\"determinate\"\r\n                           aria-label={value}\r\n                           value={value}\r\n                           sx={{\r\n                               backgroundColor: theme === 'light' ? '#E4EAF0' : dark.highlight,\r\n                               height: 6,\r\n                               borderRadius: 2,\r\n                               ...style,\r\n\r\n                               '& .MuiLinearProgress-bar': {\r\n                                   backgroundColor: color,\r\n                                   borderRadius: 2,\r\n                               }\r\n                           }}/>\r\n}\r\n\r\nProgress.propTypes = {\r\n    color: PropTypes.string,\r\n    value: PropTypes.number.isRequired,\r\n    style: PropTypes.object,\r\n}\r\n\r\nexport default Progress;","// styling\r\nimport styled from 'styled-components';\r\nimport {colors, flex, textSizes} from 'styles/vars';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\nimport {colorTypes} from 'constants/colors';\r\n\r\nconst Wrapper = styled.button`\r\n  display: flex;\r\n  ${flex.center};\r\n  border-radius: 20px;\r\n  padding: 10px 16px;\r\n  color: #fff;\r\n  font-size: ${textSizes['14']};\r\n  gap: 10px;\r\n  background-color: ${props => colors[colorTypes.find(item => item.cat === props.reminder).color]};\r\n\r\n  span {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n`\r\n\r\nconst Reminder = ({reminder, handler}) => {\r\n    const {text, type} = reminder;\r\n    return (\r\n        <Wrapper className=\"reminder\" onClick={handler} reminder={type}>\r\n            <i className=\"icon icon-clock\"></i>\r\n            <span>{text}</span>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nReminder.propTypes = {\r\n    reminder: PropTypes.shape({\r\n        type: PropTypes.string.isRequired,\r\n        text: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    handler: PropTypes.func\r\n}\r\n\r\nexport default Reminder;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {flex, textSizes, light, dark, colors} from 'styles/vars';\r\n\r\nconst current = theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: light.text\r\n})\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-auto-columns: minmax(0, 1fr);\r\n  grid-auto-flow: column;\r\n  grid-gap: 2px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  height: 40px;\r\n  font-size: ${textSizes['14']};\r\n  text-transform: capitalize;\r\n  transition: background-color var(--transition);\r\n  ${theme('theme', {\r\n    light: `\r\n        color: ${colors.blue};\r\n        background-color: ${light.highlight};\r\n    `,\r\n    dark: `\r\n        color: ${colors.secondary};\r\n        background-color: ${dark.highlight};\r\n    `\r\n  })};\r\n  display: flex;\r\n  ${flex.center}\r\n  \r\n  &[aria-selected=\"true\"],\r\n  &.active,\r\n  &:hover, &:focus {\r\n    background-color: ${current};\r\n  }\r\n`\r\n\r\nexport const Item = styled.div`\r\n  &.active .nav-link {\r\n    background-color: ${current};\r\n  };\r\n`","// styled components\r\nimport {Container, Item, Button} from 'UI/TabNav/style';\r\n\r\n// utils\r\nimport {nanoid} from \"nanoid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NavButton = ({state, filter, handler}) => {\r\n    const isActive = state.value === filter.value;\r\n    return (\r\n        <Button className={isActive ? 'active' : ''}\r\n                onClick={() => handler({value: filter.value, label: filter.label})}\r\n        >\r\n            {filter.label}\r\n        </Button>\r\n    )\r\n}\r\n\r\nconst GenderNav = ({state, handler}) => {\r\n    const options = [\r\n        {\r\n            value: 'all',\r\n            label: 'all'\r\n        },\r\n        {\r\n            value: 'male',\r\n            label: 'Men'\r\n        },\r\n        {\r\n            value: 'female',\r\n            label: 'Women'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Container as=\"ul\" className=\"gender\">\r\n            {\r\n                options.map(item => {\r\n                    return (\r\n                        <Item key={nanoid(3)}>\r\n                            <NavButton state={state} filter={item} handler={handler} />\r\n                        </Item>\r\n                    )\r\n                })\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nGenderNav.propTypes = {\r\n    state: PropTypes.object.isRequired,\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default GenderNav;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {colors, dark, breakpoints, flex, light, textSizes, fonts} from 'styles/vars';\r\n\r\nexport const Block = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n\r\n  .main {\r\n    ${flex.col}\r\n    justify-content: space-between;\r\n\r\n    .name {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .age {\r\n      font-size: ${textSizes['14']};\r\n    }\r\n  }\r\n\r\n  .wrapper {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  @media screen and (min-width: 666.98px) {\r\n    flex-grow: 1;\r\n    &.actions {\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    .wrapper {\r\n      flex-grow: unset;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  ${flex.col}\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  padding: 20px;\r\n  gap: 20px 0;\r\n  background-color: ${theme('theme', {\r\n    light: light.highlight,\r\n    dark: dark.highlight\r\n  })};\r\n  transition: background-color var(--transition);\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${theme('theme', {\r\n      light: light.bodyBg,\r\n      dark: dark.bodyBg\r\n    })};\r\n  }\r\n  \r\n  .overview {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n  }\r\n\r\n  .main {\r\n    width: calc(100% - 40px);\r\n\r\n    .department {\r\n      font-size: ${textSizes['14']};\r\n      margin-top: 2px;\r\n    }\r\n  }\r\n\r\n  .rating, .booked {\r\n    ${flex.col};\r\n    gap: 7px;\r\n    font-size: ${textSizes['12']};\r\n    font-family: ${fonts.accent};\r\n  }\r\n  \r\n  .styled-rating {\r\n    margin-top: -5px;\r\n  }\r\n  \r\n  .contacts {\r\n    display: flex;\r\n    gap: 20px;\r\n  }\r\n\r\n  button {\r\n    transition: background-color var(--transition), color var(--transition);\r\n\r\n    &.booking {\r\n      font-size: ${textSizes['14']};\r\n      font-family: ${fonts.accent};\r\n      border-radius: 20px;\r\n      padding: 12px 16px;\r\n      color: ${theme('theme', {\r\n        light: colors.blue,\r\n        dark: '#fff'\r\n      })};\r\n      \r\n      &:hover, &:focus {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  button:not(.reminder) {\r\n    background-color: ${theme('theme', {\r\n      light: light.widgetBg,\r\n      dark: dark.widgetBg\r\n    })};\r\n\r\n    &:hover, &:focus {\r\n      background-color: ${colors.blue};\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 666.98px) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-end;\r\n\r\n    button.reminder {\r\n      order: 3;\r\n      width: 100%;\r\n    }\r\n    \r\n    &.doctor, &.staff {\r\n      justify-content: space-between;\r\n      ${Block} {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n  \r\n  ${breakpoints.tablet} {\r\n    &.doctor .avatar {\r\n      width: 60px;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.laptop} {\r\n    align-items: center;\r\n    gap: 20px;\r\n    button.reminder {\r\n      order: unset;\r\n      width: fit-content;\r\n    }\r\n\r\n    &.doctor, &.staff {\r\n      justify-content: space-between;\r\n      gap: 40px;\r\n      ${Block} {\r\n        width: fit-content;\r\n      }\r\n      \r\n      .overview {\r\n        gap: 40px;\r\n      }\r\n    }\r\n\r\n    ${Block} {\r\n      &.actions {\r\n        flex-grow: unset;\r\n      }\r\n    }\r\n  }\r\n  \r\n  ${breakpoints.desktop} {\r\n    .booked {\r\n      width: 275px;\r\n    }\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  ${flex.center};\r\n  gap: 8px;\r\n  border-radius: 20px;\r\n  font-size: ${textSizes['14']};\r\n  height: 40px;\r\n  width: 40px;\r\n  color: ${light.text};\r\n  transition: color var(--transition), background-color var(--transition);\r\n\r\n  .icon {\r\n    color: ${colors.gray};\r\n    transition: color var(--transition);\r\n  }\r\n\r\n  .text {\r\n    display: none;\r\n  }\r\n\r\n  &:hover, &:focus {\r\n    background-color: ${colors.blue};\r\n    color: #fff;\r\n\r\n    .icon {\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.mobileL} {\r\n    width: fit-content;\r\n    padding: 0 16px;\r\n    .text {\r\n      display: block;\r\n    }\r\n  }\r\n`\r\n","// styling\r\nimport styled from 'styled-components';\r\nimport {flex} from 'styles/vars';\r\n\r\n// components\r\nimport Item from 'components/PersonList/Item';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst List = styled.ul`\r\n  ${flex.col};\r\n  gap: 20px;\r\n  margin: 20px;\r\n`\r\n\r\nconst PersonList = ({ arr, type, gender, deps }) => {\r\n  const { search, category } = deps ? deps : { search: '', category: '' };\r\n\r\n  return (\r\n      <List>\r\n          {arr.map((item, i) => (\r\n              <Item \r\n                  key={`${item.id}-${gender}-${search}-${category}`} \r\n                  data={{ ...item, phone: String(item.phone) }} // Convertir phone en string\r\n                  type={type} \r\n              />\r\n          ))}\r\n      </List>\r\n  );\r\n};\r\n\r\n\r\nPersonList.propTypes = {\r\n    type: PropTypes.oneOf(['doctor', 'patient', 'staff','servicemanager']).isRequired,\r\n    arr: PropTypes.array.isRequired\r\n}\r\n\r\nexport default PersonList;","// styled components\r\nimport {Body} from '../style';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WidgetBody = ({children, style, sidePadding = false, elRef, ...props}) => {\r\n    return <Body ref={elRef} sidePadding={sidePadding} style={style} {...props}>{children}</Body>\r\n}\r\n\r\nWidgetBody.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]).isRequired,\r\n    sidePadding: PropTypes.bool,\r\n    style: PropTypes.any,\r\n}\r\n\r\nexport default WidgetBody;","export const colorTypes = [\r\n    {cat: 'emergency', label: 'Emergency', color: 'red'},\r\n    {cat: 'consultation', label: 'Consultation', color: 'azure'},\r\n    {cat: 'test', label: 'Examination', color: 'teal'},\r\n    {cat: 'checkup', label: 'Routine checkup', color: 'purple'},\r\n    {cat: 'sick', label: 'Sick visit', color: 'orange'},\r\n];\r\n\r\nexport const tasksColors = [\r\n    {cat: 'work', color: 'teal'},\r\n    {cat: 'travel', color: 'orange'},\r\n    {cat: 'family', color: 'azure'},\r\n    {cat: 'other', color: 'purple'}\r\n]","import { useState } from 'react';\r\n\r\nconst useGenderFilter = (targetArr) => {\r\n    const [gender, setGender] = useState({ value: \"all\", label: \"All\" });\r\n\r\n    const genderArr = (gender) => {\r\n        if (gender.value === \"all\") return targetArr; // Ne pas filtrer si \"all\" est sélectionné\r\n        return targetArr.filter(item => item.sex?.toLowerCase() === gender.value);\r\n    };\r\n\r\n    return {\r\n        genderArr,\r\n        gender,\r\n        setGender\r\n    };\r\n};\r\n\r\nexport default useGenderFilter;\r\n","import styled from 'styled-components/macro';\r\nimport theme from 'styled-theming';\r\nimport {dark, light, flex, colors, breakpoints} from 'styles/vars';\r\nimport {HeaderWrapper} from 'components/Widget/style';\r\n\r\nexport const NavWrapper = styled(HeaderWrapper)`\r\n  ${breakpoints.tablet} {\r\n    flex-direction: row;\r\n    ${flex.between};\r\n\r\n    .gender {\r\n      max-width: 300px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LetterNav = styled.ul`\r\n  display: flex;\r\n  margin: 0 2px;\r\n  gap: 1px;\r\n  height: 80px;\r\n  align-items: center;\r\n  border-radius: 8px;\r\n  padding: 0 18px;\r\n  overflow-x: auto;\r\n  background-color: ${theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: dark.bodyBg\r\n  })};\r\n`\r\n\r\nexport const LetterNavWrapper = styled.div`\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  &:before, &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    background: ${theme('theme', {\r\n      light: light.shadow,\r\n      dark: dark.shadowDarker\r\n    })};\r\n    height: 100%;\r\n    width: 24px;\r\n    z-index: 1;\r\n    filter: blur(1px);\r\n    display: block;\r\n  }\r\n\r\n  &:before {\r\n    left: 2px;\r\n  }\r\n\r\n  &:after {\r\n    right: 2px;\r\n    transform: scaleX(-1);\r\n  }\r\n`\r\n\r\nexport const LetterNavItem = styled.a`\r\n  display: flex;\r\n  ${flex.center};\r\n  width: 44px;\r\n  height: 40px;\r\n  text-transform: uppercase;\r\n  color: ${colors.blue};\r\n  border-radius: 8px;\r\n  background: ${theme('theme', {\r\n    light: light.widgetBg,\r\n    dark: dark.widgetBg\r\n  })};\r\n  transition: color var(--transition), background var(--transition);\r\n\r\n  &:hover, &:focus {\r\n    background-color: ${colors.blue};\r\n    color: #fff;\r\n  }\r\n\r\n  &:not(&.active) {\r\n    pointer-events: none;\r\n    background-color: transparent;\r\n    color: ${theme('theme', {\r\n      light: light.text,\r\n      dark: dark.text\r\n    })};\r\n  }\r\n`\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/serviceManager\";\r\n\r\nconst ServiceManagerService = {\r\n  // 📌 Récupérer tous les service managers\r\n  getAllServiceManagers: async () => {\r\n    try {\r\n      const response = await axios.get(API_URL);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du chargement des service managers:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 📌 Récupérer un service manager par ID\r\n  getServiceManagerById: async (id) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération du service manager:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 📌 Créer un nouveau service manager\r\n  createServiceManager: async (serviceManagerData) => {\r\n    try {\r\n      const response = await axios.post(API_URL, serviceManagerData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la création du service manager:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 📌 Mettre à jour un service manager\r\n  updateServiceManager: async (id, serviceManagerData) => {\r\n    try {\r\n      const response = await axios.put(`${API_URL}/${id}`, serviceManagerData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la mise à jour du service manager:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 📌 Supprimer un service manager\r\n  deleteServiceManager: async (id) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/${id}`);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la suppression du service manager:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default ServiceManagerService;\r\n","// styling\r\nimport styled from 'styled-components/macro';\r\nimport {flex} from 'styles/vars';\r\n\r\n// components\r\nimport Item from 'components/PersonList/Item';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport PatientService from 'services/ServiceMangerService';\r\n\r\nconst List = styled.ul`\r\n  ${flex.col};\r\n  gap: 20px;\r\n  margin: 20px;\r\n`\r\n\r\nconst PersonList1 = ({ arr, type, gender, deps }) => {\r\n  const { search, category } = deps ? deps : { search: '', category: '' };\r\n    const [patients, setPatients] = useState([]);\r\n\r\n  useEffect(() => {\r\n          const fetchPatients = async () => {\r\n              try {\r\n                  const data = await PatientService.getAllServiceManagers();\r\n                  setPatients(data);\r\n                  console.log(data);\r\n              } catch (error) {\r\n                  console.error(\"Failed to fetch patients\", error);\r\n              }\r\n          };\r\n          fetchPatients();\r\n      }, []);\r\n  return (\r\n      <List>\r\n          {patients.map((item, i) => (\r\n              <Item \r\n                  key={`${item.id}-${gender}-${search}-${category}`} \r\n                  data={{ ...item, phone: String(item.phone) }} // Convertir phone en string\r\n                  type={type} \r\n              />\r\n          ))}\r\n      </List>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default PersonList1;","import React, { useEffect, useState } from 'react';\r\nimport PatientService from 'services/ServiceMangerService';\r\n\r\nconst styles = {\r\n  paramedicListContainer: {\r\n    padding: '20px',\r\n    backgroundColor: '#f4f7f6',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  table: {\r\n    width: '100%',\r\n    borderCollapse: 'collapse',\r\n    marginTop: '20px',\r\n  },\r\n  th: {\r\n    padding: '12px 20px',\r\n    textAlign: 'left',\r\n    backgroundColor: '#2196F3',\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  td: {\r\n    padding: '12px 20px',\r\n    textAlign: 'left',\r\n  },\r\n  evenRow: {\r\n    backgroundColor: '#f2f2f2',\r\n  },\r\n  button: {\r\n    padding: '8px 16px',\r\n    margin: '5px',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  editButton: {\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n  },\r\n  deleteButton: {\r\n    backgroundColor: '#f44336',\r\n    color: 'white',\r\n  },\r\n  modalOverlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: '20px',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n    minWidth: '400px',\r\n  },\r\n  closeButton: {\r\n    float: 'right',\r\n    cursor: 'pointer',\r\n    fontSize: '20px',\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    border: 'none',\r\n    background: 'none',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: '8px',\r\n    margin: '10px 0',\r\n    border: '1px solid #ddd',\r\n    borderRadius: '4px',\r\n  },\r\n  submitButton: {\r\n    width: '100%',\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    padding: '10px',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nconst ParamedicList = () => {\r\n  console.log(\"sss\")\r\n  const [paramedics, setParamedics] = useState([]);\r\n  const [selectedParamedic, setSelectedParamedic] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    badgeNumber: '',\r\n    departement: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchPatients = async () => {\r\n      try {\r\n        const data = await PatientService.getAllServiceManagers();\r\n        setParamedics(data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch patients', error);\r\n      }\r\n    };\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await PatientService.deleteServiceManager(id);\r\n      setParamedics((prev) => prev.filter((p) => p._id !== id));\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression', error);\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (paramedic) => {\r\n    setSelectedParamedic(paramedic);\r\n    setFormData({\r\n      firstName: paramedic.user?.firstName || '',\r\n      lastName: paramedic.user?.lastName || '',\r\n      email: paramedic.user?.email || '',\r\n      badgeNumber: paramedic.badgeNumber || '',\r\n      departement: paramedic.departement || '',\r\n    });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleUpdate = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await PatientService.updateServiceManager(selectedParamedic._id, formData);\r\n     /* setParamedics((prev) =>\r\n        prev.map((p) =>\r\n          p._id === selectedParamedic._id ? { ...p, ...formData, user: { ...p.user, ...formData } } : p\r\n        )\r\n      );*/\r\n        setTimeout(() => {\r\n          setIsModalOpen(false);\r\n          window.location.reload()\r\n        },  500);\r\n      \r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.paramedicListContainer}>\r\n      <table style={styles.table}>\r\n        <thead>\r\n          <tr>\r\n            <th style={styles.th}>Nom</th>\r\n            <th style={styles.th}>Prénom</th>\r\n            <th style={styles.th}>Email</th>\r\n            <th style={styles.th}>Badge Number</th>\r\n            <th style={styles.th}>Département</th>\r\n            <th style={styles.th}>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {paramedics.length > 0 ? (\r\n            paramedics.map((paramedic, index) => (\r\n              <tr key={paramedic._id} style={index % 2 === 0 ? styles.evenRow : {}}>\r\n                <td style={styles.td}>{paramedic.user?.firstName || 'Inconnu'}</td>\r\n                <td style={styles.td}>{paramedic.user?.lastName || 'Inconnu'}</td>\r\n                <td style={styles.td}>{paramedic.user?.email || 'Inconnu'}</td>\r\n                <td style={styles.td}>{paramedic.badgeNumber}</td>\r\n                <td style={styles.td}>{paramedic.departement}</td>\r\n                <td style={styles.td}>\r\n                  <button\r\n                    style={{ ...styles.button, ...styles.editButton }}\r\n                    onClick={() => handleEditClick(paramedic)}\r\n                  >\r\n                    Modifier\r\n                  </button>\r\n                  <button\r\n                    style={{ ...styles.button, ...styles.deleteButton }}\r\n                    onClick={() => handleDelete(paramedic._id)}\r\n                  >\r\n                    Supprimer\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"6\" style={styles.td}>Aucun paramédic trouvé</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      {isModalOpen && (\r\n        <div style={styles.modalOverlay}>\r\n          <div style={styles.modalContent}>\r\n            <button style={styles.closeButton} onClick={() => setIsModalOpen(false)}>✖</button>\r\n            <h2>Modifier le Service Manager</h2>\r\n            <form onSubmit={handleUpdate}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Prénom\"\r\n                style={styles.input}\r\n                value={formData.firstName}\r\n                onChange={(e) => setFormData({ ...formData, firstName: e.target.value })}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Nom\"\r\n                style={styles.input}\r\n                value={formData.lastName}\r\n                onChange={(e) => setFormData({ ...formData, lastName: e.target.value })}\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                style={styles.input}\r\n                value={formData.email}\r\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n              />\r\n              <button type=\"submit\" style={styles.submitButton}>Mettre à jour</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParamedicList;\r\n","import { Header } from 'components/Widget/style';\r\nimport { LetterNav, LetterNavWrapper, LetterNavItem, NavWrapper } from './style';\r\n\r\n// components\r\nimport Widget from 'components/Widget';\r\nimport WidgetBody from 'components/Widget/WidgetBody';\r\nimport GenderNav from 'components/GenderNav';\r\nimport MonthNavigator from 'UI/Navigator/MonthNavigator';\r\nimport Group from './Group';\r\nimport NoDataPlaceholder from 'components/NoDataPlaceholder';\r\nimport Servicemanagerlist from '../../components/servicemaangerlist/Item/index'\r\n// utils\r\nimport { generateAlphabet } from 'utils/helpers';\r\nimport { nanoid } from 'nanoid';\r\n\r\n// hooks\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport useGenderFilter from 'hooks/useGenderFilter';\r\n\r\n// import corrected\r\nimport PatientService from 'services/ServiceMangerService';\r\n\r\nconst PatientsList = () => {\r\n    const contentRef = useRef(null);\r\n    const [patients, setPatients] = useState([]);\r\n    const [selectedLetter, setSelectedLetter] = useState(null);\r\n    const [lastGender, setLastGender] = useState(null);\r\n\r\n  \r\n\r\n \r\n    return (\r\n        <Widget name=\"servicemanagerlist\">\r\n         <Servicemanagerlist />\r\n        </Widget>\r\n    );\r\n};\r\n\r\nexport default PatientsList;\r\n","import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport * as z from \"zod\";\r\nimport {\r\n  GlobalStyles, Input, Form, ButtonContainer, ProgressBar, NavButton, NextButton, SubmitButton, Line,\r\n  ModalContent, ModalOverlay, CloseButton,Error, Title, StepContainer, Step, InputRow, Select, FormTitle\r\n} from \"../styles/PopUpAddPatient\";\r\nimport PatientService from \"../services/ServiceMangerService\";\r\nimport { margin } from \"polished\";\r\n\r\n// ✅ Définition du schéma de validation avec Zod\r\nconst patientSchema = z.object({\r\n  firstName: z.string().min(2, { message: \"First Name is required (min 2 caractères)\" }),\r\n  lastName: z.string().min(2, { message: \"Last Name is required (min 2 caractères)\" }),\r\n  email: z.string().email({ message: \"Invalid email format\" }),\r\n  badgeNumber: z.string().min(2,{message: \"badgeNumber is required (min 2 caractères)\" }),\r\n\r\n  departement: z.string().min(2, { message: \"departement is required (min 2 caractères)\" }),\r\n\r\n});\r\n\r\nconst steps = [\r\n  { number: 1, label: \"User Information\" },\r\n  { number: 2, label: \"Personal Information\" },\r\n];\r\n\r\nconst AddSimplePatientPopup = ({ isOpen, onClose }) => {\r\n  const [step, setStep] = useState(1);\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: zodResolver(patientSchema),\r\n  });\r\n\r\n  const nextStep = () => setStep((prev) => Math.min(prev + 1, steps.length));\r\n  const prevStep = () => setStep((prev) => Math.max(prev - 1, 1));\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      await PatientService.createServiceManager(data);\r\n      alert(\"✅ Patient ajouté avec succès !\");\r\n      onClose();\r\n    } catch (error) {\r\n      alert(\"❌ Erreur lors de l'ajout du patient.\");\r\n      console.error(\"Détails de l'erreur :\", error.response?.data);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <ModalOverlay>\r\n      <ModalContent as={motion.div} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }}>\r\n        <CloseButton onClick={onClose}>✖</CloseButton>\r\n        <Title>Add NEW Service Manager</Title>\r\n\r\n        \r\n\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          {step === 1 && (\r\n            <>\r\n              <FormTitle>User Information</FormTitle>\r\n              <InputRow>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"firstName\")} placeholder=\"First Name\" />\r\n                  <Error>{errors.firstName?.message}</Error>\r\n                </div>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"lastName\")} placeholder=\"Last Name\" />\r\n                  <Error>{errors.lastName?.message}</Error>\r\n                </div>\r\n              </InputRow>\r\n              <div>\r\n                <Input type=\"text\" {...register(\"email\")} placeholder=\"Email\" />\r\n                <Error>{errors.email?.message}</Error>\r\n              </div>\r\n              <div>\r\n                <Input  {...register(\"badgeNumber\")} placeholder=\"badgeNumber\" />\r\n                <Error>{errors.badgeNumber?.message}</Error>\r\n              </div>\r\n              \r\n              <div>\r\n                <Input type=\"text\" {...register(\"departement\")} placeholder=\"departement\" />\r\n                <Error>{errors.departement?.message}</Error>\r\n              </div>\r\n              \r\n              <div style={{ marginTop: \"11px\" }}>\r\n              <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n        \r\n\r\n         \r\n        </Form>\r\n      </ModalContent>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default AddSimplePatientPopup;\r\n","import React, { useState } from \"react\";\r\nimport { GlobalStyles, Container, AddButton, DisabledBackground } from \"../styles/PopUpAddPatient\";\r\nimport Page from \"layout/Page\";\r\nimport PatientsList from \"widgets/servicemanagerlist\";\r\nimport AddSimplePatientPopup from \"./addserviecmanager\";\r\nimport { ModalOverlay, ModalContent, CloseButton, ButtonGroup, ModalButton } from \"../styles/PopUpAddPatient\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Patients = () => {\r\n  const [isTypePopupOpen, setIsTypePopupOpen] = useState(false);\r\n  const [isSimplePopupOpen, setIsSimplePopupOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSimplePatient = () => {\r\n    setIsTypePopupOpen(false);\r\n    setIsSimplePopupOpen(true);\r\n  };\r\n\r\n  const handleMedicalPatient = () => {\r\n    setIsTypePopupOpen(false);\r\n    navigate(\"/medical_form\"); // Redirection vers la page avec le formulaire médical\r\n  };\r\n\r\n  return (\r\n    <Page title=\"service manager List\">\r\n      <GlobalStyles />\r\n      <Container>\r\n        <AddButton onClick={() => setIsSimplePopupOpen(true)}>+ Add new service manager</AddButton>\r\n      </Container>\r\n\r\n      {/* Popup pour choisir le type de patient */}\r\n      {isTypePopupOpen && (\r\n        <ModalOverlay>\r\n          <ModalContent>\r\n            <CloseButton onClick={() => setIsTypePopupOpen(false)}>✖</CloseButton>\r\n            <h2>Choose Patient Type</h2>\r\n            <ButtonGroup>\r\n              <ModalButton variant=\"simple\" onClick={handleSimplePatient}>Simple Patient</ModalButton>\r\n              <ModalButton variant=\"medical\" onClick={handleMedicalPatient}>Patient with Medical Record</ModalButton>\r\n            </ButtonGroup>\r\n          </ModalContent>\r\n        </ModalOverlay>\r\n      )}\r\n\r\n      {/* Popup d'ajout du patient simple */}\r\n      <AddSimplePatientPopup isOpen={isSimplePopupOpen} onClose={() => setIsSimplePopupOpen(false)} />\r\n\r\n      <DisabledBackground isOpen={isSimplePopupOpen || isTypePopupOpen}>\r\n        <PatientsList />\r\n      </DisabledBackground>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n"],"names":["_rect","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgFilledrating","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","rx","ForwardRef","SvgEmptyrating","x","y","stroke","StyledRating","styled","Rating","display","gap","marginTop","color","value","direction","useTheme","_jsx","className","initialRating","emptySymbol","Empty","fullSymbol","Filled","readonly","Separator","div","theme","light","effects","dashedLight","dark","dashedDark","SeparatorText","span","textSizes","fonts","accent","widgetBg","text","children","state","handler","loop","Navigator","currentTarget","dataset","current","number","prevState","currentMonth","Date","getMonth","prevMonth","nextMonth","label","dateObj","toLocaleString","month","prevDisabled","nextDisabled","_jsxs","Wrapper","onClick","flex","between","bodyBg","colors","blue","style","LinearProgress","variant","sx","backgroundColor","highlight","borderRadius","button","center","colorTypes","find","item","cat","reminder","type","Container","Button","secondary","Item","NavButton","filter","isActive","_ref2","as","map","nanoid","Block","col","breakpoints","tablet","laptop","desktop","gray","mobileL","ul","sidePadding","elRef","Body","tasksColors","targetArr","gender","setGender","useState","genderArr","_item$sex","sex","toLowerCase","HeaderWrapper","withConfig","componentId","shadow","shadowDarker","a","API_URL","getAllServiceManagers","async","axios","get","data","error","console","getServiceManagerById","createServiceManager","post","serviceManagerData","updateServiceManager","put","deleteServiceManager","delete","styles","paramedicListContainer","padding","boxShadow","table","borderCollapse","th","textAlign","fontWeight","td","evenRow","margin","border","cursor","editButton","deleteButton","modalOverlay","position","top","left","justifyContent","alignItems","modalContent","minWidth","closeButton","float","fontSize","background","input","submitButton","ParamedicList","log","paramedics","setParamedics","selectedParamedic","setSelectedParamedic","isModalOpen","setIsModalOpen","formData","setFormData","firstName","lastName","email","badgeNumber","departement","useEffect","PatientService","fetchPatients","paramedic","index","_paramedic$user4","_paramedic$user5","_paramedic$user6","user","_paramedic$user","_paramedic$user2","_paramedic$user3","handleEditClick","prev","p","_id","window","location","reload","handleDelete","colSpan","onSubmit","event","preventDefault","setTimeout","placeholder","onChange","target","PatientsList","useRef","patients","setPatients","selectedLetter","setSelectedLetter","lastGender","setLastGender","Widget","name","Servicemanagerlist","patientSchema","z","min","message","_errors$firstName","_errors$lastName","_errors$email","_errors$badgeNumber","_errors$departement","isOpen","onClose","step","setStep","register","handleSubmit","formState","errors","useForm","resolver","zodResolver","ModalOverlay","ModalContent","motion","initial","opacity","scale","animate","CloseButton","Title","Form","alert","_error$response","response","_Fragment","FormTitle","InputRow","Input","Error","SubmitButton","Patients","isTypePopupOpen","setIsTypePopupOpen","isSimplePopupOpen","setIsSimplePopupOpen","navigate","useNavigate","Page","GlobalStyles","AddButton","ButtonGroup","ModalButton","handleSimplePatient","handleMedicalPatient","AddSimplePatientPopup","DisabledBackground"],"sourceRoot":""}