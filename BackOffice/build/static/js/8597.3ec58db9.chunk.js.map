{"version":3,"file":"static/js/8597.3ec58db9.chunk.js","mappings":"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","sources":["assets/filledrating.svg","assets/emptyrating.svg","UI/CustomRating/index.jsx","UI/GroupSeparator/index.jsx","UI/Navigator/MonthNavigator/index.jsx","UI/Navigator/index.jsx","UI/Navigator/style.js","UI/Progress/index.jsx","UI/Reminder/index.jsx","UI/TabNav/style.js","components/GenderNav/index.jsx","components/PersonList/Item/style.js","components/PersonList/index.jsx","components/Widget/WidgetBody/index.jsx","constants/colors.js","hooks/useGenderFilter.js","widgets/StaffList/style.js","components/StaffList/Item/style.js","services/StaffService.js","styles/PopUpAddStaff.js","pages/EditStaffForm.jsx","components/StaffList/Item/index.jsx","components/StaffList/index.jsx","widgets/StaffList/Group/index.jsx","widgets/StaffList/index.jsx","pages/Staff.jsx"],"sourcesContent":["var _rect;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgFilledrating(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 4,\n    viewBox: \"0 0 16 4\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilledrating);\nexport default __webpack_public_path__ + \"static/media/filledrating.8ca5f69685cd0edbb131ac269b415328.svg\";\nexport { ForwardRef as ReactComponent };","var _rect;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgEmptyrating(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 4,\n    viewBox: \"0 0 16 4\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.5,\n    y: 0.5,\n    width: 15,\n    height: 3,\n    rx: 1.5,\n    stroke: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEmptyrating);\nexport default __webpack_public_path__ + \"static/media/emptyrating.24b49c3ea04b53f7657b6427d3464322.svg\";\nexport { ForwardRef as ReactComponent };","// styling\r\nimport styled from 'styled-components';\r\n\r\n// components\r\nimport Rating from 'react-rating'\r\nimport {ReactComponent as Filled} from 'assets/filledrating.svg';\r\nimport {ReactComponent as Empty} from 'assets/emptyrating.svg';\r\n\r\n// hooks\r\nimport {useTheme} from '@mui/material/styles';\r\n\r\nconst StyledRating = styled(Rating)({\r\n    display: 'flex !important',\r\n    gap: 4,\r\n    marginTop: '-8px',\r\n    '& svg.empty': {\r\n        color: '#A2C0D4',\r\n    },\r\n    '& svg.filled': {\r\n        color: '#7ED321',\r\n    }\r\n});\r\n\r\nconst CustomRating = ({value}) => {\r\n    const direction = useTheme().direction;\r\n\r\n    return (\r\n        <StyledRating\r\n            className=\"styled-rating\"\r\n            initialRating={value}\r\n            direction={direction}\r\n            emptySymbol={<Empty className=\"empty\"/>}\r\n            fullSymbol={<Filled className=\"filled\"/>}\r\n            readonly />\r\n    )\r\n}\r\n\r\nexport default CustomRating;","// styling\r\nimport styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {effects, fonts, textSizes, dark, light} from 'styles/vars';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Separator = styled.div`\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    border-bottom: ${theme('theme', {\r\n        light: effects.dashedLight,\r\n        dark: effects.dashedDark\r\n    })};\r\n    left: 0;\r\n    right: 0;\r\n    transform: translateY(-50%);\r\n    z-index: 1;\r\n  }\r\n`\r\n\r\nconst SeparatorText = styled.span`\r\n  text-transform: uppercase;\r\n  padding: 0 6px;\r\n  position: relative;\r\n  z-index: 2;\r\n  margin-left: 17px;\r\n  font-size: ${textSizes['10']};\r\n  font-weight: 500;\r\n  font-family: ${fonts.accent};\r\n  background-color: ${theme('theme', {\r\n    light: light.widgetBg,\r\n    dark: dark.widgetBg\r\n  })};\r\n})\r\n`\r\n\r\nconst GroupSeparator = ({text}) => {\r\n    return (\r\n        <Separator className=\"separator\">\r\n            <SeparatorText>{text}</SeparatorText>\r\n        </Separator>\r\n    )\r\n}\r\n\r\nGroupSeparator.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GroupSeparator;","// components\r\nimport Navigator from 'UI/Navigator';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MonthNavigator = ({state, handler, loop = true}) => {\r\n\r\n    const navigate = e => {\r\n        const direction = e.currentTarget.dataset.direction;\r\n        let current = state.number;\r\n\r\n        if (direction === 'prev') {\r\n            current !== 0 ? current-- : current = 11;\r\n        } else {\r\n            current !== 11 ? current++ : current = 0;\r\n        }\r\n        handler(prevState => {\r\n            return {...prevState, number: current}\r\n        });\r\n\r\n        let currentMonth = new Date().getMonth(),\r\n            prevMonth = currentMonth - 1,\r\n            nextMonth = currentMonth + 1;\r\n\r\n        let label = '';\r\n        const dateObj = new Date(2022, current, 1);\r\n\r\n        if (current === currentMonth) {\r\n            label = 'This month'\r\n        } else if (current === prevMonth) {\r\n            label = 'Previous month';\r\n        } else if (current === nextMonth) {\r\n            label = 'Next month';\r\n        } else {\r\n            label = dateObj.toLocaleString('en-US', {month: 'long'})\r\n        }\r\n        handler(prevState => {\r\n            return {...prevState, label: label}\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Navigator handler={navigate}\r\n                   text={state.label}\r\n                   prevDisabled={!loop && state.number === 0}\r\n                   nextDisabled={!loop && state.number === new Date().getMonth()}\r\n        />\r\n    )\r\n}\r\n\r\nMonthNavigator.propTypes = {\r\n    state: PropTypes.shape(\r\n        {\r\n            number: PropTypes.number.isRequired,\r\n            label: PropTypes.string.isRequired\r\n        }).isRequired,\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default MonthNavigator;","// styled components\r\nimport {Wrapper} from './style';\r\n\r\n// utils\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navigator = ({text, handler, prevDisabled, nextDisabled, ...props}) => {\r\n    return (\r\n        <Wrapper className=\"navigator\" {...props}>\r\n            <button className={prevDisabled ? 'disabled' : ''} onClick={handler} data-direction=\"prev\" aria-label=\"Previous\">\r\n                <i className=\"icon icon-chevron-left\"></i>\r\n            </button>\r\n            <span className=\"label\">{text}</span>\r\n            <button className={nextDisabled ? 'disabled' : ''} onClick={handler} data-direction=\"next\" aria-label=\"Next\">\r\n                <i className=\"icon icon-chevron-right\"></i>\r\n            </button>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nNavigator.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    handler: PropTypes.func.isRequired,\r\n    prevDisabled: PropTypes.bool,\r\n    nextDisabled: PropTypes.bool\r\n}\r\n\r\nexport default Navigator;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {dark, flex, light, textSizes} from 'styles/vars';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  ${flex.between};\r\n  height: 40px;\r\n  gap: 20px;\r\n  padding: 0 22px;\r\n  font-size: ${textSizes['14']};\r\n  border-radius: 8px;\r\n  background-color: ${theme('theme', {light: light.bodyBg, dark: dark.bodyBg})};\r\n\r\n  .label {\r\n    user-select: none;\r\n  }\r\n\r\n  button {\r\n    transition: opacity var(--transition);\r\n\r\n    &:hover, &:focus {\r\n      opacity: .8;\r\n    }\r\n\r\n    &.disabled {\r\n      pointer-events: none;\r\n      opacity: 0;\r\n    }\r\n  }\r\n`","// styling\r\nimport {dark, colors} from 'styles/vars';\r\n\r\n// components\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\n// hooks\r\nimport {useTheme} from 'styled-components';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Progress = ({color = colors.blue, value, style = {}}) => {\r\n    const {theme} = useTheme();\r\n\r\n    return <LinearProgress className=\"progressbar\"\r\n                           variant=\"determinate\"\r\n                           aria-label={value}\r\n                           value={value}\r\n                           sx={{\r\n                               backgroundColor: theme === 'light' ? '#E4EAF0' : dark.highlight,\r\n                               height: 6,\r\n                               borderRadius: 2,\r\n                               ...style,\r\n\r\n                               '& .MuiLinearProgress-bar': {\r\n                                   backgroundColor: color,\r\n                                   borderRadius: 2,\r\n                               }\r\n                           }}/>\r\n}\r\n\r\nProgress.propTypes = {\r\n    color: PropTypes.string,\r\n    value: PropTypes.number.isRequired,\r\n    style: PropTypes.object,\r\n}\r\n\r\nexport default Progress;","// styling\r\nimport styled from 'styled-components';\r\nimport {colors, flex, textSizes} from 'styles/vars';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\nimport {colorTypes} from 'constants/colors';\r\n\r\nconst Wrapper = styled.button`\r\n  display: flex;\r\n  ${flex.center};\r\n  border-radius: 20px;\r\n  padding: 10px 16px;\r\n  color: #fff;\r\n  font-size: ${textSizes['14']};\r\n  gap: 10px;\r\n  background-color: ${props => colors[colorTypes.find(item => item.cat === props.reminder).color]};\r\n\r\n  span {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n`\r\n\r\nconst Reminder = ({reminder, handler}) => {\r\n    const {text, type} = reminder;\r\n    return (\r\n        <Wrapper className=\"reminder\" onClick={handler} reminder={type}>\r\n            <i className=\"icon icon-clock\"></i>\r\n            <span>{text}</span>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nReminder.propTypes = {\r\n    reminder: PropTypes.shape({\r\n        type: PropTypes.string.isRequired,\r\n        text: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    handler: PropTypes.func\r\n}\r\n\r\nexport default Reminder;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {flex, textSizes, light, dark, colors} from 'styles/vars';\r\n\r\nconst current = theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: light.text\r\n})\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-auto-columns: minmax(0, 1fr);\r\n  grid-auto-flow: column;\r\n  grid-gap: 2px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  height: 40px;\r\n  font-size: ${textSizes['14']};\r\n  text-transform: capitalize;\r\n  transition: background-color var(--transition);\r\n  ${theme('theme', {\r\n    light: `\r\n        color: ${colors.blue};\r\n        background-color: ${light.highlight};\r\n    `,\r\n    dark: `\r\n        color: ${colors.secondary};\r\n        background-color: ${dark.highlight};\r\n    `\r\n  })};\r\n  display: flex;\r\n  ${flex.center}\r\n  \r\n  &[aria-selected=\"true\"],\r\n  &.active,\r\n  &:hover, &:focus {\r\n    background-color: ${current};\r\n  }\r\n`\r\n\r\nexport const Item = styled.div`\r\n  &.active .nav-link {\r\n    background-color: ${current};\r\n  };\r\n`","// styled components\r\nimport {Container, Item, Button} from 'UI/TabNav/style';\r\n\r\n// utils\r\nimport {nanoid} from \"nanoid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NavButton = ({state, filter, handler}) => {\r\n    const isActive = state.value === filter.value;\r\n    return (\r\n        <Button className={isActive ? 'active' : ''}\r\n                onClick={() => handler({value: filter.value, label: filter.label})}\r\n        >\r\n            {filter.label}\r\n        </Button>\r\n    )\r\n}\r\n\r\nconst GenderNav = ({state, handler}) => {\r\n    const options = [\r\n        {\r\n            value: 'all',\r\n            label: 'all'\r\n        },\r\n        {\r\n            value: 'male',\r\n            label: 'Men'\r\n        },\r\n        {\r\n            value: 'female',\r\n            label: 'Women'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Container as=\"ul\" className=\"gender\">\r\n            {\r\n                options.map(item => {\r\n                    return (\r\n                        <Item key={nanoid(3)}>\r\n                            <NavButton state={state} filter={item} handler={handler} />\r\n                        </Item>\r\n                    )\r\n                })\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nGenderNav.propTypes = {\r\n    state: PropTypes.object.isRequired,\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default GenderNav;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {colors, dark, breakpoints, flex, light, textSizes, fonts} from 'styles/vars';\r\n\r\nexport const Block = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n\r\n  .main {\r\n    ${flex.col}\r\n    justify-content: space-between;\r\n\r\n    .name {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .age {\r\n      font-size: ${textSizes['14']};\r\n    }\r\n  }\r\n\r\n  .wrapper {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  @media screen and (min-width: 666.98px) {\r\n    flex-grow: 1;\r\n    &.actions {\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    .wrapper {\r\n      flex-grow: unset;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  ${flex.col}\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  padding: 20px;\r\n  gap: 20px 0;\r\n  background-color: ${theme('theme', {\r\n    light: light.highlight,\r\n    dark: dark.highlight\r\n  })};\r\n  transition: background-color var(--transition);\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${theme('theme', {\r\n      light: light.bodyBg,\r\n      dark: dark.bodyBg\r\n    })};\r\n  }\r\n  \r\n  .overview {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n  }\r\n\r\n  .main {\r\n    width: calc(100% - 40px);\r\n\r\n    .department {\r\n      font-size: ${textSizes['14']};\r\n      margin-top: 2px;\r\n    }\r\n  }\r\n\r\n  .rating, .booked {\r\n    ${flex.col};\r\n    gap: 7px;\r\n    font-size: ${textSizes['12']};\r\n    font-family: ${fonts.accent};\r\n  }\r\n  \r\n  .styled-rating {\r\n    margin-top: -5px;\r\n  }\r\n  \r\n  .contacts {\r\n    display: flex;\r\n    gap: 20px;\r\n  }\r\n\r\n  button {\r\n    transition: background-color var(--transition), color var(--transition);\r\n\r\n    &.booking {\r\n      font-size: ${textSizes['14']};\r\n      font-family: ${fonts.accent};\r\n      border-radius: 20px;\r\n      padding: 12px 16px;\r\n      color: ${theme('theme', {\r\n        light: colors.blue,\r\n        dark: '#fff'\r\n      })};\r\n      \r\n      &:hover, &:focus {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  button:not(.reminder) {\r\n    background-color: ${theme('theme', {\r\n      light: light.widgetBg,\r\n      dark: dark.widgetBg\r\n    })};\r\n\r\n    &:hover, &:focus {\r\n      background-color: ${colors.blue};\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 666.98px) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-end;\r\n\r\n    button.reminder {\r\n      order: 3;\r\n      width: 100%;\r\n    }\r\n    \r\n    &.doctor, &.staff {\r\n      justify-content: space-between;\r\n      ${Block} {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n  \r\n  ${breakpoints.tablet} {\r\n    &.doctor .avatar {\r\n      width: 60px;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.laptop} {\r\n    align-items: center;\r\n    gap: 20px;\r\n    button.reminder {\r\n      order: unset;\r\n      width: fit-content;\r\n    }\r\n\r\n    &.doctor, &.staff {\r\n      justify-content: space-between;\r\n      gap: 40px;\r\n      ${Block} {\r\n        width: fit-content;\r\n      }\r\n      \r\n      .overview {\r\n        gap: 40px;\r\n      }\r\n    }\r\n\r\n    ${Block} {\r\n      &.actions {\r\n        flex-grow: unset;\r\n      }\r\n    }\r\n  }\r\n  \r\n  ${breakpoints.desktop} {\r\n    .booked {\r\n      width: 275px;\r\n    }\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  ${flex.center};\r\n  gap: 8px;\r\n  border-radius: 20px;\r\n  font-size: ${textSizes['14']};\r\n  height: 40px;\r\n  width: 40px;\r\n  color: ${light.text};\r\n  transition: color var(--transition), background-color var(--transition);\r\n\r\n  .icon {\r\n    color: ${colors.gray};\r\n    transition: color var(--transition);\r\n  }\r\n\r\n  .text {\r\n    display: none;\r\n  }\r\n\r\n  &:hover, &:focus {\r\n    background-color: ${colors.blue};\r\n    color: #fff;\r\n\r\n    .icon {\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.mobileL} {\r\n    width: fit-content;\r\n    padding: 0 16px;\r\n    .text {\r\n      display: block;\r\n    }\r\n  }\r\n`\r\n","// styling\r\nimport styled from 'styled-components';\r\nimport {flex} from 'styles/vars';\r\n\r\n// components\r\nimport Item from 'components/PersonList/Item';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst List = styled.ul`\r\n  ${flex.col};\r\n  gap: 20px;\r\n  margin: 20px;\r\n`\r\n\r\nconst PersonList = ({ arr, type, gender, deps }) => {\r\n  const { search, category } = deps ? deps : { search: '', category: '' };\r\n\r\n  return (\r\n      <List>\r\n          {arr.map((item, i) => (\r\n              <Item \r\n                  key={`${item.id}-${gender}-${search}-${category}`} \r\n                  data={{ ...item, phone: String(item.phone) }} // Convertir phone en string\r\n                  type={type} \r\n              />\r\n          ))}\r\n      </List>\r\n  );\r\n};\r\n\r\n\r\nPersonList.propTypes = {\r\n    type: PropTypes.oneOf(['doctor', 'patient', 'staff','servicemanager']).isRequired,\r\n    arr: PropTypes.array.isRequired\r\n}\r\n\r\nexport default PersonList;","// styled components\r\nimport {Body} from '../style';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WidgetBody = ({children, style, sidePadding = false, elRef, ...props}) => {\r\n    return <Body ref={elRef} sidePadding={sidePadding} style={style} {...props}>{children}</Body>\r\n}\r\n\r\nWidgetBody.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]).isRequired,\r\n    sidePadding: PropTypes.bool,\r\n    style: PropTypes.any,\r\n}\r\n\r\nexport default WidgetBody;","export const colorTypes = [\r\n    {cat: 'emergency', label: 'Emergency', color: 'red'},\r\n    {cat: 'consultation', label: 'Consultation', color: 'azure'},\r\n    {cat: 'test', label: 'Examination', color: 'teal'},\r\n    {cat: 'checkup', label: 'Routine checkup', color: 'purple'},\r\n    {cat: 'sick', label: 'Sick visit', color: 'orange'},\r\n];\r\n\r\nexport const tasksColors = [\r\n    {cat: 'work', color: 'teal'},\r\n    {cat: 'travel', color: 'orange'},\r\n    {cat: 'family', color: 'azure'},\r\n    {cat: 'other', color: 'purple'}\r\n]","import { useState } from 'react';\r\n\r\nconst useGenderFilter = (targetArr) => {\r\n    const [gender, setGender] = useState({ value: \"all\", label: \"All\" });\r\n\r\n    const genderArr = (gender) => {\r\n        if (gender.value === \"all\") return targetArr; // Ne pas filtrer si \"all\" est sélectionné\r\n        return targetArr.filter(item => item.sex?.toLowerCase() === gender.value);\r\n    };\r\n\r\n    return {\r\n        genderArr,\r\n        gender,\r\n        setGender\r\n    };\r\n};\r\n\r\nexport default useGenderFilter;\r\n","import styled from 'styled-components/macro';\r\nimport theme from 'styled-theming';\r\nimport {dark, light, flex, colors, breakpoints} from 'styles/vars';\r\nimport {HeaderWrapper} from 'components/Widget/style';\r\n\r\nexport const NavWrapper = styled(HeaderWrapper)`\r\n  ${breakpoints.tablet} {\r\n    flex-direction: row;\r\n    ${flex.between};\r\n\r\n    .gender {\r\n      max-width: 300px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LetterNav = styled.ul`\r\n  display: flex;\r\n  margin: 0 2px;\r\n  gap: 1px;\r\n  height: 80px;\r\n  align-items: center;\r\n  border-radius: 8px;\r\n  padding: 0 18px;\r\n  overflow-x: auto;\r\n  background-color: ${theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: dark.bodyBg\r\n  })};\r\n`\r\n\r\nexport const LetterNavWrapper = styled.div`\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  &:before, &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    background: ${theme('theme', {\r\n      light: light.shadow,\r\n      dark: dark.shadowDarker\r\n    })};\r\n    height: 100%;\r\n    width: 24px;\r\n    z-index: 1;\r\n    filter: blur(1px);\r\n    display: block;\r\n  }\r\n\r\n  &:before {\r\n    left: 2px;\r\n  }\r\n\r\n  &:after {\r\n    right: 2px;\r\n    transform: scaleX(-1);\r\n  }\r\n`\r\n\r\nexport const LetterNavItem = styled.a`\r\n  display: flex;\r\n  ${flex.center};\r\n  width: 44px;\r\n  height: 40px;\r\n  text-transform: uppercase;\r\n  color: ${colors.blue};\r\n  border-radius: 8px;\r\n  background: ${theme('theme', {\r\n    light: light.widgetBg,\r\n    dark: dark.widgetBg\r\n  })};\r\n  transition: color var(--transition), background var(--transition);\r\n\r\n  &:hover, &:focus {\r\n    background-color: ${colors.blue};\r\n    color: #fff;\r\n  }\r\n\r\n  &:not(&.active) {\r\n    pointer-events: none;\r\n    background-color: transparent;\r\n    color: ${theme('theme', {\r\n      light: light.text,\r\n      dark: dark.text\r\n    })};\r\n  }\r\n`\r\n","import styled from 'styled-components/macro';\r\nimport theme from 'styled-theming';\r\nimport {colors, dark, breakpoints, flex, light, textSizes, fonts} from 'styles/vars';\r\n\r\nexport const Block = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n\r\n  .main {\r\n    ${flex.col}\r\n    justify-content: space-between;\r\n\r\n    .name {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .age {\r\n      font-size: ${textSizes['14']};\r\n    }\r\n  }\r\n\r\n  .wrapper {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  @media screen and (min-width: 666.98px) {\r\n    flex-grow: 1;\r\n    &.actions {\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    .wrapper {\r\n      flex-grow: unset;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  ${flex.col}\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  padding: 20px;\r\n  gap: 20px 0;\r\n  background-color: ${theme('theme', {\r\n    light: light.highlight,\r\n    dark: dark.highlight\r\n  })};\r\n  transition: background-color var(--transition);\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${theme('theme', {\r\n      light: light.bodyBg,\r\n      dark: dark.bodyBg\r\n    })};\r\n  }\r\n  \r\n  .overview {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n  }\r\n\r\n  .main {\r\n    width: calc(100% - 40px);\r\n\r\n    .department {\r\n      font-size: ${textSizes['14']};\r\n      margin-top: 2px;\r\n    }\r\n  }\r\n\r\n  .rating, .booked {\r\n    ${flex.col};\r\n    gap: 7px;\r\n    font-size: ${textSizes['12']};\r\n    font-family: ${fonts.accent};\r\n  }\r\n  \r\n  .styled-rating {\r\n    margin-top: -5px;\r\n  }\r\n  \r\n  .contacts {\r\n    display: flex;\r\n    gap: 20px;\r\n  }\r\n\r\n  button {\r\n    transition: background-color var(--transition), color var(--transition);\r\n\r\n    &.booking {\r\n      font-size: ${textSizes['14']};\r\n      font-family: ${fonts.accent};\r\n      border-radius: 20px;\r\n      padding: 12px 16px;\r\n      color: ${theme('theme', {\r\n        light: colors.blue,\r\n        dark: '#fff'\r\n      })};\r\n      \r\n      &:hover, &:focus {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  button:not(.reminder) {\r\n    background-color: ${theme('theme', {\r\n      light: light.widgetBg,\r\n      dark: dark.widgetBg\r\n    })};\r\n\r\n    &:hover, &:focus {\r\n      background-color: ${colors.blue};\r\n      color:${colors.white};\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 666.98px) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-end;\r\n\r\n    button.reminder {\r\n      order: 3;\r\n      width: 100%;\r\n    }\r\n    \r\n    &.doctor, &.staff {\r\n      justify-content: space-between;\r\n      ${Block} {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n  \r\n  ${breakpoints.tablet} {\r\n    &.doctor .avatar {\r\n      width: 60px;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.laptop} {\r\n    align-items: center;\r\n    gap: 20px;\r\n    button.reminder {\r\n      order: unset;\r\n      width: fit-content;\r\n    }\r\n\r\n    &.doctor, &.staff {\r\n      justify-content: space-between;\r\n      gap: 40px;\r\n      ${Block} {\r\n        width: fit-content;\r\n      }\r\n      \r\n      .overview {\r\n        gap: 40px;\r\n      }\r\n    }\r\n\r\n    ${Block} {\r\n      &.actions {\r\n        flex-grow: unset;\r\n      }\r\n    }\r\n  }\r\n  \r\n  ${breakpoints.desktop} {\r\n    .booked {\r\n      width: 275px;\r\n    }\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  ${flex.center};\r\n  gap: 8px;\r\n  border-radius: 20px;\r\n  font-size: ${textSizes['14']};\r\n  height: 40px;\r\n  width: 40px;\r\n  color: ${light.text};\r\n  transition: color var(--transition), background-color var(--transition);\r\n\r\n  .icon {\r\n    color: ${colors.gray};\r\n    transition: color var(--transition);\r\n  }\r\n\r\n  .text {\r\n    display: none;\r\n  }\r\n\r\n  &:hover, &:focus {\r\n    background-color: ${colors.blue};\r\n    color: #fff;\r\n\r\n    .icon {\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.mobileL} {\r\n    width: fit-content;\r\n    padding: 0 16px;\r\n    .text {\r\n      display: block;\r\n    }\r\n  }\r\n`\r\nexport const DropdownContainer = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n`;\r\n\r\nexport const Menu = styled.ul`\r\n  position: absolute;\r\n  top: 40px;\r\n  right: 0;\r\n  background: white;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  list-style: none;\r\n  padding: 8px 0;\r\n  min-width: 160px;\r\n  z-index: 100;\r\n`;\r\n\r\nexport const MenuItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 10px 16px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  color: #333;\r\n  transition: background 0.2s;\r\n\r\n  &:hover {\r\n    background: #f5f5f5;\r\n  }\r\n\r\n  &:last-child {\r\n    border-top: 1px solid #ddd;\r\n    color: red;\r\n  }\r\n`;\r\n\r\n\r\n/*const actionIcons = {\r\n  delete: <FaTrash style={{ fontSize: '1.5rem', color: '#e53e3e' }} />,\r\n  update: <FaEdit style={{ fontSize: '1.5rem', color: '#f6ad55' }} />,\r\n  add: <FaPlus style={{ fontSize: '1.5rem', color: '#48bb78' }} />,\r\n  deactivate: <FaRegPauseCircle style={{ fontSize: '1.5rem', color: '#fbbf24' }} />,\r\n  activate: <FaCheckCircle style={{ fontSize: '1.5rem', color: '#38a169' }} />\r\n};*/","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/staff\"; // Changer l'endpoint\r\n\r\nconst StaffService = {\r\n  getAllStaff: async () => {\r\n    try {\r\n      const response = await axios.get(API_URL);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du chargement du personnel:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getStaffById: async (id) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération du personnel:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  createStaff: async (staffData) => {\r\n    try {\r\n      const response = await axios.post(API_URL, staffData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la création du personnel:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateStaff: async (id, staffData) => {\r\n    try {\r\n      const response = await axios.put(`${API_URL}/${id}`, staffData); // Vérifiez si l'URL est correcte\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la mise à jour du staff:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n,  \r\n\r\n  deleteStaff: async (id) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/${id}`);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la suppression du personnel:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default StaffService;\r\n","import styled, { createGlobalStyle,keyframes  } from \"styled-components\";\r\n\r\n\r\n// Animation d’apparition\r\nexport const fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: scale(0.8);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// Boutons groupés\r\nexport const Error = styled.span`\r\n  color: red;\r\n  font-size: 12px;\r\n  margin-top: 4px;\r\n`;\r\n\r\n// Boutons groupés\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  margin-top: 20px;\r\n`;\r\n\r\n// Style général des boutons\r\nexport const ModalButton = styled.button`\r\n  width: 100%;\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n  background: ${(props) => (props.variant === \"simple\" ? \"#3498db\" : \"#2ecc71\")};\r\n  color: white;\r\n\r\n  &:hover {\r\n    background: ${(props) => (props.variant === \"simple\" ? \"#2980b9\" : \"#27ae60\")};\r\n  }\r\n`;\r\n\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: Arial, sans-serif;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 12px 24px;\r\n  background-color: ${(props) => (props.gray ? \"#ccc\" : \"#2563eb\")};\r\n  color: ${(props) => (props.gray ? \"#000\" : \"white\")};\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background 0.3s;\r\n  &:hover {\r\n    background-color: ${(props) => (props.gray ? \"#bbb\" : \"#1d4ed8\")};\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(Button)`\r\n  && {\r\n    padding: 10px 20px;\r\n    background-color: #007bff;\r\n    color: white;\r\n    border-radius: 10px;\r\n    &:hover {\r\n      background-color: #0056b3;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const ModalOverlay = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 8000;\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  max-width: 800px;\r\n  position: relative;\r\n  text-align: center;\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  border: none;\r\n  background: none;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport  const Title = styled.h1`\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 3px;\r\n  margin-top: 7px;\r\n   justify-content: center;\r\n  align-items: center;\r\n  margin-left:10px;\r\n`;\r\n\r\n\r\nexport  const ProgressBar = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport  const Step = styled.div`\r\n  width: 60px;\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  background: ${(props) => (props.active ? \"#2563eb\" : \"#e5e7eb\")};\r\n  color: ${(props) => (props.active ? \"#fff\" : \"#000\")};\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  margin: 0 0px;\r\n`;\r\n\r\nexport  const Line = styled.div`\r\n  height: 4px;\r\n  width: 300px;\r\n  background: #e5e7eb;\r\n  margin: 0 0px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 4px 4px 4px 4px rgba(0, 0, 0, 0.15);\r\n  width: 80%;\r\n  max-height: 1650px; \r\n  max-width: 650px; \r\n  height: 180; \r\n  text-align: center;\r\n  margin: 0 auto; \r\n`;\r\n\r\n\r\nexport  const Label = styled.label`\r\n  display: block;\r\n  text-align: left;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport  const Input = styled.input`\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 8px;\r\n  margin-buttom:8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const InputRow = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const ButtonRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n`;\r\n\r\n\r\n\r\nexport const ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const NavButton = styled.button`\r\n  padding: 10px 20px;\r\n  background-color: #ccc;\r\n  color: black;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #bbb;\r\n  }\r\n`;\r\n\r\nexport const NextButton = styled.button`\r\n  padding: 10px 20px;\r\n  background-color: #2563eb;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #1d4ed8;\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  padding: 12px 24px;\r\n  background-color: green;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: darkgreen;\r\n  }\r\n`;\r\n\r\nexport const DisabledBackground = styled.div`\r\n  filter: ${(props) => (props.isOpen ? \"blur(3px)\" : \"none\")};\r\n  pointer-events: ${(props) => (props.isOpen ? \"none\" : \"auto\")};\r\n`;\r\n\r\n\r\n\r\n\r\nexport const Select = styled.select`\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  background: white;\r\n  color:grey;\r\n  margin-top: 8px;\r\n  margin-buttom:8px;\r\n`;\r\n\r\nexport const RadioGroup = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const RadioButton = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  cursor: pointer;\r\n\r\n  input {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\nexport const StepContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const FormTitle= styled.h2`\r\n font-size: 19px;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n   justify-content: center;\r\n  align-items: center;\r\n  margin-left: 30px;\r\n`;","import React, { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { motion } from \"framer-motion\";\r\nimport Page from \"layout/Page\";\r\nimport StaffService from \"../services/StaffService\";\r\nimport { \r\n  GlobalStyles, Input, DisabledBackground, Form, ButtonContainer, \r\n  Line, ProgressBar, NavButton, NextButton, SubmitButton, Container, \r\n  AddButton, ModalContent, ModalOverlay, CloseButton, Title, StepContainer, Step, \r\n  InputRow, ButtonRow, Select, FormTitle\r\n} from \"../styles/PopUpAddStaff\";\r\n\r\nconst steps = [\r\n  { number: 1, label: \"Personal Information\" },\r\n  { number: 2, label: \"Job Information\" },\r\n  { number: 3, label: \"Final Submission\" }\r\n];\r\n\r\nconst EditStaffForm = ({ staffData, closeForm }) => {\r\n  const [step, setStep] = useState(1);\r\n  const [formData, setFormData] = useState({\r\n    firstName: staffData?.user?.firstName || '',\r\n    lastName: staffData?.user?.lastName || '',\r\n    email: staffData?.user?.email || '',\r\n    password: \"\",\r\n    badgeNumber: staffData?.badgeNumber || '',\r\n    service: staffData?.service || '',\r\n  });\r\n\r\n  // Mise à jour des champs\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Vérification des champs nécessaires avant de soumettre\r\n    if (!formData.firstName || !formData.lastName || !formData.email) {\r\n        alert(\"Tous les champs d'information personnelle sont requis.\");\r\n        return;\r\n    }\r\n\r\n    if (!formData.badgeNumber || !formData.service) {\r\n        alert(\"Les informations liées au travail sont requises.\");\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // Vérifie que l'ID du personnel et l'ID de l'utilisateur sont valides\r\n        if (!staffData?._id || !staffData.user?._id) {\r\n            console.error(\"Erreur : L'ID du personnel ou de l'utilisateur est manquant ou invalide !\");\r\n            alert(\"Erreur : L'ID du personnel ou de l'utilisateur est manquant ou invalide !\");\r\n            return;\r\n        }\r\n\r\n        console.log(\"staffData\", staffData);  // Ajoutez cette ligne pour déboguer\r\n\r\n        // Mise à jour du personnel\r\n        const updatedStaff = await StaffService.updateStaff(staffData._id, {\r\n            firstName: formData.firstName,\r\n            lastName: formData.lastName,\r\n            email: formData.email,\r\n            badgeNumber: formData.badgeNumber,\r\n            service: formData.service,\r\n            userId: staffData.user._id, // Assurez-vous que `staffData.user._id` est défini\r\n        });\r\n\r\n        console.log(\"Personnel mis à jour\", updatedStaff);\r\n        alert(\"Mise à jour réussie !\");\r\n        closeForm();\r\n        window.location.reload();\r\n    } catch (error) {\r\n        // Gestion des erreurs avec des détails\r\n        console.error(\"Erreur lors de la mise à jour :\", error.response?.data || error.message);\r\n        alert(\"Échec de la mise à jour : \" + (error.response?.data?.message || error.message));\r\n    }\r\n};\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n  const nextStep = () => setStep((prev) => Math.min(prev + 1, steps.length));\r\n  const prevStep = () => setStep((prev) => Math.max(prev - 1, 1));\r\n\r\n  return (\r\n    <Page title=\"Edit Staff\">\r\n      <GlobalStyles />\r\n      <Container>\r\n        <AddButton onClick={() => setStep(1)}>+ Edit Staff</AddButton>\r\n      </Container>\r\n\r\n      <ModalOverlay>\r\n        <ModalContent as={motion.div} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }}>\r\n          <CloseButton onClick={closeForm}>✖</CloseButton>\r\n          <Title>Edit Staff</Title>\r\n\r\n          <ProgressBar>\r\n            {steps.map(({ number, label }, index) => (\r\n              <React.Fragment key={index}>\r\n                <StepContainer>\r\n                  <Step active={step >= number}>{number}</Step>\r\n                  <span>{label}</span>\r\n                </StepContainer>\r\n                {index < steps.length - 1 && <Line />}\r\n              </React.Fragment>\r\n            ))}\r\n          </ProgressBar>\r\n\r\n          <Form onSubmit={handleSubmit}>\r\n            {step === 1 && (\r\n              <>\r\n                <FormTitle>Personal Information</FormTitle>\r\n                <InputRow>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    placeholder=\"First Name\"\r\n                    value={formData.firstName}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    placeholder=\"Last Name\"\r\n                    value={formData.lastName}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </InputRow>\r\n                <InputRow>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </InputRow>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={formData.password}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </>\r\n            )}\r\n            {step === 2 && (\r\n              <>\r\n                <FormTitle>Job Information</FormTitle>\r\n                <InputRow>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"badgeNumber\"\r\n                    placeholder=\"Badge Number\"\r\n                    value={formData.badgeNumber}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"service\"\r\n                    placeholder=\"Service\"\r\n                    value={formData.service}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </InputRow>\r\n              </>\r\n            )}\r\n            {step === 3 && (\r\n              <>\r\n                <FormTitle>Final Submission</FormTitle>\r\n                <p>Review all details before submitting.</p>\r\n              </>\r\n            )}\r\n\r\n            <ButtonContainer>\r\n              {step > 1 && <NavButton type=\"button\" onClick={prevStep}>Back</NavButton>}\r\n              {step < steps.length ? (\r\n                <NextButton type=\"button\" onClick={nextStep}>Next →</NextButton>\r\n              ) : (\r\n                <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n              )}\r\n            </ButtonContainer>\r\n          </Form>\r\n        </ModalContent>\r\n      </ModalOverlay>\r\n    </Page>\r\n  );\r\n};\r\n\r\n\r\nexport default EditStaffForm;\r\n\r\n","import { useState } from 'react';\r\nimport { Wrapper, Block, Button } from './style';\r\nimport Avatar from 'UI/Avatar';\r\nimport ShapeButton from 'UI/ShapeButton';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport EditStaffForm from 'pages/EditStaffForm'; // Assurez-vous d'importer le bon composant de pop-up\r\nimport Reminder from 'UI/Reminder';\r\nimport StaffService from 'services/StaffService';\r\n\r\nconst Item = ({ type, data, onEdit, onDelete }) => {\r\n  const [visibleInfo, setVisibleInfo] = useState({});\r\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false); // Ajoutez cet état pour gérer la visibilité du pop-up\r\n  const navigate = useNavigate();\r\n\r\n  const togglePhoneVisibility = (id) => {\r\n    setVisibleInfo((prev) => ({\r\n      ...prev,\r\n      [id]: !prev[id],\r\n    }));\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditPopupOpen(true); // Ouvre le pop-up lorsque le bouton \"Edit\" est cliqué\r\n    if (onEdit) onEdit(data);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await StaffService.deleteStaff(data._id);\r\n      alert(\"Staff deleted successfully!\");\r\n      window.location.reload();\r\n    } catch (error) {\r\n      alert(\"Failed to delete staff.\");\r\n    }\r\n  };\r\n\r\n  const closeEditPopup = () => {\r\n    setIsEditPopupOpen(false); // Ferme le pop-up\r\n  };\r\n\r\n  const { user, online, avatar, phone, role } = data;\r\n  const [isActive, setIsActive] = useState(false);\r\n  const toggleActivation = () => {\r\n    setIsActive(!isActive);\r\n  };\r\n\r\n  const Common = () => (\r\n    <Block>\r\n      <Avatar avatar={avatar} alt={`${user?.lastName} ${user?.firstName}`} online={online} />\r\n      <div className=\"main\">\r\n        <span className=\"name\">{user?.lastName} {user?.firstName}</span>\r\n        <span className=\"age\">{data.service} </span>\r\n        {type === 'patient' && <span className=\"age\">{data.age} years</span>}\r\n        {type === 'doctor' && data.department && (\r\n          <span className=\"department\">{data.department.map(item => item.label).join(', ')}</span>\r\n        )}\r\n        {type === 'staff' && role && <span className=\"role\">{role}</span>}\r\n      </div>\r\n    </Block>\r\n  );\r\n\r\n  const Layout = () => {\r\n    switch (type) {\r\n      case 'doctor':\r\n        return (\r\n          <>\r\n            <Common />\r\n            <div className=\"overview\">\r\n              <div className=\"rating\">\r\n                <span>Doctor rating</span>\r\n                {/* Ajouter une notation personnalisée */}\r\n              </div>\r\n              <div className=\"booked\">\r\n                <span>Booked appointments</span>\r\n              </div>\r\n            </div>\r\n            <button className=\"booking\">Make an appointment</button>\r\n          </>\r\n        );\r\n      case 'staff':\r\n        return (\r\n          <>\r\n            <Common />\r\n            <ShapeButton icon=\"edit\" shape=\"round\" label=\"Edit\" onClick={handleEdit} /> {/* Bouton Edit */}\r\n            <ShapeButton icon=\"trash\" shape=\"round\" label=\"Delete\" onClick={handleDelete} />\r\n          </>\r\n        );\r\n      case 'patient':\r\n        return (\r\n          <>\r\n            <Common />\r\n            {data.reminder && <Reminder reminder={data.reminder} />}\r\n            <Block className=\"actions\">\r\n              <div className=\"wrapper\">\r\n                <Button className=\"btn-action\" onClick={() => navigate(\"/dashboard_f\", { state: { data } })}>\r\n                  <i className=\"icon icon-doctor\"></i>\r\n                  <span className=\"text\">Case history</span>\r\n                </Button>\r\n              </div>\r\n              <ShapeButton icon=\"comment-text\" label=\"Message\" shape=\"round\" hasNotification={data.message} />\r\n              <ShapeButton icon=\"phone\" label=\"Call\" shape=\"round\" onClick={() => togglePhoneVisibility(data._id)} />\r\n              {visibleInfo[data._id] && phone && (\r\n                <div className=\"phone-number\">{phone}</div>\r\n              )}\r\n            </Block>\r\n          </>\r\n        );\r\n      default:\r\n        return <Common />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <Wrapper className={type} as={motion.li}>\r\n        <Layout />\r\n      </Wrapper>\r\n\r\n      {/* Afficher le pop-up lorsque isEditPopupOpen est true */}\r\n      {isEditPopupOpen && <EditStaffForm staffData={data} closeForm={closeEditPopup} />}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","// styling\r\nimport styled from 'styled-components/macro';\r\nimport {flex} from 'styles/vars';\r\n\r\n// components\r\nimport Item from 'components/StaffList/Item';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst List = styled.ul`\r\n  ${flex.col};\r\n  gap: 20px;\r\n  margin: 20px;\r\n`\r\n\r\nconst PersonList = ({ arr, type, gender, deps }) => {\r\n  const { search, category } = deps ? deps : { search: '', category: '' };\r\n\r\n  return (\r\n      <List>\r\n          {arr.map((item, i) => (\r\n              <Item \r\n                  key={`${item.id}-${gender}-${search}-${category}`} \r\n                  data={{ ...item, phone: String(item.phone) }} // Convertir phone en string\r\n                  type={type} \r\n              />\r\n          ))}\r\n      </List>\r\n  );\r\n};\r\n\r\n\r\nPersonList.propTypes = {\r\n    type: PropTypes.oneOf(['doctor', 'patient', 'staff']).isRequired,\r\n    arr: PropTypes.array.isRequired\r\n}\r\n\r\nexport default PersonList;","// components\r\nimport GroupSeparator from 'UI/GroupSeparator';\r\nimport PersonList from 'components/PersonList';\r\nimport StaffList from 'components/StaffList';\r\n\r\n// utils\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Group = ({char, arr, type, gender}) => {\r\n    const data = arr.filter(item =>item.user?.lastName[0].toLowerCase() === char);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                data.length !== 0 ?\r\n                    <div id={char}>\r\n                        <GroupSeparator text={char} />\r\n                        <StaffList arr={data} type={type} gender={gender} />\r\n                    </div> : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nGroup.propTypes = {\r\n    char: PropTypes.string.isRequired,\r\n    arr: PropTypes.array.isRequired,\r\n    type: PropTypes.oneOf(['patient', 'doctor', 'staff']).isRequired,\r\n}\r\n\r\nexport default Group;","import { Header } from 'components/Widget/style';\r\nimport { LetterNav, LetterNavWrapper, LetterNavItem, NavWrapper } from './style';\r\n\r\n// components\r\nimport Widget from 'components/Widget';\r\nimport WidgetBody from 'components/Widget/WidgetBody';\r\nimport GenderNav from 'components/GenderNav';\r\nimport MonthNavigator from 'UI/Navigator/MonthNavigator';\r\nimport Group from './Group';\r\nimport NoDataPlaceholder from 'components/NoDataPlaceholder';\r\n\r\n// utils\r\nimport { generateAlphabet } from 'utils/helpers';\r\nimport { nanoid } from 'nanoid';\r\n\r\n// hooks\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport useGenderFilter from 'hooks/useGenderFilter';\r\n\r\n// Import du service StaffService\r\nimport StaffService from 'services/StaffService';\r\n\r\nconst StaffList = () => {\r\n    const contentRef = useRef(null);\r\n    const [staffMembers, setStaffMembers] = useState([]);\r\n    const [selectedLetter, setSelectedLetter] = useState(null);\r\n    const [lastGender, setLastGender] = useState(null);\r\n\r\n    const handleLetterClick = (char) => {\r\n        setSelectedLetter(prevLetter => (prevLetter === char ? null : char));\r\n    };\r\n\r\n    const handleGenderClick = (newGender) => {\r\n        if (lastGender === newGender.value) {\r\n            setSelectedLetter(null);\r\n        }\r\n        setLastGender(newGender.value);\r\n        setGender(newGender);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchStaff = async () => {\r\n            try {\r\n                const data = await StaffService.getAllStaff();\r\n                setStaffMembers(data);\r\n                console.log(data);\r\n            } catch (error) {\r\n                console.error(\"Erreur lors du chargement du personnel\", error);\r\n            }\r\n        };\r\n        fetchStaff();\r\n    }, []);\r\n\r\n    // Filtrage par mois\r\n    const [month, setMonth] = useState({ label: 'This month', number: new Date().getMonth() });\r\n    const dateFilteredArr = staffMembers;\r\n\r\n    // Filtrage par genre\r\n    const { gender, setGender, genderArr } = useGenderFilter(dateFilteredArr);\r\n    console.log(genderArr(gender));\r\n    const filteredStaffMembers = genderArr(gender);\r\n\r\n    const displayedStaffMembers = selectedLetter\r\n        ? filteredStaffMembers.filter(staffMember =>\r\n            staffMember.user?.lastName?.[0]?.toLowerCase() === selectedLetter\r\n        )\r\n        : filteredStaffMembers;\r\n\r\n    // Générer l'alphabet\r\n    const alphabet = generateAlphabet();\r\n\r\n    const isCharInStaff = (char, arr) => {\r\n        return arr.some(staffMember => staffMember.user?.lastName[0].toLowerCase() === char);\r\n    };\r\n\r\n    useEffect(() => {\r\n        contentRef.current?.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth'\r\n        });\r\n    }, [month, gender]);\r\n\r\n    return (\r\n        <Widget name=\"StaffList\">\r\n            <Header sidePadding={true}>\r\n                <NavWrapper>\r\n                    <GenderNav state={gender} handler={setGender} />\r\n                    <MonthNavigator state={month} handler={setMonth} />\r\n                </NavWrapper>\r\n                <LetterNavWrapper>\r\n                    <LetterNav>\r\n                        {alphabet.map(char => (\r\n                            <li key={nanoid(3)}>\r\n                                <LetterNavItem\r\n                                    className={`${isCharInStaff(char, filteredStaffMembers) ? 'active' : ''} ${selectedLetter === char ? 'selected' : ''}`}\r\n                                    href={`#${char}`}\r\n                                    onClick={() => handleLetterClick(char)}\r\n                                >\r\n                                    {char}\r\n                                </LetterNavItem>\r\n                            </li>\r\n                        ))}\r\n                    </LetterNav>\r\n                </LetterNavWrapper>\r\n            </Header>\r\n            <WidgetBody style={{ padding: 0 }} elRef={contentRef}>\r\n                {dateFilteredArr.length !== 0 ? (\r\n                    <>\r\n                        {selectedLetter ? (\r\n                            <Group\r\n                                key={`staff-${selectedLetter}`}\r\n                                gender={gender.value}\r\n                                char={selectedLetter}\r\n                                type={'staff'}\r\n                                arr={displayedStaffMembers}\r\n                            />\r\n                        ) : (\r\n                            alphabet.map(char => (\r\n                                <Group\r\n                                    key={`staff-${char}`}\r\n                                    gender={gender.value}\r\n                                    char={char}\r\n                                    type={'staff'}\r\n                                    arr={filteredStaffMembers.filter(staffMember =>\r\n                                        staffMember.user?.lastName?.[0]?.toLowerCase() === char\r\n                                    )}\r\n                                />\r\n                            ))\r\n                        )}\r\n                    </>\r\n                ) : (\r\n                    <NoDataPlaceholder />\r\n                )}\r\n            </WidgetBody>\r\n        </Widget>\r\n    );\r\n};\r\n\r\nexport default StaffList;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { motion } from \"framer-motion\";\r\nimport Page from \"layout/Page\";\r\nimport StaffList from \"widgets/StaffList\";\r\nimport { \r\n  GlobalStyles, Input, DisabledBackground, Form, ButtonContainer, \r\n  Line, ProgressBar, NavButton, NextButton, SubmitButton, Container, \r\n  AddButton, ModalContent, ModalOverlay, CloseButton, Title, StepContainer, Step, \r\n  InputRow, ButtonRow, Select, FormTitle\r\n} from \"../styles/PopUpAddStaff\";\r\nimport StaffService from \"../services/StaffService\";\r\n\r\nconst steps = [\r\n  { number: 1, label: \"Personal Information\" },\r\n  { number: 2, label: \"Job Information\" },\r\n  { number: 3, label: \"Final Submission\" }\r\n];\r\n\r\nconst Staff = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    badgeNumber: \"\",\r\n    service: \"\"\r\n  });\r\n  \r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  \r\n  const handleAddStaff = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    console.log(\"📤 Données envoyées :\", formData);\r\n  \r\n    try {\r\n      await StaffService.createStaff(formData);\r\n      alert(\"✅ Staff ajouté avec succès !\");\r\n      \r\n      // Réinitialiser le formulaire et fermer la modale\r\n      setFormData({ firstName: \"\", lastName: \"\", email: \"\", password: \"\", badgeNumber: \"\", service: \"\" });\r\n      setIsOpen(false);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"❌ Erreur lors de l'ajout du staff :\", error.response?.data || error);\r\n    }\r\n  };\r\n  \r\n  const nextStep = () => setStep((prev) => Math.min(prev + 1, steps.length));\r\n  const prevStep = () => setStep((prev) => Math.max(prev - 1, 1));\r\n\r\n  return (\r\n    <Page title=\"Staff List\">\r\n      <GlobalStyles />\r\n      <Container>\r\n        <AddButton onClick={() => setIsOpen(true)}>+ Add new Staff</AddButton>\r\n      </Container>\r\n\r\n      {isOpen && (\r\n        <ModalOverlay>\r\n          <ModalContent as={motion.div} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }}>\r\n            <CloseButton onClick={() => setIsOpen(false)}>✖</CloseButton>\r\n            <Title>Add NEW Staff</Title>\r\n            \r\n            <ProgressBar>\r\n              {steps.map(({ number, label }, index) => (\r\n                <React.Fragment key={index}>\r\n                  <StepContainer>\r\n                    <Step active={step >= number}>{number}</Step>\r\n                    <span>{label}</span>\r\n                  </StepContainer>\r\n                  {index < steps.length - 1 && <Line />}\r\n                </React.Fragment>\r\n              ))}\r\n            </ProgressBar>\r\n\r\n            <Form onSubmit={handleAddStaff}>\r\n              {step === 1 && (\r\n                <>\r\n                  <FormTitle>Personal Information</FormTitle>\r\n                  <InputRow>\r\n                    <Input type=\"text\" name=\"firstName\" placeholder=\"First Name\" value={formData.firstName} onChange={handleChange} required />\r\n                    <Input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" value={formData.lastName} onChange={handleChange} required />\r\n                  </InputRow>\r\n                  <InputRow>\r\n                    <Input type=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleChange} required />\r\n                  </InputRow>\r\n                  <Input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\r\n                </>\r\n              )}\r\n              {step === 2 && (\r\n                <>\r\n                  <FormTitle>Job Information</FormTitle>\r\n                  <InputRow>\r\n                    <Input type=\"text\" name=\"badgeNumber\" placeholder=\"Badge Number\" value={formData.badgeNumber} onChange={handleChange} required />\r\n                    <Input type=\"text\" name=\"service\" placeholder=\"Service\" value={formData.service} onChange={handleChange} required />\r\n                  </InputRow>\r\n                </>\r\n              )}\r\n              {step === 3 && (\r\n                <>\r\n                  <FormTitle>Final Submission</FormTitle>\r\n                  <p>Review all details before submitting.</p>\r\n                </>\r\n              )}\r\n\r\n              <ButtonContainer>\r\n                {step > 1 && <NavButton type=\"button\" onClick={prevStep}>Back</NavButton>}\r\n                {step < steps.length ? (\r\n                  <NextButton type=\"button\" style={step === 1 ? { marginLeft: \"auto\" } : {}} onClick={nextStep}>Next →</NextButton>\r\n                ) : (\r\n                  <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n                )}\r\n              </ButtonContainer>\r\n            </Form>\r\n          </ModalContent>\r\n        </ModalOverlay>\r\n      )}\r\n\r\n      <DisabledBackground isOpen={isOpen}>\r\n        <StaffList />\r\n      </DisabledBackground>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Staff;\r\n"],"names":["_rect","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgFilledrating","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","rx","ForwardRef","SvgEmptyrating","x","y","stroke","StyledRating","styled","Rating","display","gap","marginTop","color","value","direction","useTheme","_jsx","className","initialRating","emptySymbol","Empty","fullSymbol","Filled","readonly","Separator","div","theme","light","effects","dashedLight","dark","dashedDark","SeparatorText","span","textSizes","fonts","accent","widgetBg","text","children","state","handler","loop","Navigator","currentTarget","dataset","current","number","prevState","currentMonth","Date","getMonth","prevMonth","nextMonth","label","dateObj","toLocaleString","month","prevDisabled","nextDisabled","_jsxs","Wrapper","onClick","flex","between","bodyBg","colors","blue","style","LinearProgress","variant","sx","backgroundColor","highlight","borderRadius","button","center","colorTypes","find","item","cat","reminder","type","Container","Button","secondary","Item","NavButton","filter","isActive","_ref2","as","map","nanoid","Block","col","breakpoints","tablet","laptop","desktop","gray","mobileL","ul","sidePadding","elRef","Body","tasksColors","targetArr","gender","setGender","useState","genderArr","_item$sex","sex","toLowerCase","NavWrapper","HeaderWrapper","withConfig","componentId","LetterNav","LetterNavWrapper","shadow","shadowDarker","LetterNavItem","a","white","li","API_URL","getAllStaff","async","axios","get","data","error","console","getStaffById","createStaff","post","staffData","updateStaff","put","deleteStaff","delete","GlobalStyles","keyframes","createGlobalStyle","AddButton","ModalOverlay","ModalContent","CloseButton","Title","h1","ProgressBar","Step","active","Line","Form","form","Input","input","InputRow","ButtonContainer","NextButton","SubmitButton","DisabledBackground","isOpen","StepContainer","select","FormTitle","h2","steps","_staffData$user","_staffData$user2","_staffData$user3","closeForm","step","setStep","formData","setFormData","firstName","user","lastName","email","password","badgeNumber","service","handleChange","target","name","Page","motion","initial","opacity","scale","animate","index","React","onSubmit","preventDefault","_staffData$user4","_id","alert","log","updatedStaff","StaffService","userId","window","location","reload","_error$response","_error$response2","_error$response2$data","response","message","_Fragment","placeholder","onChange","required","prevStep","prev","Math","max","nextStep","min","onEdit","onDelete","visibleInfo","setVisibleInfo","isEditPopupOpen","setIsEditPopupOpen","navigate","useNavigate","handleEdit","handleDelete","online","avatar","phone","role","setIsActive","Common","Avatar","alt","age","department","join","Layout","ShapeButton","icon","shape","Reminder","hasNotification","togglePhoneVisibility","AnimatePresence","EditStaffForm","closeEditPopup","List","arr","deps","search","category","i","String","char","_item$user","GroupSeparator","StaffList","contentRef","useRef","staffMembers","setStaffMembers","selectedLetter","setSelectedLetter","lastGender","setLastGender","useEffect","fetchStaff","setMonth","dateFilteredArr","useGenderFilter","filteredStaffMembers","displayedStaffMembers","staffMember","_staffMember$user","_staffMember$user$las","_staffMember$user$las2","alphabet","generateAlphabet","isCharInStaff","some","_staffMember$user2","_contentRef$current","scrollTo","top","behavior","Widget","Header","GenderNav","MonthNavigator","href","prevLetter","handleLetterClick","WidgetBody","padding","Group","_staffMember$user3","_staffMember$user3$la","_staffMember$user3$la2","NoDataPlaceholder","Staff","setIsOpen","marginLeft"],"sourceRoot":""}