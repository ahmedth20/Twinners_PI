{"version":3,"file":"static/js/9305.dc100a0a.chunk.js","mappings":"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","sources":["assets/filledrating.svg","assets/emptyrating.svg","UI/CustomRating/index.jsx","UI/GroupSeparator/index.jsx","UI/Navigator/MonthNavigator/index.jsx","UI/Navigator/index.jsx","UI/Navigator/style.js","UI/Progress/index.jsx","UI/Reminder/index.jsx","UI/TabNav/style.js","components/GenderNav/index.jsx","components/Widget/WidgetBody/index.jsx","constants/colors.js","hooks/useGenderFilter.js","widgets/PatientsList/style.js","components/PatientList/Item/style.js","UI/ReactIcons/index.jsx","UI/ConfirmActionModal/index.jsx","pages/UpdateSimplePatientPopup.jsx","pages/DetailsPopUp.jsx","components/PatientList/Item/index.jsx","components/PatientList/index.jsx","widgets/PatientsList/Group/index.jsx","widgets/PatientsList/index.jsx","pages/AddSimplePatientPopup.jsx","pages/Patients.jsx","services/PatientService.js"],"sourcesContent":["var _rect;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgFilledrating(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 4,\n    viewBox: \"0 0 16 4\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilledrating);\nexport default __webpack_public_path__ + \"static/media/filledrating.8ca5f69685cd0edbb131ac269b415328.svg\";\nexport { ForwardRef as ReactComponent };","var _rect;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgEmptyrating(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 4,\n    viewBox: \"0 0 16 4\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.5,\n    y: 0.5,\n    width: 15,\n    height: 3,\n    rx: 1.5,\n    stroke: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEmptyrating);\nexport default __webpack_public_path__ + \"static/media/emptyrating.24b49c3ea04b53f7657b6427d3464322.svg\";\nexport { ForwardRef as ReactComponent };","// styling\r\nimport styled from 'styled-components';\r\n\r\n// components\r\nimport Rating from 'react-rating'\r\nimport {ReactComponent as Filled} from 'assets/filledrating.svg';\r\nimport {ReactComponent as Empty} from 'assets/emptyrating.svg';\r\n\r\n// hooks\r\nimport {useTheme} from '@mui/material/styles';\r\n\r\nconst StyledRating = styled(Rating)({\r\n    display: 'flex !important',\r\n    gap: 4,\r\n    marginTop: '-8px',\r\n    '& svg.empty': {\r\n        color: '#A2C0D4',\r\n    },\r\n    '& svg.filled': {\r\n        color: '#7ED321',\r\n    }\r\n});\r\n\r\nconst CustomRating = ({value}) => {\r\n    const direction = useTheme().direction;\r\n\r\n    return (\r\n        <StyledRating\r\n            className=\"styled-rating\"\r\n            initialRating={value}\r\n            direction={direction}\r\n            emptySymbol={<Empty className=\"empty\"/>}\r\n            fullSymbol={<Filled className=\"filled\"/>}\r\n            readonly />\r\n    )\r\n}\r\n\r\nexport default CustomRating;","// styling\r\nimport styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {effects, fonts, textSizes, dark, light} from 'styles/vars';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Separator = styled.div`\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    border-bottom: ${theme('theme', {\r\n        light: effects.dashedLight,\r\n        dark: effects.dashedDark\r\n    })};\r\n    left: 0;\r\n    right: 0;\r\n    transform: translateY(-50%);\r\n    z-index: 1;\r\n  }\r\n`\r\n\r\nconst SeparatorText = styled.span`\r\n  text-transform: uppercase;\r\n  padding: 0 6px;\r\n  position: relative;\r\n  z-index: 2;\r\n  margin-left: 17px;\r\n  font-size: ${textSizes['10']};\r\n  font-weight: 500;\r\n  font-family: ${fonts.accent};\r\n  background-color: ${theme('theme', {\r\n    light: light.widgetBg,\r\n    dark: dark.widgetBg\r\n  })};\r\n})\r\n`\r\n\r\nconst GroupSeparator = ({text}) => {\r\n    return (\r\n        <Separator className=\"separator\">\r\n            <SeparatorText>{text}</SeparatorText>\r\n        </Separator>\r\n    )\r\n}\r\n\r\nGroupSeparator.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GroupSeparator;","// components\r\nimport Navigator from 'UI/Navigator';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MonthNavigator = ({state, handler, loop = true}) => {\r\n\r\n    const navigate = e => {\r\n        const direction = e.currentTarget.dataset.direction;\r\n        let current = state.number;\r\n\r\n        if (direction === 'prev') {\r\n            current !== 0 ? current-- : current = 11;\r\n        } else {\r\n            current !== 11 ? current++ : current = 0;\r\n        }\r\n        handler(prevState => {\r\n            return {...prevState, number: current}\r\n        });\r\n\r\n        let currentMonth = new Date().getMonth(),\r\n            prevMonth = currentMonth - 1,\r\n            nextMonth = currentMonth + 1;\r\n\r\n        let label = '';\r\n        const dateObj = new Date(2022, current, 1);\r\n\r\n        if (current === currentMonth) {\r\n            label = 'This month'\r\n        } else if (current === prevMonth) {\r\n            label = 'Previous month';\r\n        } else if (current === nextMonth) {\r\n            label = 'Next month';\r\n        } else {\r\n            label = dateObj.toLocaleString('en-US', {month: 'long'})\r\n        }\r\n        handler(prevState => {\r\n            return {...prevState, label: label}\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Navigator handler={navigate}\r\n                   text={state.label}\r\n                   prevDisabled={!loop && state.number === 0}\r\n                   nextDisabled={!loop && state.number === new Date().getMonth()}\r\n        />\r\n    )\r\n}\r\n\r\nMonthNavigator.propTypes = {\r\n    state: PropTypes.shape(\r\n        {\r\n            number: PropTypes.number.isRequired,\r\n            label: PropTypes.string.isRequired\r\n        }).isRequired,\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default MonthNavigator;","// styled components\r\nimport {Wrapper} from './style';\r\n\r\n// utils\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navigator = ({text, handler, prevDisabled, nextDisabled, ...props}) => {\r\n    return (\r\n        <Wrapper className=\"navigator\" {...props}>\r\n            <button className={prevDisabled ? 'disabled' : ''} onClick={handler} data-direction=\"prev\" aria-label=\"Previous\">\r\n                <i className=\"icon icon-chevron-left\"></i>\r\n            </button>\r\n            <span className=\"label\">{text}</span>\r\n            <button className={nextDisabled ? 'disabled' : ''} onClick={handler} data-direction=\"next\" aria-label=\"Next\">\r\n                <i className=\"icon icon-chevron-right\"></i>\r\n            </button>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nNavigator.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    handler: PropTypes.func.isRequired,\r\n    prevDisabled: PropTypes.bool,\r\n    nextDisabled: PropTypes.bool\r\n}\r\n\r\nexport default Navigator;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {dark, flex, light, textSizes} from 'styles/vars';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  ${flex.between};\r\n  height: 40px;\r\n  gap: 20px;\r\n  padding: 0 22px;\r\n  font-size: ${textSizes['14']};\r\n  border-radius: 8px;\r\n  background-color: ${theme('theme', {light: light.bodyBg, dark: dark.bodyBg})};\r\n\r\n  .label {\r\n    user-select: none;\r\n  }\r\n\r\n  button {\r\n    transition: opacity var(--transition);\r\n\r\n    &:hover, &:focus {\r\n      opacity: .8;\r\n    }\r\n\r\n    &.disabled {\r\n      pointer-events: none;\r\n      opacity: 0;\r\n    }\r\n  }\r\n`","// styling\r\nimport {dark, colors} from 'styles/vars';\r\n\r\n// components\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\n// hooks\r\nimport {useTheme} from 'styled-components';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Progress = ({color = colors.blue, value, style = {}}) => {\r\n    const {theme} = useTheme();\r\n\r\n    return <LinearProgress className=\"progressbar\"\r\n                           variant=\"determinate\"\r\n                           aria-label={value}\r\n                           value={value}\r\n                           sx={{\r\n                               backgroundColor: theme === 'light' ? '#E4EAF0' : dark.highlight,\r\n                               height: 6,\r\n                               borderRadius: 2,\r\n                               ...style,\r\n\r\n                               '& .MuiLinearProgress-bar': {\r\n                                   backgroundColor: color,\r\n                                   borderRadius: 2,\r\n                               }\r\n                           }}/>\r\n}\r\n\r\nProgress.propTypes = {\r\n    color: PropTypes.string,\r\n    value: PropTypes.number.isRequired,\r\n    style: PropTypes.object,\r\n}\r\n\r\nexport default Progress;","// styling\r\nimport styled from 'styled-components';\r\nimport {colors, flex, textSizes} from 'styles/vars';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\nimport {colorTypes} from 'constants/colors';\r\n\r\nconst Wrapper = styled.button`\r\n  display: flex;\r\n  ${flex.center};\r\n  border-radius: 20px;\r\n  padding: 10px 16px;\r\n  color: #fff;\r\n  font-size: ${textSizes['14']};\r\n  gap: 10px;\r\n  background-color: ${props => colors[colorTypes.find(item => item.cat === props.reminder).color]};\r\n\r\n  span {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n`\r\n\r\nconst Reminder = ({reminder, handler}) => {\r\n    const {text, type} = reminder;\r\n    return (\r\n        <Wrapper className=\"reminder\" onClick={handler} reminder={type}>\r\n            <i className=\"icon icon-clock\"></i>\r\n            <span>{text}</span>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nReminder.propTypes = {\r\n    reminder: PropTypes.shape({\r\n        type: PropTypes.string.isRequired,\r\n        text: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    handler: PropTypes.func\r\n}\r\n\r\nexport default Reminder;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {flex, textSizes, light, dark, colors} from 'styles/vars';\r\n\r\nconst current = theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: light.text\r\n})\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-auto-columns: minmax(0, 1fr);\r\n  grid-auto-flow: column;\r\n  grid-gap: 2px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  height: 40px;\r\n  font-size: ${textSizes['14']};\r\n  text-transform: capitalize;\r\n  transition: background-color var(--transition);\r\n  ${theme('theme', {\r\n    light: `\r\n        color: ${colors.blue};\r\n        background-color: ${light.highlight};\r\n    `,\r\n    dark: `\r\n        color: ${colors.secondary};\r\n        background-color: ${dark.highlight};\r\n    `\r\n  })};\r\n  display: flex;\r\n  ${flex.center}\r\n  \r\n  &[aria-selected=\"true\"],\r\n  &.active,\r\n  &:hover, &:focus {\r\n    background-color: ${current};\r\n  }\r\n`\r\n\r\nexport const Item = styled.div`\r\n  &.active .nav-link {\r\n    background-color: ${current};\r\n  };\r\n`","// styled components\r\nimport {Container, Item, Button} from 'UI/TabNav/style';\r\n\r\n// utils\r\nimport {nanoid} from \"nanoid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NavButton = ({state, filter, handler}) => {\r\n    const isActive = state.value === filter.value;\r\n    return (\r\n        <Button className={isActive ? 'active' : ''}\r\n                onClick={() => handler({value: filter.value, label: filter.label})}\r\n        >\r\n            {filter.label}\r\n        </Button>\r\n    )\r\n}\r\n\r\nconst GenderNav = ({state, handler}) => {\r\n    const options = [\r\n        {\r\n            value: 'all',\r\n            label: 'all'\r\n        },\r\n        {\r\n            value: 'male',\r\n            label: 'Men'\r\n        },\r\n        {\r\n            value: 'female',\r\n            label: 'Women'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Container as=\"ul\" className=\"gender\">\r\n            {\r\n                options.map(item => {\r\n                    return (\r\n                        <Item key={nanoid(3)}>\r\n                            <NavButton state={state} filter={item} handler={handler} />\r\n                        </Item>\r\n                    )\r\n                })\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nGenderNav.propTypes = {\r\n    state: PropTypes.object.isRequired,\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default GenderNav;","// styled components\r\nimport {Body} from '../style';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WidgetBody = ({children, style, sidePadding = false, elRef, ...props}) => {\r\n    return <Body ref={elRef} sidePadding={sidePadding} style={style} {...props}>{children}</Body>\r\n}\r\n\r\nWidgetBody.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]).isRequired,\r\n    sidePadding: PropTypes.bool,\r\n    style: PropTypes.any,\r\n}\r\n\r\nexport default WidgetBody;","export const colorTypes = [\r\n    {cat: 'emergency', label: 'Emergency', color: 'red'},\r\n    {cat: 'consultation', label: 'Consultation', color: 'azure'},\r\n    {cat: 'test', label: 'Examination', color: 'teal'},\r\n    {cat: 'checkup', label: 'Routine checkup', color: 'purple'},\r\n    {cat: 'sick', label: 'Sick visit', color: 'orange'},\r\n];\r\n\r\nexport const tasksColors = [\r\n    {cat: 'work', color: 'teal'},\r\n    {cat: 'travel', color: 'orange'},\r\n    {cat: 'family', color: 'azure'},\r\n    {cat: 'other', color: 'purple'}\r\n]","import { useState } from 'react';\r\n\r\nconst useGenderFilter = (targetArr) => {\r\n    const [gender, setGender] = useState({ value: \"all\", label: \"All\" });\r\n\r\n    const genderArr = (gender) => {\r\n        if (gender.value === \"all\") return targetArr; // Ne pas filtrer si \"all\" est sélectionné\r\n        return targetArr.filter(item => item.sex?.toLowerCase() === gender.value);\r\n    };\r\n\r\n    return {\r\n        genderArr,\r\n        gender,\r\n        setGender\r\n    };\r\n};\r\n\r\nexport default useGenderFilter;\r\n","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {dark, light, flex, colors, breakpoints} from 'styles/vars';\r\nimport {HeaderWrapper} from 'components/Widget/style';\r\n\r\nexport const NavWrapper = styled(HeaderWrapper)`\r\n  ${breakpoints.tablet} {\r\n    flex-direction: row;\r\n    ${flex.between};\r\n\r\n    .gender {\r\n      max-width: 300px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LetterNav = styled.ul`\r\n  display: flex;\r\n  margin: 0 2px;\r\n  gap: 1px;\r\n  height: 80px;\r\n  align-items: center;\r\n  border-radius: 8px;\r\n  padding: 0 18px;\r\n  overflow-x: auto;\r\n  background-color: ${theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: dark.bodyBg\r\n  })};\r\n`\r\n\r\nexport const LetterNavWrapper = styled.div`\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  &:before, &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    background: ${theme('theme', {\r\n      light: light.shadow,\r\n      dark: dark.shadowDarker\r\n    })};\r\n    height: 100%;\r\n    width: 24px;\r\n    z-index: 1;\r\n    filter: blur(1px);\r\n    display: block;\r\n  }\r\n\r\n  &:before {\r\n    left: 2px;\r\n  }\r\n\r\n  &:after {\r\n    right: 2px;\r\n    transform: scaleX(-1);\r\n  }\r\n`\r\n\r\nexport const LetterNavItem = styled.a`\r\n  display: flex;\r\n  ${flex.center};\r\n  width: 44px;\r\n  height: 40px;\r\n  text-transform: uppercase;\r\n  color: ${colors.blue};\r\n  border-radius: 8px;\r\n  background: ${theme('theme', {\r\n    light: light.widgetBg,\r\n    dark: dark.widgetBg\r\n  })};\r\n  transition: color var(--transition), background var(--transition);\r\n\r\n  &:hover, &:focus {\r\n    background-color: ${colors.blue};\r\n    color: #fff;\r\n  }\r\n\r\n  &:not(&.active) {\r\n    pointer-events: none;\r\n    background-color: transparent;\r\n    color: ${theme('theme', {\r\n      light: light.text,\r\n      dark: dark.text\r\n    })};\r\n  }\r\n`\r\n","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {colors, dark, breakpoints, flex, light, textSizes, fonts} from 'styles/vars';\r\n\r\nexport const Block = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n\r\n  .main {\r\n    ${flex.col}\r\n    justify-content: space-between;\r\n\r\n    .name {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .age {\r\n      font-size: ${textSizes['14']};\r\n    }\r\n  }\r\n\r\n  .wrapper {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  @media screen and (min-width: 666.98px) {\r\n    flex-grow: 1;\r\n    &.actions {\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    .wrapper {\r\n      flex-grow: unset;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  ${flex.col}\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  padding: 20px;\r\n  gap: 20px 0;\r\n  background-color: ${theme('theme', {\r\n    light: light.highlight,\r\n    dark: dark.highlight\r\n  })};\r\n  transition: background-color var(--transition);\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${theme('theme', {\r\n      light: light.bodyBg,\r\n      dark: dark.bodyBg\r\n    })};\r\n  }\r\n  \r\n  .overview {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n  }\r\n\r\n  .main {\r\n    width: calc(100% - 40px);\r\n\r\n    .department {\r\n      font-size: ${textSizes['14']};\r\n      margin-top: 2px;\r\n    }\r\n  }\r\n\r\n  .rating, .booked {\r\n    ${flex.col};\r\n    gap: 7px;\r\n    font-size: ${textSizes['12']};\r\n    font-family: ${fonts.accent};\r\n  }\r\n  \r\n  .styled-rating {\r\n    margin-top: -5px;\r\n  }\r\n  \r\n  .contacts {\r\n    display: flex;\r\n    gap: 20px;\r\n  }\r\n\r\n  button {\r\n    transition: background-color var(--transition), color var(--transition);\r\n\r\n    &.booking {\r\n      font-size: ${textSizes['14']};\r\n      font-family: ${fonts.accent};\r\n      border-radius: 20px;\r\n      padding: 12px 16px;\r\n      color: ${theme('theme', {\r\n        light: colors.blue,\r\n        dark: '#fff'\r\n      })};\r\n      \r\n      &:hover, &:focus {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  button:not(.reminder) {\r\n    background-color: ${theme('theme', {\r\n      light: light.widgetBg,\r\n      dark: dark.widgetBg\r\n    })};\r\n\r\n    &:hover, &:focus {\r\n      background-color: ${colors.blue};\r\n      color:${colors.white};\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 666.98px) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-end;\r\n\r\n    button.reminder {\r\n      order: 3;\r\n      width: 100%;\r\n    }\r\n    \r\n    &.doctor, &.staff {\r\n      justify-content: space-between;\r\n      ${Block} {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n  \r\n  ${breakpoints.tablet} {\r\n    &.doctor .avatar {\r\n      width: 60px;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.laptop} {\r\n    align-items: center;\r\n    gap: 20px;\r\n    button.reminder {\r\n      order: unset;\r\n      width: fit-content;\r\n    }\r\n\r\n    &.doctor, &.staff {\r\n      justify-content: space-between;\r\n      gap: 40px;\r\n      ${Block} {\r\n        width: fit-content;\r\n      }\r\n      \r\n      .overview {\r\n        gap: 40px;\r\n      }\r\n    }\r\n\r\n    ${Block} {\r\n      &.actions {\r\n        flex-grow: unset;\r\n      }\r\n    }\r\n  }\r\n  \r\n  ${breakpoints.desktop} {\r\n    .booked {\r\n      width: 275px;\r\n    }\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  ${flex.center};\r\n  gap: 8px;\r\n  border-radius: 20px;\r\n  font-size: ${textSizes['14']};\r\n  height: 40px;\r\n  width: 40px;\r\n  color: ${light.text};\r\n  transition: color var(--transition), background-color var(--transition);\r\n\r\n  .icon {\r\n    color: ${colors.gray};\r\n    transition: color var(--transition);\r\n  }\r\n\r\n  .text {\r\n    display: none;\r\n  }\r\n\r\n  &:hover, &:focus {\r\n    background-color: ${colors.blue};\r\n    color: #fff;\r\n\r\n    .icon {\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.mobileL} {\r\n    width: fit-content;\r\n    padding: 0 16px;\r\n    .text {\r\n      display: block;\r\n    }\r\n  }\r\n`\r\nexport const DropdownContainer = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n`;\r\n\r\nexport const Menu = styled.ul`\r\n  position: absolute;\r\n  top: 40px;\r\n  right: 0;\r\n  background: white;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  list-style: none;\r\n  padding: 8px 0;\r\n  min-width: 160px;\r\n  z-index: 100;\r\n`;\r\n\r\nexport const MenuItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 10px 16px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  color: #333;\r\n  transition: background 0.2s;\r\n\r\n  &:hover {\r\n    background: #f5f5f5;\r\n  }\r\n\r\n  &:last-child {\r\n    border-top: 1px solid #ddd;\r\n    color: red;\r\n  }\r\n`;\r\n\r\n\r\n/*const actionIcons = {\r\n  delete: <FaTrash style={{ fontSize: '1.5rem', color: '#e53e3e' }} />,\r\n  update: <FaEdit style={{ fontSize: '1.5rem', color: '#f6ad55' }} />,\r\n  add: <FaPlus style={{ fontSize: '1.5rem', color: '#48bb78' }} />,\r\n  deactivate: <FaRegPauseCircle style={{ fontSize: '1.5rem', color: '#fbbf24' }} />,\r\n  activate: <FaCheckCircle style={{ fontSize: '1.5rem', color: '#38a169' }} />\r\n};*/","import { Badge } from 'UI/Badge/style';\r\nimport styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport { dark, light, flex, colors } from 'styles/vars';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst bg = theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: dark.highlight\r\n});\r\n\r\nexport const Button = styled.button`\r\n  width: 40px;\r\n  aspect-ratio: 1;\r\n  background-color: ${bg};\r\n  color: ${colors.gray};\r\n  ${flex.col}\r\n  ${flex.center}\r\n  position: relative;\r\n  transition: color var(--transition), background-color var(--transition);\r\n  \r\n  &:hover, &:focus {\r\n    background-color: ${colors.blue};\r\n    color: #fff;\r\n  }\r\n  \r\n  .badge {\r\n    position: absolute;\r\n  }\r\n  \r\n  &.square {\r\n    border-radius: 8px;\r\n    .badge {\r\n        top: -6px;\r\n        right: -6px;\r\n    }\r\n  }\r\n  \r\n  &.round {\r\n    border-radius: 50%;\r\n    .badge {\r\n        top: 0;\r\n        right: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ReactIcons = ({ hasNotification, Icon, handler, label, shape, ...props }) => {\r\n    return (\r\n        <Button className={shape} onClick={handler} aria-label={label} ref={props.ref} {...props}>\r\n            {Icon && <Icon size={24} />}  {/* Affichage de l’icône React */}\r\n            {hasNotification && <Badge className=\"badge\" color=\"yellow\" />}\r\n        </Button>\r\n    );\r\n};\r\n\r\nReactIcons.propTypes = {\r\n    hasNotification: PropTypes.bool,\r\n    Icon: PropTypes.elementType.isRequired,  // Remplace `icon: PropTypes.string` par `Icon: PropTypes.elementType`\r\n    handler: PropTypes.func,\r\n    label: PropTypes.string.isRequired,\r\n    shape: PropTypes.oneOf(['round', 'square']).isRequired\r\n};\r\n\r\nexport default ReactIcons;\r\n","import React from 'react';\r\nimport { FaTrash, FaEdit, FaPlus, FaTimes, FaRegPauseCircle, FaCheckCircle } from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\n\r\nconst ActionModalWrapper = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  z-index: 50;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 2rem;\r\n  max-width: 400px;\r\n  width: 100%;\r\n  text-align: center;\r\n  position: relative;\r\n  animation: fade-in-down 0.3s ease-out;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 4rem;\r\n  width: 4rem;\r\n  background-color: ${(props) => props.bgColor || '#f8d7da'};\r\n  border-radius: 50%;\r\n  margin: 0 auto 1rem;\r\n\r\n  svg {\r\n    font-size: 1.5rem;\r\n    color: ${(props) => props.iconColor || '#e53e3e'};\r\n  }\r\n`;\r\n\r\nconst Heading = styled.h3`\r\n  font-size: 1.125rem;\r\n  font-weight: 500;\r\n  color: #1a202c;\r\n  margin-bottom: 0.5rem;\r\n  text-align: center;\r\n    display: flex;\r\n  align-items: center;\r\n  justify-content:center;\r\n`;\r\n\r\nconst Message = styled.p`\r\n  font-size: 0.875rem;\r\n  color: #4a5568;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  flex: 1;\r\n  padding: 0.5rem;\r\n  border-radius: 0.375rem;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  border: none;\r\n\r\n  &.confirm {\r\n    background-color: ${(props) => props.bgColor || '#e53e3e'};\r\n    color: white;\r\n\r\n    &:hover {\r\n      background-color: ${(props) => props.bgColorHover || '#c53030'};\r\n    }\r\n  }\r\n\r\n  &.cancel {\r\n    background-color: white;\r\n    border: 1px solid #e2e8f0;\r\n    color: #4a5568;\r\n\r\n    &:hover {\r\n      background-color: #edf2f7;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  .close-icon {\r\n    font-size: 1.5rem;\r\n    color: #4a5568;\r\n\r\n    &:hover {\r\n      color: #2d3748;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ConfirmActionModal = ({ icon, actionType, onConfirm, onCancel, message, bgColor, iconColor }) => {\r\n  const actionText = actionType.charAt(0).toUpperCase() + actionType.slice(1);\r\n\r\n  return (\r\n    <ActionModalWrapper>\r\n      <ModalContainer role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\r\n        <CloseButton onClick={onCancel}>\r\n          <FaTimes className=\"close-icon\" />\r\n        </CloseButton>\r\n        <IconWrapper bgColor={bgColor} iconColor={iconColor}>\r\n          {icon}\r\n        </IconWrapper>\r\n        <Heading id=\"modal-headline\">Confirm {actionText}</Heading>\r\n        <Message>{message || `Are you sure you want to ${actionType.toLowerCase()} this item? This action cannot be undone.`}</Message>\r\n        <ButtonGroup>\r\n          <Button onClick={onCancel} className=\"cancel\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onConfirm} className=\"confirm\" bgColor={iconColor} bgColorHover={bgColor}>\r\n            {actionText}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </ModalContainer>\r\n    </ActionModalWrapper>\r\n  );\r\n};\r\n\r\nexport default ConfirmActionModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport * as z from \"zod\";\r\nimport {\r\n  GlobalStyles, Input, Form, ButtonContainer, ProgressBar, NavButton, NextButton, SubmitButton, Line,\r\n  ModalContent, ModalOverlay, CloseButton, Error, Title, StepContainer, Step, InputRow, Select, FormTitle\r\n} from \"../styles/PopUpAddPatient\";\r\nimport PatientService from \"../services/PatientService\";\r\n\r\nconst patientSchema = z.object({\r\n  firstName: z.string().min(2, { message: \"First Name is required (min 2 caractères)\" }),\r\n  lastName: z.string().min(2, { message: \"Last Name is required (min 2 caractères)\" }),\r\n  sex: z.enum([\"Male\", \"Female\"], { message: \"Select a valid gender\" }),\r\n  age: z.preprocess((val) => Number(val), z.number().min(1, { message: \"Age must be at least 1\" }).max(120, { message: \"Invalid age\" })),\r\n  phone: z.string().min(8, { message: \"Phone number must be at least 8 digits\" }),\r\n  address: z.string().min(5, { message: \"Address is required\" }),\r\n});\r\n\r\nconst steps = [\r\n  { number: 1, label: \"User Information\" },\r\n  { number: 2, label: \"Personal Information\" },\r\n];\r\n\r\nconst UpdateSimplePatientPopup = ({ isOpen, onClose, data }) => {\r\n  const [step, setStep] = useState(1);\r\n console.log(data);\r\n const {\r\n  register,\r\n  handleSubmit,\r\n  setValue,\r\n  getValues,\r\n  formState: { errors },\r\n} = useForm({\r\n  resolver: zodResolver(patientSchema),\r\n  defaultValues: {},\r\n});\r\n\r\nuseEffect(() => {\r\n  if (data) {\r\n    Object.keys(data).forEach((key) => {\r\n      if (key === \"user\") {\r\n        setValue(\"firstName\", data.user?.firstName || \"\");\r\n        setValue(\"lastName\", data.user?.lastName || \"\");\r\n      } else {\r\n        setValue(key, data[key]);\r\n      }\r\n    });\r\n  }\r\n}, [data, setValue]);\r\n\r\n  const nextStep = () => setStep((prev) => Math.min(prev + 1, steps.length));\r\n  const prevStep = () => setStep((prev) => Math.max(prev - 1, 1));\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const updatedData = {};\r\n      \r\n      if (getValues(\"firstName\") !== data.user?.firstName) {\r\n        updatedData.firstName = getValues(\"firstName\");\r\n      }\r\n      if (getValues(\"lastName\") !== data.user?.lastName) {\r\n        updatedData.lastName = getValues(\"lastName\");\r\n      }\r\n  \r\n      Object.keys(data || {}).forEach((key) => {\r\n        if (key !== \"user\" && getValues(key) !== data[key]) {\r\n          updatedData[key] = getValues(key);\r\n        }\r\n      });\r\n  \r\n      if (Object.keys(updatedData).length > 0) {\r\n        await PatientService.updateSimplePatient(data._id, updatedData);\r\n        alert(\"✅ Patient mis à jour avec succès !\");\r\n      } else {\r\n        alert(\"Aucune modification détectée.\");\r\n      }\r\n      onClose();\r\n    } catch (error) {\r\n      alert(\"❌ Erreur lors de la mise à jour du patient.\");\r\n      console.error(\"Détails de l'erreur :\", error.response?.data);\r\n    }\r\n  };\r\n  \r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <ModalOverlay>\r\n      <ModalContent as={motion.div} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }}>\r\n        <CloseButton onClick={onClose}>✖</CloseButton>\r\n        <Title>Update Patient</Title>\r\n\r\n        <ProgressBar>\r\n          {steps.map(({ number, label }, index) => (\r\n            <React.Fragment key={index}>\r\n              <StepContainer>\r\n                <Step active={step >= number}>{number}</Step>\r\n                <span>{label}</span>\r\n              </StepContainer>\r\n              {index < steps.length - 1 && <Line />}\r\n            </React.Fragment>\r\n          ))}\r\n        </ProgressBar>\r\n\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          {step === 1 && (\r\n            <>\r\n              <FormTitle>User Information</FormTitle>\r\n              <InputRow>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"firstName\")} placeholder=\"First Name\" />\r\n                  <Error>{errors.firstName?.message}</Error>\r\n                </div>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"lastName\")} placeholder=\"Last Name\" />\r\n                  <Error>{errors.lastName?.message}</Error>\r\n                </div>\r\n              </InputRow>\r\n            </>\r\n          )}\r\n\r\n          {step === 2 && (\r\n            <>\r\n              <FormTitle>Personal Information</FormTitle>\r\n              <InputRow>\r\n                <div>\r\n                  <Input type=\"number\" {...register(\"age\")} placeholder=\"Age\" />\r\n                  <Error>{errors.age?.message}</Error>\r\n                </div>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"phone\")} placeholder=\"Phone\" />\r\n                  <Error>{errors.phone?.message}</Error>\r\n                </div>\r\n              </InputRow>\r\n              <div>\r\n                <Input type=\"text\" {...register(\"address\")} placeholder=\"Address\" />\r\n                <Error>{errors.address?.message}</Error>\r\n              </div>\r\n              <div>\r\n                <Select {...register(\"sex\")}>\r\n                  <option value=\"\">Select Gender</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </Select>\r\n                <Error>{errors.sex?.message}</Error>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <ButtonContainer>\r\n            {step > 1 && <NavButton type=\"button\" onClick={() => setStep(step - 1)}>Back</NavButton>}\r\n            {step < steps.length ? (\r\n              <NextButton type=\"button\" style={step === 1 ? { marginLeft: \"auto\" } : {}} onClick={() => setStep(step + 1)}>Next →</NextButton>\r\n            ) : (\r\n              <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n            )}\r\n          </ButtonContainer>\r\n        </Form>\r\n      </ModalContent>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default UpdateSimplePatientPopup;","import React, { useState, useEffect, useCallback, memo } from \"react\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport { IoMdInformationCircle } from \"react-icons/io\";\r\nimport PatientService from \"services/PatientService\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  z-index: 1000;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  backdrop-filter: blur(5px);\r\n  transition: opacity 0.3s;\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  width: 200%;\r\n  max-width: 800px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n  transform: scale(${(props) => (props.isOpen ? \"1\" : \"0.95\")});\r\n  transition: transform 0.3s ease-in-out;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n  background: rgba(65, 77, 85, 0.79);\r\n  color: #fff;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: #fff;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  padding: 20px;\r\n  max-height: 70vh;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst InfoMessage = styled.div`\r\n  text-align: center;\r\n  color: #888;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  background: rgba(65, 77, 85, 0.79);\r\n  color: #fff;\r\n  padding: 10px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nconst ListItem = styled.div`\r\n  background: #f1f1f1;\r\n  padding: 8px 12px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst DetailsModal = memo(({ isOpen, onClose, data }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [infoData, setInfoData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPatientInfo = async () => {\r\n      try {\r\n        const response = await PatientService.getPatientInfoById(data._id);\r\n        setInfoData(response);\r\n      } catch (error) {\r\n        console.error(\"Error fetching patient info:\", error);\r\n      }\r\n    };\r\n\r\n    if (data?._id) {\r\n      fetchPatientInfo();\r\n    }\r\n  }, [data._id]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setIsVisible(true);\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      setTimeout(() => setIsVisible(false), 300);\r\n    }\r\n    return () => {\r\n      document.body.style.overflow = \"unset\";\r\n    };\r\n  }, [isOpen]);\r\n\r\n  const renderContent = useCallback(() => {\r\n    if (!infoData) {\r\n      return (\r\n        <InfoMessage>\r\n          <IoMdInformationCircle size={30} />\r\n          <p>No data available</p>\r\n        </InfoMessage>\r\n      );\r\n    }\r\n\r\n    const formatValue = (value) => {\r\n      if (Array.isArray(value)) {\r\n        return (\r\n          <ListContainer>\r\n            {value.map((item, index) => (\r\n              <ListItem key={index}>{formatValue(item)}</ListItem>\r\n            ))}\r\n          </ListContainer>\r\n        );\r\n      } else if (typeof value === \"object\" && value !== null) {\r\n        return (\r\n          <Table>\r\n            <tbody>\r\n              {Object.entries(value)\r\n                .filter(([subKey]) => subKey !== \"_id\" && subKey !== \"patient\") // Exclure _id et patient\r\n                .map(([subKey, subValue]) => (\r\n                  <tr key={subKey}>\r\n                    <Th>{subKey}</Th>\r\n                    <Td>{formatValue(subValue)}</Td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        );\r\n      } else {\r\n        return value;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Table>\r\n        <tbody>\r\n          {Object.entries(infoData)\r\n            .filter(([key]) => key !== \"_id\") // Exclure _id du premier niveau\r\n            .map(([key, value]) => (\r\n              <tr key={key}>\r\n                <Th>{key}</Th>\r\n                <Td>{formatValue(value)}</Td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }, [infoData]);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  return (\r\n    <Overlay onClick={onClose}>\r\n      <ModalContainer isOpen={isOpen} onClick={(e) => e.stopPropagation()}>\r\n        <Header>\r\n          <Title>Details</Title>\r\n          <CloseButton onClick={onClose}>\r\n            <FiX />\r\n          </CloseButton>\r\n        </Header>\r\n        <Content>{renderContent()}</Content>\r\n      </ModalContainer>\r\n    </Overlay>\r\n  );\r\n});\r\n\r\nDetailsModal.displayName = \"DetailsModal\";\r\n\r\nexport default DetailsModal;\r\n","import { Wrapper, Block, Button, DropdownContainer, Menu, MenuItem } from './style';\r\nimport { MdMoreVert } from \"react-icons/md\";  // Material Icons\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { FaTrash, FaEdit, FaEye, FaUserSlash,FaUserPlus } from \"react-icons/fa\";\r\nimport { FiExternalLink } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\nimport { CiMedicalClipboard } from \"react-icons/ci\";\r\n// components\r\nimport Avatar from 'UI/Avatar';\r\nimport ShapeButton from 'UI/ShapeButton';\r\nimport Reminder from 'UI/Reminder';\r\nimport Progress from 'UI/Progress';\r\nimport CustomRating from 'UI/CustomRating';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// utils\r\nimport { fadePresence } from 'constants/framer';\r\nimport PropTypes from 'prop-types';\r\nimport ReactIcons from 'UI/ReactIcons';\r\nimport PatientService from 'services/PatientService';\r\nimport axios from \"axios\";\r\n// Modal for confirmation\r\nimport ConfirmActionModal from 'UI/ConfirmActionModal'\r\nimport UpdateSimplePatientPopup from 'pages/UpdateSimplePatientPopup';\r\nimport DetailsPopUp from 'pages/DetailsPopUp';\r\n\r\nconst StyledClipboardIcon = styled(CiMedicalClipboard)`\r\n  color: rgb(129, 135, 139);\r\n  font-size: 20px;\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\nconst StyledText = styled.span`\r\n  color: rgb(129, 135, 139);\r\n  transition: color 0.3s ease;\r\n\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\nconst DropdownMenu = ({ isOpen, toggleMenu, onDelete,onOpen,onDetails,onUpdate, onToggleStatus, isActive }) => {\r\n  const menuRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n        toggleMenu(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [toggleMenu]);\r\n\r\n  const menuItems = [\r\n    { id: \"edit\", icon: <FaEdit />, label: \"Edit\",onClick: onUpdate  },\r\n    { id: \"open\", icon: <FiExternalLink />, label: \"Open\",onClick: onOpen },\r\n    { id: \"view\", icon: <FaEye />, label: \"View Details\",onClick:onDetails },\r\n    { id: \"toggle\", icon: isActive ? <FaUserSlash /> : <FaUserPlus />, label: isActive ? \"Deactivate\" : \"Activate\", onClick: () => onToggleStatus(isActive) },\r\n    { id: \"delete\", icon: <FaTrash />, label: \"Delete\", onClick: onDelete },\r\n  ];\r\n\r\n  return (\r\n    isOpen && (\r\n      <Menu ref={menuRef}>\r\n        {menuItems.map(({ id, icon, label, onClick }) => (\r\n          <MenuItem key={id} onClick={onClick}>\r\n            {icon} {label}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    )\r\n  );\r\n};\r\n\r\n\r\nconst Item = ({ type, data }) => {\r\n  const [visibleInfo, setVisibleInfo] = useState({});\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isUpdateModalOpen, setIsUpdateModalOpen] = useState(false);\r\n  const [isStatusModalOpen, setIsStatusModalOpen] = useState(false); // Modal de confirmation pour activer/désactiver\r\n  const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false); // Modal de confirmation pour activer/désactiver\r\n  const [isActive, setIsActive] = useState(data.user.isActive); // Ajouter l'état isActive\r\n\r\n \r\n  const navigate = useNavigate();\r\n\r\n  const toggleMenu = (state) => {\r\n    setIsOpen(state !== undefined ? state : !isOpen);\r\n  };\r\n\r\n  const togglePhoneVisibility = (id) => {\r\n    setVisibleInfo((prev) => ({\r\n      ...prev,\r\n      [id]: !prev[id],\r\n    }));\r\n  };\r\n\r\n  const { user, online, avatar, phone } = data;\r\n \r\n  const handleDelete = async () => {\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n  const handleDetails = async () => {\r\n    setIsDetailsModalOpen(true);\r\n  };\r\n  const handleOpen = async () => {\r\n    navigate(\"/dashboard_f\", { state: { data } })\r\n  };\r\n  const handleUpdate = async () => {\r\n    setIsUpdateModalOpen(true);\r\n  };\r\n  const handleConfirmDelete = async () => {\r\n    try {\r\n      await PatientService.deletePatient(data._id);\r\n    } catch (error) {\r\n      console.error(\"Error deleting patient:\", error);\r\n    }\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const handleCancelDetails = () => {\r\n    setIsDetailsModalOpen(false);\r\n  };\r\n  const handleCancelDelete = () => {\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n  const handleCancelUpdate = () => {\r\n    setIsUpdateModalOpen(false);\r\n  };\r\n  const handleToggleStatus = async () => {\r\n    setIsStatusModalOpen(true); // Afficher le modal de confirmation avant de basculer l'état\r\n  };\r\n\r\n  const handleConfirmToggleStatus = async () => {\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:5000/patient/toggle-status/${data.user._id}`,\r\n        {}, // ❌ Supprime `{ isActive: !data.isActive }` car l'inversion est faite en backend\r\n        { withCredentials: true }\r\n      );\r\n  \r\n      if (response.data?.isActive !== undefined) {\r\n        setIsActive(response.data.isActive); // ✅ Met à jour l'état avec la réponse du backend\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error toggling patient status:\", error);\r\n    }\r\n\r\n    setIsStatusModalOpen(false);\r\n\r\n  };\r\n\r\n\r\n  const handleCancelToggleStatus = () => {\r\n    setIsStatusModalOpen(false);\r\n  };\r\n\r\n  const Common = ({ type }) => {\r\n    return (\r\n      <Block>\r\n        <Avatar avatar={avatar} alt={`${user.lastName} ${user.firstName}`} online={online} />\r\n        <div className=\"main\">\r\n          <span className=\"name\"> {user.lastName} {user.firstName}</span>\r\n          {type === 'patient' ? (\r\n            <span className=\"age\">{data.age} years</span>\r\n          ) : (\r\n            <span className=\"department\">\r\n              {data.department.map(item => item.label).join(', ')}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </Block>\r\n    );\r\n  };\r\n\r\n  const Layout = () => {\r\n    switch (type) {\r\n      case 'patient':\r\n        return (\r\n          <>\r\n            <Common type={type} />\r\n            {data.reminder && <Reminder reminder={data.reminder} />}\r\n            <Block className=\"actions\">\r\n              <Button className=\"btn-action\" onClick={() => navigate(\"/dashboard_f\", { state: { data } })}>\r\n                <StyledClipboardIcon />\r\n                <StyledText>Case history</StyledText>\r\n              </Button>\r\n              <ShapeButton icon=\"comment-text\" label=\"Message\" shape=\"round\" hasNotification={data.message} />\r\n              <ShapeButton icon=\"phone\" label=\"Call\" shape=\"round\" onClick={() => togglePhoneVisibility(data._id)} />\r\n            \r\n              {visibleInfo[data._id] && phone && (\r\n                <div className=\"phone-number\">{phone}</div>\r\n              )}\r\n              <ReactIcons Icon={MdMoreVert} label=\"Options\" shape=\"round\" onClick={() => toggleMenu()} />\r\n              <DropdownContainer>\r\n                <DropdownMenu \r\n                  isOpen={isOpen} \r\n                  toggleMenu={toggleMenu} \r\n                  onDelete={handleDelete} \r\n                  onUpdate={handleUpdate} \r\n                  onOpen={handleOpen} \r\n                  onDetails={handleDetails}\r\n                  onToggleStatus={handleToggleStatus} \r\n                  isActive={isActive} \r\n                />\r\n              </DropdownContainer>\r\n            </Block>\r\n          </>\r\n        );\r\n      default:\r\n        return <Common type={type} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n    <Wrapper key={data._id} className={type} as={motion.li} {...fadePresence}>\r\n      <Layout />\r\n    </Wrapper>\r\n  \r\n\r\n     \r\n      {isDeleteModalOpen && (\r\n        <ConfirmActionModal\r\n          icon={<FaTrash />}\r\n          actionType=\"delete\"\r\n          onConfirm={handleConfirmDelete}\r\n          onCancel={handleCancelDelete}\r\n          message=\"Are you sure you want to delete this item?\"\r\n          bgColor=\" #FEE2E2\"\r\n          iconColor=\" #e53e3e\"\r\n        />\r\n      )}\r\n\r\n      {isStatusModalOpen && (\r\n        <ConfirmActionModal\r\n          icon={isActive ? <FaUserSlash /> : <FaUserPlus />}\r\n          actionType={`${isActive ? \"deactivate\" : \"activate\"}`}\r\n          onConfirm={handleConfirmToggleStatus}\r\n          onCancel={handleCancelToggleStatus}\r\n          message={`Are you sure you want to ${isActive ? \"deactivate\" : \"activate\"} this patient?`}\r\n          bgColor={isActive ? \"#FEE2E2\" : \"#E6FFFA\"}\r\n          iconColor={isActive ? \"#e53e3e\" : \"#38B2AC\"}\r\n        />\r\n      )}\r\n\r\n      {isUpdateModalOpen &&\r\n       <UpdateSimplePatientPopup \r\n       isOpen={isUpdateModalOpen} \r\n       onClose={handleCancelUpdate} \r\n       data={data} />}\r\n      \r\n      {isDetailsModalOpen &&\r\n       <DetailsPopUp \r\n       isOpen={isDetailsModalOpen} \r\n       onClose={handleCancelDetails} \r\n       data={data} />}\r\n    \r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\n\r\nItem.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  data: PropTypes.shape({\r\n    user: PropTypes.shape({\r\n      firstName: PropTypes.string,\r\n      isActive:PropTypes.bool,\r\n      lastName: PropTypes.string,\r\n    }),\r\n    phone: PropTypes.string, \r\n    online: PropTypes.bool,\r\n    avatar: PropTypes.string,\r\n    age: PropTypes.number,\r\n    reminder: PropTypes.string,\r\n    message: PropTypes.bool,\r\n    department: PropTypes.array,\r\n    rating: PropTypes.number,\r\n    booked: PropTypes.number,\r\n    _id: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Item;\r\n","// styling\r\nimport styled from 'styled-components';\r\nimport {flex} from 'styles/vars';\r\nimport { nanoid } from 'nanoid';\r\n\r\n// components\r\nimport Item from 'components/PatientList/Item';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst List = styled.ul`\r\n  ${flex.col};\r\n  gap: 20px;\r\n  margin: 20px;\r\n`\r\n\r\nconst PatientList = ({ arr, type, gender, deps }) => {\r\n  const { search, category } = deps ? deps : { search: '', category: '' };\r\n  return (\r\n      <List>\r\n          {arr.map((item, i) => (\r\n           <Item \r\n           key={item.id || nanoid()} // Utilisation de l'ID ou génération d'un ID unique \r\n           data={{ ...item, phone: String(item.phone) }} \r\n           type={type} \r\n       />\r\n       \r\n         \r\n          ))}\r\n      </List>\r\n  );\r\n};\r\n\r\n\r\nPatientList.propTypes = {\r\n    type: PropTypes.oneOf(['doctor', 'patient', 'staff']).isRequired,\r\n    arr: PropTypes.array.isRequired\r\n}\r\n\r\nexport default PatientList;","// components\r\nimport GroupSeparator from 'UI/GroupSeparator';\r\n\r\nimport PatientList from 'components/PatientList';\r\n\r\n\r\n// utils\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Group = ({char, arr, type, gender}) => {\r\n    const data = arr.filter(item =>item.user?.lastName[0].toLowerCase() === char);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                data.length !== 0 ?\r\n                    <div id={char}>\r\n                        <GroupSeparator text={char} />\r\n                        <PatientList arr={data} type={type} gender={gender} />\r\n                    </div> : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nGroup.propTypes = {\r\n    char: PropTypes.string.isRequired,\r\n    arr: PropTypes.array.isRequired,\r\n    type: PropTypes.oneOf(['patient', 'doctor', 'staff']).isRequired,\r\n}\r\n\r\nexport default Group;","import { Header } from 'components/Widget/style';\r\nimport { LetterNav, LetterNavWrapper, LetterNavItem, NavWrapper } from './style';\r\n\r\n// components\r\nimport Widget from 'components/Widget';\r\nimport WidgetBody from 'components/Widget/WidgetBody';\r\nimport GenderNav from 'components/GenderNav';\r\nimport MonthNavigator from 'UI/Navigator/MonthNavigator';\r\nimport Group from './Group';\r\nimport NoDataPlaceholder from 'components/NoDataPlaceholder';\r\n\r\n// utils\r\nimport { generateAlphabet } from 'utils/helpers';\r\nimport { nanoid } from 'nanoid';\r\n\r\n// hooks\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport useGenderFilter from 'hooks/useGenderFilter';\r\n\r\n// import corrected\r\nimport PatientService from 'services/PatientService';\r\n\r\nconst PatientsList = () => {\r\n    const contentRef = useRef(null);\r\n    const [patients, setPatients] = useState([]);\r\n    const [selectedLetter, setSelectedLetter] = useState(null);\r\n    const [lastGender, setLastGender] = useState(null);\r\n\r\n    const handleLetterClick = (char) => {\r\n        setSelectedLetter(prevLetter => (prevLetter === char ? null : char));\r\n    };\r\n    \r\n    const handleGenderClick = (newGender) => {\r\n        if (lastGender === newGender.value) {\r\n            // Double-clic : Réinitialiser la sélection de lettre\r\n            setSelectedLetter(null);\r\n        }\r\n        setLastGender(newGender.value);\r\n        setGender(newGender);\r\n    };\r\n    \r\n    \r\n    \r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const data = await PatientService.getAllPatients();\r\n                setPatients(data);\r\n                console.log(\"widgets\");\r\n                console.log(data);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch patients\", error);\r\n            }\r\n        };\r\n        fetchPatients();\r\n    }, []);\r\n\r\n    // current filter by month\r\n    const [month, setMonth] = useState({ label: 'This month', number: new Date().getMonth() });\r\n    const dateFilteredArr = patients;\r\n    // current filter by gender\r\n    const { gender, setGender, genderArr } = useGenderFilter(dateFilteredArr);\r\n  \r\n    const filteredPatients = genderArr(gender);\r\n\r\n    const displayedPatients = selectedLetter\r\n    ? filteredPatients.filter(patient => \r\n        patient.user?.lastName?.[0]?.toLowerCase() === selectedLetter\r\n    ) \r\n    : filteredPatients;\r\n\r\n\r\n    // generate an array containing alphabet\r\n    const alphabet = generateAlphabet();\r\n\r\n    const isCharInPatients = (char, arr) => {\r\n        return arr.some(patient => patient.user?.lastName[0].toLowerCase() === char);\r\n    };\r\n\r\n    useEffect(() => {\r\n        contentRef.current?.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth'\r\n        });\r\n    }, [month, gender]);\r\n\r\n    return (\r\n        <Widget name=\"PatientsList\">\r\n            <Header sidePadding={true}>\r\n                <NavWrapper>\r\n                    <GenderNav state={gender} handler={setGender} />\r\n                    <MonthNavigator state={month} handler={setMonth} />\r\n                </NavWrapper>\r\n                <LetterNavWrapper>\r\n                    <LetterNav>\r\n                        {alphabet.map(char => (\r\n                            <li key={nanoid(3)}>\r\n                             <LetterNavItem\r\n                                className={`${isCharInPatients(char, filteredPatients) ? 'active' : ''} ${selectedLetter === char ? 'selected' : ''}`}\r\n                                href={`#${char}`}\r\n                                onClick={() => handleLetterClick(char)}\r\n                            >\r\n                                {char}\r\n                            </LetterNavItem>\r\n\r\n\r\n                            </li>\r\n                        ))}\r\n                    </LetterNav>\r\n                </LetterNavWrapper>\r\n            </Header>\r\n            <WidgetBody style={{ padding: 0 }} elRef={contentRef}>\r\n                {dateFilteredArr.length !== 0 ? (\r\n                    <>\r\n                    {selectedLetter ? (\r\n    // Si une lettre est sélectionnée, afficher uniquement ce groupe\r\n    <Group\r\n        key={`patients-${selectedLetter}`}\r\n        gender={gender.value}\r\n        char={selectedLetter}\r\n        type={'patient'}\r\n        arr={displayedPatients} // Patients filtrés par lettre\r\n    />\r\n) : (\r\n    // Sinon, afficher tous les groupes classés par lettre\r\n    alphabet.map(char => (\r\n        <Group\r\n            key={`patients-${char}`}\r\n            gender={gender.value}\r\n            char={char}\r\n            type={'patient'}\r\n            arr={filteredPatients.filter(patient => \r\n                patient.user?.lastName?.[0]?.toLowerCase() === char\r\n            )}\r\n        />\r\n    ))\r\n)}\r\n\r\n\r\n                    </>\r\n                ) : (\r\n                    <NoDataPlaceholder />\r\n                )}\r\n            </WidgetBody>\r\n        </Widget>\r\n    );\r\n};\r\n\r\nexport default PatientsList;\r\n","import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport * as z from \"zod\";\r\nimport {\r\n  GlobalStyles, Input, Form, ButtonContainer, ProgressBar, NavButton, NextButton, SubmitButton, Line,\r\n  ModalContent, ModalOverlay, CloseButton,Error, Title, StepContainer, Step, InputRow, Select, FormTitle\r\n} from \"../styles/PopUpAddPatient\";\r\nimport PatientService from \"../services/PatientService\";\r\n\r\n// ✅ Définition du schéma de validation avec Zod\r\nconst patientSchema = z.object({\r\n  firstName: z.string().min(2, { message: \"First Name is required (min 2 caractères)\" }),\r\n  lastName: z.string().min(2, { message: \"Last Name is required (min 2 caractères)\" }),\r\n  email: z.string().email({ message: \"Invalid email format\" }),\r\n  sex: z.enum([\"Male\", \"Female\"], { message: \"Select a valid gender\" }),\r\n  age: z.preprocess((val) => Number(val), z.number().min(1, { message: \"Age must be at least 1\" }).max(120, { message: \"Invalid age\" })),\r\n  phone: z.string().min(8, { message: \"Phone number must be at least 8 digits\" }),\r\n  address: z.string().min(5, { message: \"Address is required\" }),\r\n});\r\n\r\nconst steps = [\r\n  { number: 1, label: \"User Information\" },\r\n  { number: 2, label: \"Personal Information\" },\r\n];\r\n\r\nconst AddSimplePatientPopup = ({ isOpen, onClose }) => {\r\n  const [step, setStep] = useState(1);\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: zodResolver(patientSchema),\r\n  });\r\n\r\n  const nextStep = () => setStep((prev) => Math.min(prev + 1, steps.length));\r\n  const prevStep = () => setStep((prev) => Math.max(prev - 1, 1));\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      await PatientService.createSimplePatient(data);\r\n      alert(\"✅ Patient ajouté avec succès !\");\r\n      onClose();\r\n    } catch (error) {\r\n      alert(\"❌ Erreur lors de l'ajout du patient.\");\r\n      console.error(\"Détails de l'erreur :\", error.response?.data);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <ModalOverlay>\r\n      <ModalContent as={motion.div} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }}>\r\n        <CloseButton onClick={onClose}>✖</CloseButton>\r\n        <Title>Add NEW Patient</Title>\r\n\r\n        <ProgressBar>\r\n          {steps.map(({ number, label }, index) => (\r\n            <React.Fragment key={index}>\r\n              <StepContainer>\r\n                <Step active={step >= number}>{number}</Step>\r\n                <span>{label}</span>\r\n              </StepContainer>\r\n              {index < steps.length - 1 && <Line />}\r\n            </React.Fragment>\r\n          ))}\r\n        </ProgressBar>\r\n\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          {step === 1 && (\r\n            <>\r\n              <FormTitle>User Information</FormTitle>\r\n              <InputRow>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"firstName\")} placeholder=\"First Name\" />\r\n                  <Error>{errors.firstName?.message}</Error>\r\n                </div>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"lastName\")} placeholder=\"Last Name\" />\r\n                  <Error>{errors.lastName?.message}</Error>\r\n                </div>\r\n              </InputRow>\r\n              <div>\r\n                <Input type=\"text\" {...register(\"email\")} placeholder=\"Email\" />\r\n                <Error>{errors.email?.message}</Error>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {step === 2 && (\r\n            <>\r\n              <FormTitle>Personal Information</FormTitle>\r\n              <InputRow>\r\n               \r\n              </InputRow>\r\n\r\n              <InputRow>\r\n                <div>\r\n                  <Input type=\"number\" {...register(\"age\")} placeholder=\"Age\" />\r\n                  <Error>{errors.age?.message}</Error>\r\n                </div>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"phone\")} placeholder=\"Phone\" />\r\n                  <Error>{errors.phone?.message}</Error>\r\n                </div>\r\n              </InputRow>\r\n              <div>\r\n                <Input type=\"text\" {...register(\"address\")} placeholder=\"Address\" />\r\n                <Error>{errors.address?.message}</Error>\r\n              </div>\r\n              <div>\r\n                  <Select {...register(\"sex\")}>\r\n                    <option value=\"\">Select Gender</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                  </Select>\r\n                  <Error>{errors.sex?.message}</Error>\r\n                </div>\r\n            </>\r\n          )}\r\n\r\n          <ButtonContainer>\r\n            {step > 1 && <NavButton type=\"button\" onClick={prevStep}>Back</NavButton>}\r\n            {step < steps.length ? (\r\n              <NextButton type=\"button\" style={step === 1 ? { marginLeft: \"auto\" } : {}} onClick={nextStep}>Next →</NextButton>\r\n            ) : (\r\n              <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n            )}\r\n          </ButtonContainer>\r\n        </Form>\r\n      </ModalContent>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default AddSimplePatientPopup;\r\n","import React, { useState } from \"react\";\r\nimport { GlobalStyles, Container, AddButton, DisabledBackground } from \"../styles/PopUpAddPatient\";\r\nimport Page from \"layout/Page\";\r\nimport PatientsList from \"widgets/PatientsList\";\r\nimport AddSimplePatientPopup from \"./AddSimplePatientPopup\";\r\nimport { ModalOverlay, ModalContent, CloseButton, ButtonGroup, ModalButton } from \"../styles/PopUpAddPatient\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Patients = () => {\r\n  const [isTypePopupOpen, setIsTypePopupOpen] = useState(false);\r\n  const [isSimplePopupOpen, setIsSimplePopupOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSimplePatient = () => {\r\n    setIsTypePopupOpen(false);\r\n    setIsSimplePopupOpen(true);\r\n  };\r\n\r\n  const handleMedicalPatient = () => {\r\n    setIsTypePopupOpen(false);\r\n    navigate(\"/medical_form\"); // Redirection vers la page avec le formulaire médical\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Patients List\">\r\n      <GlobalStyles />\r\n      <Container>\r\n        <AddButton onClick={() => setIsTypePopupOpen(true)}>+ Add new Patient</AddButton>\r\n      </Container>\r\n\r\n      {/* Popup pour choisir le type de patient */}\r\n      {isTypePopupOpen && (\r\n        <ModalOverlay>\r\n          <ModalContent>\r\n            <CloseButton onClick={() => setIsTypePopupOpen(false)}>✖</CloseButton>\r\n            <h2>Choose Patient Type</h2>\r\n            <ButtonGroup>\r\n              <ModalButton variant=\"simple\" onClick={handleSimplePatient}>Simple Patient</ModalButton>\r\n              <ModalButton variant=\"medical\" onClick={handleMedicalPatient}>Patient with Medical Record</ModalButton>\r\n            </ButtonGroup>\r\n          </ModalContent>\r\n        </ModalOverlay>\r\n      )}\r\n\r\n      {/* Popup d'ajout du patient simple */}\r\n      <AddSimplePatientPopup isOpen={isSimplePopupOpen} onClose={() => setIsSimplePopupOpen(false)} />\r\n\r\n      <DisabledBackground isOpen={isSimplePopupOpen || isTypePopupOpen}>\r\n        <PatientsList />\r\n      </DisabledBackground>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/patient\";\r\n\r\nconst PatientService = {\r\n getAllPatients: async () => {\r\n    try {\r\n        const response = await axios.get(API_URL);\r\n         return response.data;\r\n    } catch (error) {\r\n          console.error(\"Erreur lors du chargement des patients:\", error);\r\n          throw error;\r\n    }\r\n  },\r\n\r\n  getPatientById: async (id) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération du patient:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n  getPatientInfoById: async (id) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/details/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération du patient:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n  createPatient: async (patientData) => {\r\n    try {\r\n      const response = await axios.post(API_URL, patientData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la création du patient:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n  createSimplePatient: async (patientData) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/createSimplePatient`, patientData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la création du patient:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n  updateSimplePatient: async (id, patientData) => {\r\n    try {\r\n      const response = await axios.put(`${API_URL}/updateSimplePatient/${id}`, patientData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la mise à jour du patient:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n  updatePatient: async (id, patientData) => {\r\n    try {\r\n      const response = await axios.put(`${API_URL}/${id}`, patientData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la mise à jour du patient:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n  deletePatient: async (id) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/${id}`);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la suppression du patient:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  toggleUserStatus: async (id) => {\r\n    try {\r\n      console.log(\"ID envoyé à l'API:\", id);\r\n      const response = await axios.put(`${API_URL}/toggle-status/${id}`, {}, { withCredentials: true });\r\n      return response;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la désactivation / activation du patient:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n  getAllDoctors: async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/listDoctors`);\r\n         return response.data;\r\n    } catch (error) {\r\n          console.error(\"Erreur lors du chargement des doctors:\", error);\r\n          throw error;\r\n    }\r\n  },\r\n  \r\n};\r\n\r\nexport default PatientService;"],"names":["_rect","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgFilledrating","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","rx","ForwardRef","SvgEmptyrating","x","y","stroke","StyledRating","styled","Rating","display","gap","marginTop","color","value","direction","useTheme","_jsx","className","initialRating","emptySymbol","Empty","fullSymbol","Filled","readonly","Separator","div","theme","light","effects","dashedLight","dark","dashedDark","SeparatorText","span","textSizes","fonts","accent","widgetBg","text","children","state","handler","loop","Navigator","currentTarget","dataset","current","number","prevState","currentMonth","Date","getMonth","prevMonth","nextMonth","label","dateObj","toLocaleString","month","prevDisabled","nextDisabled","_jsxs","Wrapper","onClick","flex","between","bodyBg","colors","blue","style","LinearProgress","variant","sx","backgroundColor","highlight","borderRadius","button","center","colorTypes","find","item","cat","reminder","type","Container","Button","secondary","Item","NavButton","filter","isActive","_ref2","as","map","nanoid","sidePadding","elRef","Body","tasksColors","targetArr","gender","setGender","useState","genderArr","_item$sex","sex","toLowerCase","NavWrapper","HeaderWrapper","breakpoints","tablet","LetterNav","ul","LetterNavWrapper","shadow","shadowDarker","LetterNavItem","a","Block","col","white","laptop","desktop","gray","mobileL","DropdownContainer","Menu","MenuItem","li","bg","hasNotification","Icon","shape","size","Badge","ActionModalWrapper","ModalContainer","IconWrapper","bgColor","iconColor","Heading","h3","Message","p","ButtonGroup","bgColorHover","CloseButton","icon","actionType","onConfirm","onCancel","message","actionText","charAt","toUpperCase","slice","role","FaTimes","patientSchema","z","firstName","min","lastName","age","val","Number","max","phone","address","steps","_errors$firstName","_errors$lastName","_errors$age","_errors$phone","_errors$address","_errors$sex","isOpen","onClose","data","step","setStep","console","log","register","handleSubmit","setValue","getValues","formState","errors","useForm","resolver","zodResolver","defaultValues","useEffect","keys","forEach","key","_data$user","_data$user2","user","ModalOverlay","ModalContent","motion","initial","opacity","scale","animate","Title","ProgressBar","index","React","StepContainer","Step","active","Line","Form","onSubmit","async","_data$user3","_data$user4","updatedData","PatientService","updateSimplePatient","_id","alert","error","_error$response","response","_Fragment","FormTitle","InputRow","Input","placeholder","Error","Select","ButtonContainer","NextButton","marginLeft","SubmitButton","Overlay","Header","h2","Content","InfoMessage","Table","table","Th","th","Td","td","ListContainer","ListItem","DetailsModal","memo","isVisible","setIsVisible","infoData","setInfoData","getPatientInfoById","fetchPatientInfo","document","body","overflow","setTimeout","renderContent","useCallback","IoMdInformationCircle","formatValue","Array","isArray","entries","subKey","_ref3","subValue","_ref4","_ref5","stopPropagation","FiX","displayName","StyledClipboardIcon","CiMedicalClipboard","StyledText","DropdownMenu","toggleMenu","onDelete","onOpen","onDetails","onUpdate","onToggleStatus","menuRef","useRef","handleClickOutside","event","contains","target","addEventListener","removeEventListener","menuItems","FaEdit","FiExternalLink","FaEye","FaUserSlash","FaUserPlus","FaTrash","visibleInfo","setVisibleInfo","setIsOpen","isDeleteModalOpen","setIsDeleteModalOpen","isUpdateModalOpen","setIsUpdateModalOpen","isStatusModalOpen","setIsStatusModalOpen","isDetailsModalOpen","setIsDetailsModalOpen","setIsActive","navigate","useNavigate","undefined","online","avatar","handleDelete","handleDetails","handleOpen","handleUpdate","handleToggleStatus","Common","Avatar","alt","department","join","Layout","Reminder","ShapeButton","togglePhoneVisibility","prev","ReactIcons","MdMoreVert","AnimatePresence","fadePresence","ConfirmActionModal","deletePatient","handleCancelDelete","_response$data","axios","put","withCredentials","handleCancelToggleStatus","UpdateSimplePatientPopup","handleCancelUpdate","DetailsPopUp","handleCancelDetails","List","arr","deps","search","category","i","String","char","_item$user","GroupSeparator","PatientList","PatientsList","contentRef","patients","setPatients","selectedLetter","setSelectedLetter","lastGender","setLastGender","getAllPatients","fetchPatients","setMonth","dateFilteredArr","useGenderFilter","filteredPatients","displayedPatients","patient","_patient$user","_patient$user$lastNam","_patient$user$lastNam2","alphabet","generateAlphabet","isCharInPatients","some","_patient$user2","_contentRef$current","scrollTo","top","behavior","Widget","name","GenderNav","MonthNavigator","href","prevLetter","handleLetterClick","WidgetBody","padding","Group","_patient$user3","_patient$user3$lastNa","_patient$user3$lastNa2","NoDataPlaceholder","email","_errors$email","createSimplePatient","prevStep","Math","nextStep","Patients","isTypePopupOpen","setIsTypePopupOpen","isSimplePopupOpen","setIsSimplePopupOpen","Page","GlobalStyles","AddButton","ModalButton","handleSimplePatient","handleMedicalPatient","AddSimplePatientPopup","DisabledBackground","API_URL","get","getPatientById","createPatient","post","patientData","updatePatient","delete","toggleUserStatus","getAllDoctors"],"sourceRoot":""}