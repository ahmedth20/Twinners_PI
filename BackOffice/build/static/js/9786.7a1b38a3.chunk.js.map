{"version":3,"file":"static/js/9786.7a1b38a3.chunk.js","mappings":"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","sources":["assets/filledrating.svg","assets/emptyrating.svg","UI/CustomRating/index.jsx","UI/GroupSeparator/index.jsx","UI/Navigator/MonthNavigator/index.jsx","UI/Navigator/index.jsx","UI/Navigator/style.js","UI/Progress/index.jsx","UI/Reminder/index.jsx","UI/TabNav/style.js","components/GenderNav/index.jsx","components/Widget/WidgetBody/index.jsx","constants/colors.js","constants/options.js","db/doctors.js","hooks/useGenderFilter.js","widgets/DoctorsList/style.js","components/DoctorList/Item/style.js","styles/PopUpAddDoctor.js","services/DoctorService.js","pages/UpdateDoctorPopUp.jsx","components/DoctorList/Item/index.jsx","components/DoctorList/index.jsx","widgets/DoctorsList/Group/index.jsx","widgets/DoctorsList/index.jsx","pages/AddSimpleDoctorPopup.jsx","pages/Doctors.jsx"],"sourcesContent":["var _rect;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgFilledrating(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 4,\n    viewBox: \"0 0 16 4\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilledrating);\nexport default __webpack_public_path__ + \"static/media/filledrating.8ca5f69685cd0edbb131ac269b415328.svg\";\nexport { ForwardRef as ReactComponent };","var _rect;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgEmptyrating(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 4,\n    viewBox: \"0 0 16 4\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.5,\n    y: 0.5,\n    width: 15,\n    height: 3,\n    rx: 1.5,\n    stroke: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEmptyrating);\nexport default __webpack_public_path__ + \"static/media/emptyrating.24b49c3ea04b53f7657b6427d3464322.svg\";\nexport { ForwardRef as ReactComponent };","// styling\r\nimport styled from 'styled-components';\r\n\r\n// components\r\nimport Rating from 'react-rating'\r\nimport {ReactComponent as Filled} from 'assets/filledrating.svg';\r\nimport {ReactComponent as Empty} from 'assets/emptyrating.svg';\r\n\r\n// hooks\r\nimport {useTheme} from '@mui/material/styles';\r\n\r\nconst StyledRating = styled(Rating)({\r\n    display: 'flex !important',\r\n    gap: 4,\r\n    marginTop: '-8px',\r\n    '& svg.empty': {\r\n        color: '#A2C0D4',\r\n    },\r\n    '& svg.filled': {\r\n        color: '#7ED321',\r\n    }\r\n});\r\n\r\nconst CustomRating = ({value}) => {\r\n    const direction = useTheme().direction;\r\n\r\n    return (\r\n        <StyledRating\r\n            className=\"styled-rating\"\r\n            initialRating={value}\r\n            direction={direction}\r\n            emptySymbol={<Empty className=\"empty\"/>}\r\n            fullSymbol={<Filled className=\"filled\"/>}\r\n            readonly />\r\n    )\r\n}\r\n\r\nexport default CustomRating;","// styling\r\nimport styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {effects, fonts, textSizes, dark, light} from 'styles/vars';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Separator = styled.div`\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    border-bottom: ${theme('theme', {\r\n        light: effects.dashedLight,\r\n        dark: effects.dashedDark\r\n    })};\r\n    left: 0;\r\n    right: 0;\r\n    transform: translateY(-50%);\r\n    z-index: 1;\r\n  }\r\n`\r\n\r\nconst SeparatorText = styled.span`\r\n  text-transform: uppercase;\r\n  padding: 0 6px;\r\n  position: relative;\r\n  z-index: 2;\r\n  margin-left: 17px;\r\n  font-size: ${textSizes['10']};\r\n  font-weight: 500;\r\n  font-family: ${fonts.accent};\r\n  background-color: ${theme('theme', {\r\n    light: light.widgetBg,\r\n    dark: dark.widgetBg\r\n  })};\r\n})\r\n`\r\n\r\nconst GroupSeparator = ({text}) => {\r\n    return (\r\n        <Separator className=\"separator\">\r\n            <SeparatorText>{text}</SeparatorText>\r\n        </Separator>\r\n    )\r\n}\r\n\r\nGroupSeparator.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GroupSeparator;","// components\r\nimport Navigator from 'UI/Navigator';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MonthNavigator = ({state, handler, loop = true}) => {\r\n\r\n    const navigate = e => {\r\n        const direction = e.currentTarget.dataset.direction;\r\n        let current = state.number;\r\n\r\n        if (direction === 'prev') {\r\n            current !== 0 ? current-- : current = 11;\r\n        } else {\r\n            current !== 11 ? current++ : current = 0;\r\n        }\r\n        handler(prevState => {\r\n            return {...prevState, number: current}\r\n        });\r\n\r\n        let currentMonth = new Date().getMonth(),\r\n            prevMonth = currentMonth - 1,\r\n            nextMonth = currentMonth + 1;\r\n\r\n        let label = '';\r\n        const dateObj = new Date(2022, current, 1);\r\n\r\n        if (current === currentMonth) {\r\n            label = 'This month'\r\n        } else if (current === prevMonth) {\r\n            label = 'Previous month';\r\n        } else if (current === nextMonth) {\r\n            label = 'Next month';\r\n        } else {\r\n            label = dateObj.toLocaleString('en-US', {month: 'long'})\r\n        }\r\n        handler(prevState => {\r\n            return {...prevState, label: label}\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Navigator handler={navigate}\r\n                   text={state.label}\r\n                   prevDisabled={!loop && state.number === 0}\r\n                   nextDisabled={!loop && state.number === new Date().getMonth()}\r\n        />\r\n    )\r\n}\r\n\r\nMonthNavigator.propTypes = {\r\n    state: PropTypes.shape(\r\n        {\r\n            number: PropTypes.number.isRequired,\r\n            label: PropTypes.string.isRequired\r\n        }).isRequired,\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default MonthNavigator;","// styled components\r\nimport {Wrapper} from './style';\r\n\r\n// utils\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navigator = ({text, handler, prevDisabled, nextDisabled, ...props}) => {\r\n    return (\r\n        <Wrapper className=\"navigator\" {...props}>\r\n            <button className={prevDisabled ? 'disabled' : ''} onClick={handler} data-direction=\"prev\" aria-label=\"Previous\">\r\n                <i className=\"icon icon-chevron-left\"></i>\r\n            </button>\r\n            <span className=\"label\">{text}</span>\r\n            <button className={nextDisabled ? 'disabled' : ''} onClick={handler} data-direction=\"next\" aria-label=\"Next\">\r\n                <i className=\"icon icon-chevron-right\"></i>\r\n            </button>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nNavigator.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    handler: PropTypes.func.isRequired,\r\n    prevDisabled: PropTypes.bool,\r\n    nextDisabled: PropTypes.bool\r\n}\r\n\r\nexport default Navigator;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {dark, flex, light, textSizes} from 'styles/vars';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  ${flex.between};\r\n  height: 40px;\r\n  gap: 20px;\r\n  padding: 0 22px;\r\n  font-size: ${textSizes['14']};\r\n  border-radius: 8px;\r\n  background-color: ${theme('theme', {light: light.bodyBg, dark: dark.bodyBg})};\r\n\r\n  .label {\r\n    user-select: none;\r\n  }\r\n\r\n  button {\r\n    transition: opacity var(--transition);\r\n\r\n    &:hover, &:focus {\r\n      opacity: .8;\r\n    }\r\n\r\n    &.disabled {\r\n      pointer-events: none;\r\n      opacity: 0;\r\n    }\r\n  }\r\n`","// styling\r\nimport {dark, colors} from 'styles/vars';\r\n\r\n// components\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\n// hooks\r\nimport {useTheme} from 'styled-components';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Progress = ({color = colors.blue, value, style = {}}) => {\r\n    const {theme} = useTheme();\r\n\r\n    return <LinearProgress className=\"progressbar\"\r\n                           variant=\"determinate\"\r\n                           aria-label={value}\r\n                           value={value}\r\n                           sx={{\r\n                               backgroundColor: theme === 'light' ? '#E4EAF0' : dark.highlight,\r\n                               height: 6,\r\n                               borderRadius: 2,\r\n                               ...style,\r\n\r\n                               '& .MuiLinearProgress-bar': {\r\n                                   backgroundColor: color,\r\n                                   borderRadius: 2,\r\n                               }\r\n                           }}/>\r\n}\r\n\r\nProgress.propTypes = {\r\n    color: PropTypes.string,\r\n    value: PropTypes.number.isRequired,\r\n    style: PropTypes.object,\r\n}\r\n\r\nexport default Progress;","// styling\r\nimport styled from 'styled-components';\r\nimport {colors, flex, textSizes} from 'styles/vars';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\nimport {colorTypes} from 'constants/colors';\r\n\r\nconst Wrapper = styled.button`\r\n  display: flex;\r\n  ${flex.center};\r\n  border-radius: 20px;\r\n  padding: 10px 16px;\r\n  color: #fff;\r\n  font-size: ${textSizes['14']};\r\n  gap: 10px;\r\n  background-color: ${props => colors[colorTypes.find(item => item.cat === props.reminder).color]};\r\n\r\n  span {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n`\r\n\r\nconst Reminder = ({reminder, handler}) => {\r\n    const {text, type} = reminder;\r\n    return (\r\n        <Wrapper className=\"reminder\" onClick={handler} reminder={type}>\r\n            <i className=\"icon icon-clock\"></i>\r\n            <span>{text}</span>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nReminder.propTypes = {\r\n    reminder: PropTypes.shape({\r\n        type: PropTypes.string.isRequired,\r\n        text: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    handler: PropTypes.func\r\n}\r\n\r\nexport default Reminder;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {flex, textSizes, light, dark, colors} from 'styles/vars';\r\n\r\nconst current = theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: light.text\r\n})\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-auto-columns: minmax(0, 1fr);\r\n  grid-auto-flow: column;\r\n  grid-gap: 2px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  height: 40px;\r\n  font-size: ${textSizes['14']};\r\n  text-transform: capitalize;\r\n  transition: background-color var(--transition);\r\n  ${theme('theme', {\r\n    light: `\r\n        color: ${colors.blue};\r\n        background-color: ${light.highlight};\r\n    `,\r\n    dark: `\r\n        color: ${colors.secondary};\r\n        background-color: ${dark.highlight};\r\n    `\r\n  })};\r\n  display: flex;\r\n  ${flex.center}\r\n  \r\n  &[aria-selected=\"true\"],\r\n  &.active,\r\n  &:hover, &:focus {\r\n    background-color: ${current};\r\n  }\r\n`\r\n\r\nexport const Item = styled.div`\r\n  &.active .nav-link {\r\n    background-color: ${current};\r\n  };\r\n`","// styled components\r\nimport {Container, Item, Button} from 'UI/TabNav/style';\r\n\r\n// utils\r\nimport {nanoid} from \"nanoid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NavButton = ({state, filter, handler}) => {\r\n    const isActive = state.value === filter.value;\r\n    return (\r\n        <Button className={isActive ? 'active' : ''}\r\n                onClick={() => handler({value: filter.value, label: filter.label})}\r\n        >\r\n            {filter.label}\r\n        </Button>\r\n    )\r\n}\r\n\r\nconst GenderNav = ({state, handler}) => {\r\n    const options = [\r\n        {\r\n            value: 'all',\r\n            label: 'all'\r\n        },\r\n        {\r\n            value: 'male',\r\n            label: 'Men'\r\n        },\r\n        {\r\n            value: 'female',\r\n            label: 'Women'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Container as=\"ul\" className=\"gender\">\r\n            {\r\n                options.map(item => {\r\n                    return (\r\n                        <Item key={nanoid(3)}>\r\n                            <NavButton state={state} filter={item} handler={handler} />\r\n                        </Item>\r\n                    )\r\n                })\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nGenderNav.propTypes = {\r\n    state: PropTypes.object.isRequired,\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default GenderNav;","// styled components\r\nimport {Body} from '../style';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WidgetBody = ({children, style, sidePadding = false, elRef, ...props}) => {\r\n    return <Body ref={elRef} sidePadding={sidePadding} style={style} {...props}>{children}</Body>\r\n}\r\n\r\nWidgetBody.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]).isRequired,\r\n    sidePadding: PropTypes.bool,\r\n    style: PropTypes.any,\r\n}\r\n\r\nexport default WidgetBody;","export const colorTypes = [\r\n    {cat: 'emergency', label: 'Emergency', color: 'red'},\r\n    {cat: 'consultation', label: 'Consultation', color: 'azure'},\r\n    {cat: 'test', label: 'Examination', color: 'teal'},\r\n    {cat: 'checkup', label: 'Routine checkup', color: 'purple'},\r\n    {cat: 'sick', label: 'Sick visit', color: 'orange'},\r\n];\r\n\r\nexport const tasksColors = [\r\n    {cat: 'work', color: 'teal'},\r\n    {cat: 'travel', color: 'orange'},\r\n    {cat: 'family', color: 'azure'},\r\n    {cat: 'other', color: 'purple'}\r\n]","import {doctors} from 'db/doctors';\r\nimport Avatar from 'UI/Avatar';\r\n\r\nexport const tasksOptions = [\r\n    {value: 'work', label: 'Work'},\r\n    {value: 'travel', label: 'Travel'},\r\n    {value: 'family', label: 'Family'},\r\n    {value: 'other', label: 'Other'}\r\n]\r\n\r\nexport const depsOptions = [\r\n    {value: 'all', label: 'All Departments'},\r\n    {value: 'family', label: 'Family Doctors'},\r\n    {value: 'therapy', label: 'Therapists'},\r\n    {value: 'dent', label: 'Dentists'},\r\n    {value: 'cardio', label: 'Cardiologists'},\r\n]\r\n\r\nexport const testsOptions = [\r\n    {value: 'all', label: 'All My Tests'},\r\n    {value: 'blood', label: 'Blood Count'},\r\n    {value: 'xray', label: 'X-Ray'},\r\n    {value: 'ecg', label: 'ECG'},\r\n    {value: 'ct', label: 'CT Scan'},\r\n    {value: 'mri', label: 'MRI'},\r\n    {value: 'ultrasound', label: 'Ultrasound'},\r\n    {value: 'prenatal', label: 'Prenatal Testing'},\r\n]\r\n\r\nexport const doctorsOptions = () => {\r\n    let options = [];\r\n    doctors.forEach(doctor => {\r\n        options.push({\r\n            value: doctor.id,\r\n            label: <div className=\"user-option\">\r\n                <Avatar avatar={doctor.avatar} alt={doctor.name} size={40} />\r\n                <span>{doctor.name}</span>\r\n            </div>\r\n        });\r\n    });\r\n    return options;\r\n}","import doc1jpg from 'assets/avatars/doc1.jpg';\r\nimport doc1webp from 'assets/avatars/doc1.jpg?as=webp';\r\nimport doc2jpg from 'assets/avatars/doc2.jpg';\r\nimport doc2webp from 'assets/avatars/doc2.jpg?as=webp';\r\nimport doc3jpg from 'assets/avatars/doc3.jpg';\r\nimport doc3webp from 'assets/avatars/doc3.jpg?as=webp';\r\nimport doc4jpg from 'assets/avatars/doc4.jpg';\r\nimport doc4webp from 'assets/avatars/doc4.jpg?as=webp';\r\nimport doc8jpg from 'assets/avatars/doc8.jpg';\r\nimport doc8webp from 'assets/avatars/doc8.jpg?as=webp';\r\nimport doc10jpg from 'assets/avatars/doc10.jpg';\r\nimport doc10webp from 'assets/avatars/doc10.jpg?as=webp';\r\nimport doc11jpg from 'assets/avatars/doc11.jpg';\r\nimport doc11webp from 'assets/avatars/doc11.jpg?as=webp';\r\n\r\nexport const doctors = [\r\n    {\r\n        id: \"marvin_park\",\r\n        name: \"Marvin Park\",\r\n        avatar: {\r\n            jpg: doc2jpg,\r\n            webp: doc2webp\r\n        },\r\n        speciality: \"Dentist\",\r\n        rating: {\r\n            year: 3.64,\r\n            month: 4.5,\r\n            week: 4.14\r\n        },\r\n        daily: [\r\n            {label: '9am', value: 25},\r\n            {label: '10am', value: 45},\r\n            {label: '11am', value: 30},\r\n            {label: '12pm', value: 41},\r\n            {label: '1pm', value: 56},\r\n            {label: '2pm', value: 20},\r\n            {label: '3pm', value: 51},\r\n            {label: '4pm', value: 33},\r\n            {label: '5pm', value: 14},\r\n        ]\r\n    },\r\n    {\r\n        id: \"norman_munoz\",\r\n        name: \"Norman Munoz\",\r\n        avatar: {\r\n            jpg: doc11jpg,\r\n            webp: doc11webp\r\n        },\r\n        speciality: \"Family practice\",\r\n        rating: {\r\n            year: 3.8,\r\n            month: 3.51,\r\n            week: 4.6\r\n        },\r\n        online: true,\r\n        daily: [\r\n            {label: '9am', value: 15},\r\n            {label: '10am', value: 35},\r\n            {label: '11am', value: 20},\r\n            {label: '12pm', value: 31},\r\n            {label: '1pm', value: 46},\r\n            {label: '2pm', value: 10},\r\n            {label: '3pm', value: 41},\r\n            {label: '4pm', value: 23},\r\n            {label: '5pm', value: 58},\r\n        ]\r\n    },\r\n    {\r\n        id: \"tillie_mathis\",\r\n        name: \"Tillie Mathis\",\r\n        avatar: {\r\n            jpg: doc8jpg,\r\n            webp: doc8webp\r\n        },\r\n        speciality: \"Surgeon\",\r\n        rating: {\r\n            year: 4.98,\r\n            month: 4.32,\r\n            week: 4.8\r\n        },\r\n        online: true,\r\n        daily: [\r\n            {label: '9am', value: 45},\r\n            {label: '10am', value: 19},\r\n            {label: '11am', value: 36},\r\n            {label: '12pm', value: 58},\r\n            {label: '1pm', value: 80},\r\n            {label: '2pm', value: 25},\r\n            {label: '3pm', value: 14},\r\n            {label: '4pm', value: 60},\r\n            {label: '5pm', value: 50},\r\n        ]\r\n    },\r\n    {\r\n        id: \"cornelia_phillips\",\r\n        name: \"Cornelia Phillips\",\r\n        avatar: {\r\n            jpg: doc1jpg,\r\n            webp: doc1webp\r\n        },\r\n        speciality: \"Surgeon\",\r\n        rating: {\r\n            year: 3.05,\r\n            month: 4.1,\r\n            week: 4.7\r\n        },\r\n        daily: [\r\n            {label: '9am', value: 35},\r\n            {label: '10am', value: 29},\r\n            {label: '11am', value: 26},\r\n            {label: '12pm', value: 48},\r\n            {label: '1pm', value: 70},\r\n            {label: '2pm', value: 15},\r\n            {label: '3pm', value: 4},\r\n            {label: '4pm', value: 50},\r\n            {label: '5pm', value: 25},\r\n        ]\r\n    },\r\n    {\r\n        id: \"isaiah_goodman\",\r\n        name: \"Isaiah Goodman\",\r\n        avatar: {\r\n            jpg: doc4jpg,\r\n            webp: doc4webp\r\n        },\r\n        speciality: \"Pediatrician\",\r\n        rating: {\r\n            year: 4.82,\r\n            month: 5.00,\r\n            week: 4.13\r\n        },\r\n        online: true,\r\n        daily: [\r\n            {label: '9am', value: 55},\r\n            {label: '10am', value: 39},\r\n            {label: '11am', value: 46},\r\n            {label: '12pm', value: 68},\r\n            {label: '1pm', value: 90},\r\n            {label: '2pm', value: 35},\r\n            {label: '3pm', value: 24},\r\n            {label: '4pm', value: 70},\r\n            {label: '5pm', value: 45},\r\n        ]\r\n    },\r\n    {\r\n        id: \"claudia_turner\",\r\n        name: \"Claudia Turner\",\r\n        avatar: {\r\n            jpg: doc10jpg,\r\n            webp: doc10webp\r\n        },\r\n        speciality: \"Family practice\",\r\n        rating: {\r\n            year: 0.95,\r\n            month: 2.4,\r\n            week: 3.54\r\n        },\r\n        daily: [\r\n            {label: '9am', value: 20},\r\n            {label: '10am', value: 49},\r\n            {label: '11am', value: 35},\r\n            {label: '12pm', value: 78},\r\n            {label: '1pm', value: 45},\r\n            {label: '2pm', value: 65},\r\n            {label: '3pm', value: 20},\r\n            {label: '4pm', value: 50},\r\n            {label: '5pm', value: 15},\r\n        ]\r\n    },\r\n    {\r\n        id: \"emily_rivera\",\r\n        name: \"Emily Rivera\",\r\n        avatar: {\r\n            jpg: doc3jpg,\r\n            webp: doc3webp\r\n        },\r\n        speciality: \"Dentist\",\r\n        rating: {\r\n            year: 4.00,\r\n            month: 4.95,\r\n            week: 3.18\r\n        },\r\n        daily: [\r\n            {label: '9am', value: 30},\r\n            {label: '10am', value: 59},\r\n            {label: '11am', value: 45},\r\n            {label: '12pm', value: 88},\r\n            {label: '1pm', value: 55},\r\n            {label: '2pm', value: 75},\r\n            {label: '3pm', value: 30},\r\n            {label: '4pm', value: 60},\r\n            {label: '5pm', value: 25},\r\n        ]\r\n    }\r\n];","import { useState } from 'react';\r\n\r\nconst useGenderFilter = (targetArr) => {\r\n    const [gender, setGender] = useState({ value: \"all\", label: \"All\" });\r\n\r\n    const genderArr = (gender) => {\r\n        if (gender.value === \"all\") return targetArr; // Ne pas filtrer si \"all\" est sélectionné\r\n        return targetArr.filter(item => item.sex?.toLowerCase() === gender.value);\r\n    };\r\n\r\n    return {\r\n        genderArr,\r\n        gender,\r\n        setGender\r\n    };\r\n};\r\n\r\nexport default useGenderFilter;\r\n","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {dark, light, flex, colors, breakpoints} from 'styles/vars';\r\nimport {HeaderWrapper} from 'components/Widget/style';\r\n\r\nexport const NavWrapper = styled(HeaderWrapper)`\r\n  ${breakpoints.tablet} {\r\n    flex-direction: row;\r\n    ${flex.between};\r\n\r\n    .gender {\r\n      max-width: 300px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LetterNav = styled.ul`\r\n  display: flex;\r\n  margin: 0 2px;\r\n  gap: 1px;\r\n  height: 80px;\r\n  align-items: center;\r\n  border-radius: 8px;\r\n  padding: 0 18px;\r\n  overflow-x: auto;\r\n  background-color: ${theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: dark.bodyBg\r\n  })};\r\n`\r\n\r\nexport const LetterNavWrapper = styled.div`\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  &:before, &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    background: ${theme('theme', {\r\n      light: light.shadow,\r\n      dark: dark.shadowDarker\r\n    })};\r\n    height: 100%;\r\n    width: 24px;\r\n    z-index: 1;\r\n    filter: blur(1px);\r\n    display: block;\r\n  }\r\n\r\n  &:before {\r\n    left: 2px;\r\n  }\r\n\r\n  &:after {\r\n    right: 2px;\r\n    transform: scaleX(-1);\r\n  }\r\n`\r\n\r\nexport const LetterNavItem = styled.a`\r\n  display: flex;\r\n  ${flex.center};\r\n  width: 44px;\r\n  height: 40px;\r\n  text-transform: uppercase;\r\n  color: ${colors.blue};\r\n  border-radius: 8px;\r\n  background: ${theme('theme', {\r\n    light: light.widgetBg,\r\n    dark: dark.widgetBg\r\n  })};\r\n  transition: color var(--transition), background var(--transition);\r\n\r\n  &:hover, &:focus {\r\n    background-color: ${colors.blue};\r\n    color: #fff;\r\n  }\r\n\r\n  &:not(&.active) {\r\n    pointer-events: none;\r\n    background-color: transparent;\r\n    color: ${theme('theme', {\r\n      light: light.text,\r\n      dark: dark.text\r\n    })};\r\n  }\r\n`\r\n","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {colors, dark, breakpoints, flex, light, textSizes, fonts} from 'styles/vars';\r\n\r\nexport const Block = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n\r\n  .main {\r\n    ${flex.col}\r\n    justify-content: space-between;\r\n\r\n    .name {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .age {\r\n      font-size: ${textSizes['14']};\r\n    }\r\n  }\r\n\r\n  .wrapper {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  @media screen and (min-width: 666.98px) {\r\n    flex-grow: 1;\r\n    &.actions {\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    .wrapper {\r\n      flex-grow: unset;\r\n    }\r\n  }\r\n`;\r\nexport const DropdownMenu = styled.div`\r\n  position: relative;\r\n\r\n  .dropdown-content {\r\n    position: absolute;\r\n    top: 100%;\r\n    right: 0;\r\n    background: white;\r\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n    border-radius: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 8px;\r\n    min-width: 150px;\r\n\r\n    button {\r\n      background: none;\r\n      border: none;\r\n      padding: 8px 12px;\r\n      text-align: left;\r\n      width: 100%;\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        background: #f0f0f0;\r\n      }\r\n\r\n      &.delete {\r\n        color: red;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const Wrapper = styled.div`\r\n  ${flex.col}\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  padding: 20px;\r\n  gap: 20px 0;\r\n  background-color: ${theme('theme', {\r\n    light: light.highlight,\r\n    dark: dark.highlight\r\n  })};\r\n  transition: background-color var(--transition);\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${theme('theme', {\r\n      light: light.bodyBg,\r\n      dark: dark.bodyBg\r\n    })};\r\n  }\r\n  \r\n  .overview {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n  }\r\n\r\n  .main {\r\n    width: calc(100% - 40px);\r\n\r\n    .department {\r\n      font-size: ${textSizes['14']};\r\n      margin-top: 2px;\r\n    }\r\n  }\r\n\r\n  .rating, .booked {\r\n    ${flex.col};\r\n    gap: 7px;\r\n    font-size: ${textSizes['12']};\r\n    font-family: ${fonts.accent};\r\n  }\r\n  \r\n  .styled-rating {\r\n    margin-top: -5px;\r\n  }\r\n  \r\n  .contacts {\r\n    display: flex;\r\n    gap: 20px;\r\n  }\r\n\r\n  button {\r\n    transition: background-color var(--transition), color var(--transition);\r\n\r\n    &.booking {\r\n      font-size: ${textSizes['14']};\r\n      font-family: ${fonts.accent};\r\n      border-radius: 20px;\r\n      padding: 12px 16px;\r\n      color: ${theme('theme', {\r\n        light: colors.blue,\r\n        dark: '#fff'\r\n      })};\r\n      \r\n      &:hover, &:focus {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  button:not(.reminder) {\r\n    background-color: ${theme('theme', {\r\n      light: light.widgetBg,\r\n      dark: dark.widgetBg\r\n    })};\r\n\r\n    &:hover, &:focus {\r\n      background-color: ${colors.blue};\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 666.98px) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-end;\r\n\r\n    button.reminder {\r\n      order: 3;\r\n      width: 100%;\r\n    }\r\n    \r\n    &.doctor, &.staff {\r\n      justify-content: space-between;\r\n      ${Block} {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n  \r\n  ${breakpoints.tablet} {\r\n    &.doctor .avatar {\r\n      width: 60px;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.laptop} {\r\n    align-items: center;\r\n    gap: 20px;\r\n    button.reminder {\r\n      order: unset;\r\n      width: fit-content;\r\n    }\r\n\r\n    &.doctor, &.staff {\r\n      justify-content: space-between;\r\n      gap: 40px;\r\n      ${Block} {\r\n        width: fit-content;\r\n      }\r\n      \r\n      .overview {\r\n        gap: 40px;\r\n      }\r\n    }\r\n\r\n    ${Block} {\r\n      &.actions {\r\n        flex-grow: unset;\r\n      }\r\n    }\r\n  }\r\n  \r\n  ${breakpoints.desktop} {\r\n    .booked {\r\n      width: 275px;\r\n    }\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  ${flex.center};\r\n  gap: 8px;\r\n  border-radius: 20px;\r\n  font-size: ${textSizes['14']};\r\n  height: 40px;\r\n  width: 40px;\r\n  color: ${light.text};\r\n  transition: color var(--transition), background-color var(--transition);\r\n\r\n  .icon {\r\n    color: ${colors.gray};\r\n    transition: color var(--transition);\r\n  }\r\n\r\n  .text {\r\n    display: none;\r\n  }\r\n\r\n  &:hover, &:focus {\r\n    background-color: ${colors.blue};\r\n    color: #fff;\r\n\r\n    .icon {\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  ${breakpoints.mobileL} {\r\n    width: fit-content;\r\n    padding: 0 16px;\r\n    .text {\r\n      display: block;\r\n    }\r\n  }\r\n`\r\n","import styled, { createGlobalStyle,keyframes  } from \"styled-components\";\r\n\r\n\r\n// Animation d’apparition\r\nexport const fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: scale(0.8);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// Boutons groupés\r\nexport const Error = styled.span`\r\n  color: red;\r\n  font-size: 12px;\r\n  margin-top: 4px;\r\n`;\r\n\r\n// Boutons groupés\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  margin-top: 20px;\r\n`;\r\n\r\n// Style général des boutons\r\nexport const ModalButton = styled.button`\r\n  width: 100%;\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n  background: ${(props) => (props.variant === \"simple\" ? \"#3498db\" : \"#2ecc71\")};\r\n  color: white;\r\n\r\n  &:hover {\r\n    background: ${(props) => (props.variant === \"simple\" ? \"#2980b9\" : \"#27ae60\")};\r\n  }\r\n`;\r\n\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: Arial, sans-serif;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 12px 24px;\r\n  background-color: ${(props) => (props.gray ? \"#ccc\" : \"#2563eb\")};\r\n  color: ${(props) => (props.gray ? \"#000\" : \"white\")};\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background 0.3s;\r\n  &:hover {\r\n    background-color: ${(props) => (props.gray ? \"#bbb\" : \"#1d4ed8\")};\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(Button)`\r\n  && {\r\n    padding: 10px 20px;\r\n    background-color: #007bff;\r\n    color: white;\r\n    border-radius: 10px;\r\n    &:hover {\r\n      background-color: #0056b3;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const ModalOverlay = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 8000;\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  max-width: 800px;\r\n  position: relative;\r\n  text-align: center;\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  border: none;\r\n  background: none;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport  const Title = styled.h1`\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 3px;\r\n  margin-top: 7px;\r\n   justify-content: center;\r\n  align-items: center;\r\n  margin-left:10px;\r\n`;\r\n\r\n\r\nexport  const ProgressBar = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport  const Step = styled.div`\r\n  width: 60px;\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  background: ${(props) => (props.active ? \"#2563eb\" : \"#e5e7eb\")};\r\n  color: ${(props) => (props.active ? \"#fff\" : \"#000\")};\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  margin: 0 0px;\r\n`;\r\n\r\nexport  const Line = styled.div`\r\n  height: 4px;\r\n  width: 300px;\r\n  background: #e5e7eb;\r\n  margin: 0 0px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 4px 4px 4px 4px rgba(0, 0, 0, 0.15);\r\n  width: 80%;\r\n  max-height: 1650px; \r\n  max-width: 650px; \r\n  height: 180; \r\n  text-align: center;\r\n  margin: 0 auto; \r\n`;\r\n\r\n\r\nexport  const Label = styled.label`\r\n  display: block;\r\n  text-align: left;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport  const Input = styled.input`\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 8px;\r\n  margin-buttom:8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const InputRow = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const ButtonRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n`;\r\n\r\n\r\n\r\nexport const ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const NavButton = styled.button`\r\n  padding: 10px 20px;\r\n  background-color: #ccc;\r\n  color: black;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #bbb;\r\n  }\r\n`;\r\n\r\nexport const NextButton = styled.button`\r\n  padding: 10px 20px;\r\n  background-color: #2563eb;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #1d4ed8;\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  padding: 12px 24px;\r\n  background-color: green;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: darkgreen;\r\n  }\r\n`;\r\n\r\nexport const DisabledBackground = styled.div`\r\n  filter: ${(props) => (props.isOpen ? \"blur(3px)\" : \"none\")};\r\n  pointer-events: ${(props) => (props.isOpen ? \"none\" : \"auto\")};\r\n`;\r\n\r\n\r\n\r\n\r\nexport const Select = styled.select`\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  background: white;\r\n  color:grey;\r\n  margin-top: 8px;\r\n  margin-buttom:8px;\r\n`;\r\n\r\nexport const RadioGroup = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const RadioButton = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  cursor: pointer;\r\n\r\n  input {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\nexport const StepContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const FormTitle= styled.h2`\r\n font-size: 19px;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n   justify-content: center;\r\n  align-items: center;\r\n  margin-left: 30px;\r\n`;","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/doctors\";\r\n\r\nconst DoctorService = {\r\n  getAllDoctors: async () => {\r\n    try {\r\n      const response = await axios.get(API_URL);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du chargement des médecins:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getDoctorById: async (id) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération du médecin:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  createDoctor: async (doctorData) => {\r\n    try {\r\n      const response = await axios.post(API_URL, doctorData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la création du médecin:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  createSimpleDoctor: async (doctorData) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/createSimpleDoctor`, doctorData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la création du médecin:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateDoctor: async (id, doctorData) => {\r\n    try {\r\n      const response = await axios.put(`${API_URL}/${id}`, doctorData);\r\n      console.log(\"Response from update:\", response.data); // Ajoutez cette ligne\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la mise à jour du médecin:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  deleteDoctor: async (id) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/${id}`);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la suppression du médecin:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default DoctorService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport * as z from \"zod\";\r\nimport {\r\n  GlobalStyles, Input, Form, ButtonContainer, ProgressBar, NavButton, NextButton, SubmitButton, Line,\r\n  ModalContent, ModalOverlay, CloseButton, Error, Title, StepContainer, Step, InputRow, FormTitle\r\n} from \"../styles/PopUpAddDoctor\";\r\nimport DoctorService from \"services/DoctorService\";\r\n\r\n// Validation schema\r\nconst DoctorSchema = z.object({\r\n  firstName: z.string().min(2, { message: \"First Name is required (min 2 caractères)\" }),\r\n  lastName: z.string().min(2, { message: \"Last Name is required (min 2 caractères)\" }),\r\n  badgeNumber: z.coerce.number().min(100, { message: \"Badge Number must be at least 100\" }),\r\n  departement: z.string().min(3, { message: \"Departement is required\" }),\r\n  speciality: z.string().min(3, { message: \"Speciality is required\" }),\r\n  emailPerso: z.string().email({ message: \"Invalid email format\" }),\r\n  phone: z.coerce.number().min(10000000, { message: \"Phone number must be at least 8 digits\" }),\r\n  password: z.string().min(6, { message: \"Password must be at least 6 characters\" })\r\n});\r\n\r\nconst steps = [\r\n  { number: 1, label: \"Doctor Information\" },\r\n  { number: 2, label: \"Personal Information\" },\r\n];\r\n\r\nconst UpdateDoctorPopup = ({ isOpen, onClose, doctor }) => {\r\n  const [step, setStep] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors }\r\n  } = useForm({\r\n    resolver: zodResolver(DoctorSchema),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (doctor) {\r\n      reset({\r\n        firstName: doctor.user?.firstName || '',\r\n        lastName: doctor.user?.lastName || '',\r\n        emailPerso: doctor.emailPerso || '',\r\n        badgeNumber: doctor.badgeNumber || '',\r\n        departement: doctor.departement || '',\r\n        speciality: doctor.speciality || '',\r\n        phone: doctor.phone || '',\r\n        password: '', // Champ vide pour le mot de passe\r\n      });\r\n    }\r\n  }, [doctor, reset]);\r\n\r\n  const nextStep = () => setStep((prev) => Math.min(prev + 1, steps.length));\r\n  const prevStep = () => setStep((prev) => Math.max(prev - 1, 1));\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      if (!doctor || !doctor._id) {\r\n        alert(\"Erreur : ID du médecin manquant.\");\r\n        return;\r\n      }\r\n\r\n      const updatedData = {\r\n        ...data,\r\n        email: data.emailPerso,\r\n        badgeNumber: parseInt(data.badgeNumber, 10),\r\n        phone: parseInt(data.phone, 10),\r\n      };\r\n\r\n      await DoctorService.updateDoctor(doctor._id, updatedData);\r\n      alert(\"✅ Doctor updated successfully!\");\r\n      onClose();\r\n      window.location.reload(); // Rafraîchir la page pour afficher les données mises à jour\r\n    } catch (error) {\r\n      console.error(\"Error updating doctor:\", error);\r\n      alert(`Error: ${error.response ? error.response.data.message : \"Unknown error\"}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <ModalOverlay>\r\n      <ModalContent as={motion.div} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }}>\r\n        <CloseButton onClick={onClose}>✖</CloseButton>\r\n        <Title>Update Doctor</Title>\r\n\r\n        <ProgressBar>\r\n          {steps.map(({ number, label }, index) => (\r\n            <React.Fragment key={index}>\r\n              <StepContainer>\r\n                <Step active={step >= number}>{number}</Step>\r\n                <span>{label}</span>\r\n              </StepContainer>\r\n              {index < steps.length - 1 && <Line />}\r\n            </React.Fragment>\r\n          ))}\r\n        </ProgressBar>\r\n\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          {step === 1 && (\r\n            <>\r\n              <FormTitle>Doctor Information</FormTitle>\r\n              <InputRow>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"firstName\")} placeholder=\"First Name\" />\r\n                  <Error>{errors.firstName?.message}</Error>\r\n                </div>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"lastName\")} placeholder=\"Last Name\" />\r\n                  <Error>{errors.lastName?.message}</Error>\r\n                </div>\r\n              </InputRow>\r\n              <InputRow>\r\n                <div>\r\n                  <Input type=\"number\" {...register(\"badgeNumber\")} placeholder=\"Badge Number\" />\r\n                  <Error>{errors.badgeNumber?.message}</Error>\r\n                </div>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"departement\")} placeholder=\"Department\" />\r\n                  <Error>{errors.departement?.message}</Error>\r\n                </div>\r\n              </InputRow>\r\n              <div>\r\n                <Input type=\"text\" {...register(\"speciality\")} placeholder=\"Speciality\" />\r\n                <Error>{errors.speciality?.message}</Error>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {step === 2 && (\r\n            <>\r\n              <FormTitle>Personal Information</FormTitle>\r\n              <InputRow>\r\n                <div>\r\n                  <Input type=\"email\" {...register(\"emailPerso\")} placeholder=\"Email\" />\r\n                  <Error>{errors.emailPerso?.message}</Error>\r\n                </div>\r\n                <div>\r\n                  <Input type=\"number\" {...register(\"phone\")} placeholder=\"Phone\" />\r\n                  <Error>{errors.phone?.message}</Error>\r\n                </div>\r\n              </InputRow>\r\n              <div>\r\n                <Input type=\"password\" {...register(\"password\")} placeholder=\"Password\" />\r\n                <Error>{errors.password?.message}</Error>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <ButtonContainer>\r\n            {step > 1 && <NavButton type=\"button\" onClick={prevStep}>Back</NavButton>}\r\n            {step < steps.length ? (\r\n              <NextButton type=\"button\" onClick={nextStep}>Next →</NextButton>\r\n            ) : (\r\n              <SubmitButton type=\"submit\" disabled={loading}>\r\n                {loading ? \"Updating...\" : \"Update\"}\r\n              </SubmitButton>\r\n            )}\r\n          </ButtonContainer>\r\n        </Form>\r\n      </ModalContent>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default UpdateDoctorPopup;","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Wrapper, Block, Button } from './style';\r\nimport Avatar from 'UI/Avatar';\r\nimport ShapeButton from 'UI/ShapeButton';\r\nimport Reminder from 'UI/Reminder';\r\nimport Progress from 'UI/Progress';\r\nimport CustomRating from 'UI/CustomRating';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { fadePresence } from 'constants/framer';\r\nimport PropTypes from 'prop-types';\r\nimport UpdateDoctorPopup from 'pages/UpdateDoctorPopUp';\r\nimport DoctorService from 'services/DoctorService';\r\n\r\nconst Item = ({ type, data, onDelete }) => {\r\n  const [visibleInfo, setVisibleInfo] = useState({});\r\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const togglePhoneVisibility = (id) => {\r\n    setVisibleInfo((prev) => ({\r\n      ...prev,\r\n      [id]: !prev[id],\r\n    }));\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    setIsEditPopupOpen(true);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await DoctorService.deleteDoctor(data._id);\r\n      onDelete(data._id); // Appel de la prop onDelete pour mettre à jour l'état parent\r\n      console.log(\"Doctor deleted:\", data._id);\r\n      window.location.reload(); // Recharger la page après la suppression\r\n    } catch (error) {\r\n      console.error(\"Error deleting doctor:\", error);\r\n      alert(error.response ? error.response.data.message : \"Erreur lors de la suppression du médecin.\");\r\n    }\r\n  };\r\n\r\n  const { user, online, avatar, phone } = data;\r\n\r\n  const Common = () => (\r\n    <Block>\r\n      <Avatar avatar={avatar} alt={`${user.lastName} ${user.firstName}`} online={online} />\r\n      <div className=\"main\">\r\n        <span className=\"name\">{user.lastName} {user.firstName}</span>\r\n        {type === 'patient' ? (\r\n          <span className=\"age\">{data.age} years</span>\r\n        ) : (\r\n          <span className=\"department\">{data.department.map(item => item.label).join(', ')}</span>\r\n        )}\r\n      </div>\r\n    </Block>\r\n  );\r\n\r\n  const DoctorInfo = () => (\r\n    <div className=\"overview\">\r\n      <div className=\"rating\">\r\n        <span>Doctor rating</span>\r\n        <CustomRating value={data.rating} />\r\n      </div>\r\n      <div className=\"booked\">\r\n        <span>Booked appointments</span>\r\n        <Progress value={data.booked} />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const Layout = () => {\r\n    return (\r\n      <>\r\n        <Common />\r\n        {type === 'doctor' && <DoctorInfo />}\r\n        {type === 'staff' && <DoctorInfo />}\r\n        {type === 'patient' && data.reminder && <Reminder reminder={data.reminder} />}\r\n        <Block className=\"actions\">\r\n          {type === 'patient' && (\r\n            <div className=\"wrapper\">\r\n              <Button className=\"btn-action\" onClick={() => navigate(\"/dashboard_f\", { state: { data } })}>\r\n                <i className=\"icon icon-doctor\"></i>\r\n                <span className=\"text\">Case history</span>\r\n              </Button>\r\n            </div>\r\n          )}\r\n          <ShapeButton icon=\"comment-text\" label=\"Message\" shape=\"round\" hasNotification={data.message} />\r\n          <ShapeButton icon=\"phone\" label=\"Call\" shape=\"round\" onClick={() => togglePhoneVisibility(data._id)} />\r\n          {visibleInfo[data._id] && phone && <div className=\"phone-number\">{phone}</div>}\r\n          <Button className=\"btn-action update\" onClick={handleUpdate}>\r\n            <i className=\"icon icon-edit\"></i>\r\n          </Button>\r\n          <Button className=\"btn-action delete\" onClick={handleDelete}>\r\n            <i className=\"icon icon-trash\"></i>\r\n          </Button>\r\n        </Block>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <Wrapper className={type} as={motion.li} {...fadePresence}>\r\n        <Layout />\r\n      </Wrapper>\r\n      {isEditPopupOpen && (\r\n        <UpdateDoctorPopup\r\n          isOpen={isEditPopupOpen}\r\n          onClose={() => setIsEditPopupOpen(false)}\r\n          doctor={data} // Pass the doctor data here\r\n        />\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nItem.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  data: PropTypes.shape({\r\n    user: PropTypes.shape({\r\n      firstName: PropTypes.string,\r\n      lastName: PropTypes.string,\r\n      email: PropTypes.string,\r\n    }),\r\n    phone: PropTypes.string,\r\n    online: PropTypes.bool,\r\n    avatar: PropTypes.string,\r\n    age: PropTypes.number,\r\n    reminder: PropTypes.string,\r\n    message: PropTypes.bool,\r\n    department: PropTypes.array,\r\n    rating: PropTypes.number,\r\n    booked: PropTypes.number,\r\n    _id: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  onDelete: PropTypes.func.isRequired, // Prop validation for onDelete\r\n};\r\n\r\nexport default Item;","// styling\r\nimport styled from 'styled-components';\r\nimport {flex} from 'styles/vars';\r\n\r\n// components\r\nimport Item from 'components/DoctorList/Item';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst List = styled.ul`\r\n  ${flex.col};\r\n  gap: 20px;\r\n  margin: 20px;\r\n`\r\n\r\nconst PersonList = ({ arr, type, gender, deps }) => {\r\n  const { search, category } = deps ? deps : { search: '', category: '' };\r\n\r\n  return (\r\n      <List>\r\n          {arr.map((item, i) => (\r\n              <Item \r\n                  key={`${item.id}-${gender}-${search}-${category}`} \r\n                  data={{ ...item, phone: String(item.phone) }} // Convertir phone en string\r\n                  type={type} \r\n              />\r\n          ))}\r\n      </List>\r\n  );\r\n};\r\n\r\n\r\nPersonList.propTypes = {\r\n    type: PropTypes.oneOf(['doctor', 'patient', 'staff']).isRequired,\r\n    arr: PropTypes.array.isRequired\r\n}\r\n\r\nexport default PersonList;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport GroupSeparator from 'UI/GroupSeparator';\r\nimport PersonList from 'components/DoctorList';\r\nimport { depsOptions } from 'constants/options';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nconst Group = ({char, arr, type, gender}) => {\r\n    const data = arr.filter(item =>item.user?.lastName[0].toLowerCase() === char);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                data.length !== 0 ?\r\n                    <div id={char}>\r\n                        <GroupSeparator text={char} />\r\n                        <PersonList arr={data} type={type} gender={gender} />\r\n                    </div> : null\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nGroup.propTypes = {\r\n    char: PropTypes.string.isRequired,\r\n    arr: PropTypes.array.isRequired,\r\n    type: PropTypes.oneOf(['patient', 'doctor', 'staff']).isRequired,\r\n}\r\n\r\nexport default Group;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Header } from 'components/Widget/style';\r\nimport { LetterNav, LetterNavWrapper, LetterNavItem, NavWrapper } from './style';\r\n\r\n// components\r\nimport Widget from 'components/Widget';\r\nimport WidgetBody from 'components/Widget/WidgetBody';\r\nimport GenderNav from 'components/GenderNav';\r\nimport MonthNavigator from 'UI/Navigator/MonthNavigator';\r\nimport Group from './Group';\r\nimport NoDataPlaceholder from 'components/NoDataPlaceholder';\r\nimport UpdateDoctorPopup from 'pages/UpdateDoctorPopUp';\r\n\r\n// utils\r\nimport { generateAlphabet } from 'utils/helpers';\r\n\r\n// hooks\r\nimport useGenderFilter from 'hooks/useGenderFilter';\r\nimport DoctorService from 'services/DoctorService';\r\n\r\nconst DoctorsList = ({ variant = \"doctor\" }) => {\r\n  const contentRef = useRef(null);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [selectedLetter, setSelectedLetter] = useState(null);\r\n  const [lastGender, setLastGender] = useState(null);\r\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n  // Fetch doctors on component mount\r\n  useEffect(() => {\r\n    const fetchDoctors = async () => {\r\n      try {\r\n        const data = await DoctorService.getAllDoctors();\r\n        setDoctors(data);\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch Doctors', error);\r\n      }\r\n    };\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  // Current filter by month\r\n  const [month, setMonth] = useState({ label: 'This month', number: new Date().getMonth() });\r\n  const dateFilteredArr = doctors;\r\n\r\n  // Current filter by gender\r\n  const { gender, setGender, genderArr } = useGenderFilter(dateFilteredArr);\r\n  const filteredDoctors = genderArr(gender) || [];\r\n\r\n  const displayedDoctors = selectedLetter\r\n    ? filteredDoctors.filter(\r\n        (doctor) => doctor.user?.lastName?.[0]?.toLowerCase() === selectedLetter\r\n      )\r\n    : filteredDoctors;\r\n\r\n  // Generate an array containing alphabet\r\n  const alphabet = generateAlphabet() || [];\r\n\r\n  const isCharInDoctors = (char, arr) => {\r\n    return arr.some((doctor) => doctor.user?.lastName[0]?.toLowerCase() === char);\r\n  };\r\n\r\n  useEffect(() => {\r\n    contentRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }, [month, gender]);\r\n\r\n  const handleLetterClick = (char) => {\r\n    setSelectedLetter((prevLetter) => (prevLetter === char ? null : char));\r\n  };\r\n\r\n  const handleGenderClick = (newGender) => {\r\n    if (lastGender === newGender.value) {\r\n      setSelectedLetter(null); // Reset letter selection on double click\r\n    }\r\n    setLastGender(newGender.value);\r\n    setGender(newGender);\r\n  };\r\n\r\n  const handleEditDoctor = (doctor) => {\r\n    setSelectedDoctor(doctor); // Store selected doctor\r\n    setIsEditPopupOpen(true); // Open the popup\r\n  };\r\n\r\n  return (\r\n    <Widget name=\"DoctorsList\">\r\n      <Header sidePadding={true}>\r\n        <NavWrapper>\r\n          <GenderNav state={gender} handler={setGender} />\r\n          <MonthNavigator state={month} handler={setMonth} />\r\n        </NavWrapper>\r\n        <LetterNavWrapper>\r\n          <LetterNav>\r\n            {alphabet.length > 0 ? (\r\n              alphabet.map((char) => (\r\n                <li key={char}>\r\n                  <LetterNavItem\r\n                    className={`${\r\n                      isCharInDoctors(char, filteredDoctors) ? 'active' : ''\r\n                    } ${selectedLetter === char ? 'selected' : ''}`}\r\n                    href={`#${char}`}\r\n                    onClick={() => handleLetterClick(char)}\r\n                  >\r\n                    {char}\r\n                  </LetterNavItem>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <NoDataPlaceholder />\r\n            )}\r\n          </LetterNav>\r\n        </LetterNavWrapper>\r\n      </Header>\r\n      <WidgetBody style={{ padding: 0 }} elRef={contentRef}>\r\n        {filteredDoctors.length !== 0 ? (\r\n          <>\r\n            {selectedLetter ? (\r\n              <Group\r\n                key={`patients-${selectedLetter}`}\r\n                gender={gender.value}\r\n                char={selectedLetter}\r\n                type={'patient'}\r\n                arr={displayedDoctors}\r\n                onEditDoctor={handleEditDoctor}\r\n              />\r\n            ) : (\r\n              alphabet.map((char) => (\r\n                <Group\r\n                  key={`patients-${char}`}\r\n                  gender={gender.value}\r\n                  char={char}\r\n                  type={'patient'}\r\n                  arr={filteredDoctors.filter(\r\n                    (doctor) => doctor.user?.lastName?.[0]?.toLowerCase() === char\r\n                  ) || []}\r\n                  onEditDoctor={handleEditDoctor}\r\n                />\r\n              ))\r\n            )}\r\n          </>\r\n        ) : (\r\n          <NoDataPlaceholder />\r\n        )}\r\n      </WidgetBody>\r\n\r\n      {/* UpdateDoctorPopup */}\r\n      {isEditPopupOpen && (\r\n        <UpdateDoctorPopup\r\n          isOpen={isEditPopupOpen}\r\n          onClose={() => setIsEditPopupOpen(false)}\r\n          doctor={selectedDoctor} // Pass the selected doctor data\r\n        />\r\n      )}\r\n    </Widget>\r\n  );\r\n};\r\n\r\nexport default DoctorsList;","import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport * as z from \"zod\";\r\nimport {\r\n  GlobalStyles, Input, Form, ButtonContainer, ProgressBar, NavButton, NextButton, SubmitButton, Line,\r\n  ModalContent, ModalOverlay, CloseButton, Error, Title, StepContainer, Step, InputRow, FormTitle\r\n} from \"../styles/PopUpAddDoctor\";\r\nimport DoctorService from \"services/DoctorService\";\r\n\r\n// Validation schema\r\nconst DoctorSchema = z.object({\r\n  firstName: z.string().min(2, { message: \"First Name is required (min 2 caractères)\" }),\r\n  lastName: z.string().min(2, { message: \"Last Name is required (min 2 caractères)\" }),\r\n  badgeNumber: z.coerce.number().min(100, { message: \"Badge Number must be at least 100\" }),\r\n  departement: z.string().min(3, { message: \"Departement is required\" }),\r\n  speciality: z.string().min(3, { message: \"Speciality is required\" }),\r\n  emailPerso: z.string().email({ message: \"Invalid email format\" }),\r\n  phone: z.coerce.number().min(10000000, { message: \"Phone number must be at least 8 digits\" }),\r\n  password: z.string().min(6, { message: \"Password must be at least 6 characters\" })\r\n});\r\n\r\nconst steps = [\r\n  { number: 1, label: \"Doctor Information\" },\r\n  { number: 2, label: \"Personal Information\" },\r\n];\r\n\r\nconst AddSimpleDoctorPopup = ({ isOpen, onClose }) => {\r\n  const [step, setStep] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: zodResolver(DoctorSchema),\r\n  });\r\n\r\n  const nextStep = () => setStep((prev) => Math.min(prev + 1, steps.length));\r\n  const prevStep = () => setStep((prev) => Math.max(prev - 1, 1));\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      const formattedData = {\r\n        ...data,\r\n        email: data.emailPerso,\r\n        badgeNumber: parseInt(data.badgeNumber, 10),\r\n        phone: parseInt(data.phone, 10),\r\n      };\r\n\r\n      if (isNaN(formattedData.badgeNumber) || isNaN(formattedData.phone)) {\r\n        alert('Please provide valid numbers for badge number and phone.');\r\n        return;\r\n      }\r\n\r\n      // Envoi des données à l'API\r\n      await DoctorService.createDoctor(formattedData);\r\n      alert(\"✅ Doctor added successfully!\");\r\n      \r\n      onClose(); // Fermer le modal\r\n      window.location.reload(); // Rafraîchir la page pour afficher les nouvelles données\r\n    } catch (error) {\r\n      console.error(\"Error creating doctor:\", error);\r\n      alert(`Error: ${error.response ? error.response.data.message : \"Unknown error\"}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <ModalOverlay>\r\n      <ModalContent as={motion.div} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }}>\r\n        <CloseButton onClick={onClose}>✖</CloseButton>\r\n        <Title>Add NEW Doctor</Title>\r\n\r\n        <ProgressBar>\r\n          {steps.map(({ number, label }, index) => (\r\n            <React.Fragment key={index}>\r\n              <StepContainer>\r\n                <Step active={step >= number}>{number}</Step>\r\n                <span>{label}</span>\r\n              </StepContainer>\r\n              {index < steps.length - 1 && <Line />}\r\n            </React.Fragment>\r\n          ))}\r\n        </ProgressBar>\r\n\r\n        <Form onSubmit={(e) => { e.preventDefault(); handleSubmit(onSubmit)(e); }}>\r\n          {step === 1 && (\r\n            <>\r\n              <FormTitle>Doctor Information</FormTitle>\r\n              <InputRow>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"firstName\")} placeholder=\"First Name\" />\r\n                  <Error>{errors.firstName?.message}</Error>\r\n                </div>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"lastName\")} placeholder=\"Last Name\" />\r\n                  <Error>{errors.lastName?.message}</Error>\r\n                </div>\r\n              </InputRow>\r\n              <InputRow>\r\n                <div>\r\n                  <Input type=\"number\" {...register(\"badgeNumber\")} placeholder=\"Badge Number\" />\r\n                  <Error>{errors.badgeNumber?.message}</Error>\r\n                </div>\r\n                <div>\r\n                  <Input type=\"text\" {...register(\"departement\")} placeholder=\"Department\" />\r\n                  <Error>{errors.departement?.message}</Error>\r\n                </div>\r\n              </InputRow>\r\n              <div>\r\n                <Input type=\"text\" {...register(\"speciality\")} placeholder=\"Speciality\" />\r\n                <Error>{errors.speciality?.message}</Error>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {step === 2 && (\r\n            <>\r\n              <FormTitle>Personal Information</FormTitle>\r\n              <InputRow>\r\n                <div>\r\n                  <Input type=\"email\" {...register(\"emailPerso\")} placeholder=\"Email\" />\r\n                  <Error>{errors.emailPerso?.message}</Error>\r\n                </div>\r\n                <div>\r\n                  <Input type=\"number\" {...register(\"phone\")} placeholder=\"Phone\" />\r\n                  <Error>{errors.phone?.message}</Error>\r\n                </div>\r\n              </InputRow>\r\n              <div>\r\n                <Input type=\"password\" {...register(\"password\")} placeholder=\"Password\" />\r\n                <Error>{errors.password?.message}</Error>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <ButtonContainer>\r\n            {step > 1 && <NavButton type=\"button\" onClick={prevStep}>Back</NavButton>}\r\n            {step < steps.length ? (\r\n              <NextButton type=\"button\" style={step === 1 ? { marginLeft: \"auto\" } : {}} onClick={nextStep}>\r\n                Next →\r\n              </NextButton>\r\n            ) : (\r\n              <SubmitButton type=\"submit\" disabled={loading}>\r\n                {loading ? \"Submitting...\" : \"Submit\"}\r\n              </SubmitButton>\r\n            )}\r\n          </ButtonContainer>\r\n        </Form>\r\n      </ModalContent>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default AddSimpleDoctorPopup;","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Page from \"layout/Page\";\r\nimport DoctorsList from \"widgets/DoctorsList\";\r\nimport AddSimpleDoctorPopup from \"./AddSimpleDoctorPopup\";\r\n\r\nimport { GlobalStyles, Container, AddButton, DisabledBackground } from \"../styles/PopUpAddDoctor\";\r\n\r\nimport { ModalOverlay, ModalContent, CloseButton, ButtonGroup, ModalButton } from \"../styles/PopUpAddDoctor\";\r\n\r\nconst Doctors = () => {\r\n  const [isTypePopupOpen, setIsTypePopupOpen] = useState(false);\r\n  const [isSimplePopupOpen, setIsSimplePopupOpen] = useState(false);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null); // Store the doctor to edit\r\n  const navigate = useNavigate();\r\n\r\n  const handleSimpleDoctor = () => {\r\n    setIsTypePopupOpen(false);\r\n    setSelectedDoctor(null); // Reset to avoid pre-filling fields on creation\r\n    setIsSimplePopupOpen(true);\r\n  };\r\n\r\n  const handleEditDoctor = (doctor) => {\r\n    setSelectedDoctor(doctor); // Store the selected doctor\r\n    setIsSimplePopupOpen(true); // Open the popup in edit mode\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Doctors List\">\r\n      <GlobalStyles />\r\n      <Container>\r\n        <AddButton onClick={() => setIsTypePopupOpen(true)}>+ Add new Doctor</AddButton>\r\n      </Container>\r\n\r\n      {/* Popup to choose doctor type */}\r\n      {isTypePopupOpen && (\r\n        <ModalOverlay>\r\n          <ModalContent>\r\n            <CloseButton onClick={() => setIsTypePopupOpen(false)}>✖</CloseButton>\r\n            <h2>Choose Doctor Type</h2>\r\n            <ButtonGroup>\r\n              <ModalButton variant=\"simple\" onClick={handleSimpleDoctor}>\r\n                Simple Doctor\r\n              </ModalButton>\r\n            </ButtonGroup>\r\n          </ModalContent>\r\n        </ModalOverlay>\r\n      )}\r\n\r\n      {/* Popup for adding/editing a simple doctor */}\r\n      <AddSimpleDoctorPopup\r\n        isOpen={isSimplePopupOpen}\r\n        onClose={() => setIsSimplePopupOpen(false)}\r\n        doctorData={selectedDoctor} // Pass the selected doctor's info\r\n      />\r\n\r\n      {/* Disable background when popups are open */}\r\n      <DisabledBackground isOpen={isSimplePopupOpen || isTypePopupOpen}>\r\n        <DoctorsList variant=\"doctor\" onEditDoctor={handleEditDoctor} /> {/* Pass the function to DoctorsList */}\r\n      </DisabledBackground>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Doctors;"],"names":["_rect","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgFilledrating","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","rx","ForwardRef","SvgEmptyrating","x","y","stroke","StyledRating","styled","Rating","display","gap","marginTop","color","value","direction","useTheme","_jsx","className","initialRating","emptySymbol","Empty","fullSymbol","Filled","readonly","Separator","div","theme","light","effects","dashedLight","dark","dashedDark","SeparatorText","span","textSizes","fonts","accent","widgetBg","text","children","state","handler","loop","Navigator","currentTarget","dataset","current","number","prevState","currentMonth","Date","getMonth","prevMonth","nextMonth","label","dateObj","toLocaleString","month","prevDisabled","nextDisabled","_jsxs","Wrapper","onClick","flex","between","bodyBg","colors","blue","style","LinearProgress","variant","sx","backgroundColor","highlight","borderRadius","button","center","colorTypes","find","item","cat","reminder","type","Container","Button","secondary","Item","NavButton","filter","isActive","_ref2","as","map","nanoid","sidePadding","elRef","Body","tasksColors","tasksOptions","testsOptions","doctorsOptions","options","doctors","forEach","doctor","push","Avatar","avatar","alt","name","size","jpg","doc2jpg","webp","doc2webp","speciality","rating","year","week","daily","online","doc8jpg","doc8webp","doc1jpg","doc1webp","doc4jpg","doc4webp","doc10jpg","doc10webp","doc3jpg","doc3webp","targetArr","gender","setGender","useState","genderArr","_item$sex","sex","toLowerCase","NavWrapper","HeaderWrapper","breakpoints","tablet","LetterNav","ul","LetterNavWrapper","shadow","shadowDarker","LetterNavItem","a","Block","col","laptop","desktop","gray","mobileL","keyframes","Error","ButtonGroup","ModalButton","GlobalStyles","createGlobalStyle","AddButton","ModalOverlay","ModalContent","CloseButton","Title","h1","ProgressBar","Step","active","Line","Form","form","Input","input","InputRow","ButtonContainer","NextButton","SubmitButton","DisabledBackground","isOpen","StepContainer","select","FormTitle","h2","API_URL","getAllDoctors","async","axios","get","data","error","console","getDoctorById","createDoctor","post","doctorData","createSimpleDoctor","updateDoctor","response","put","log","deleteDoctor","delete","DoctorSchema","z","firstName","min","message","lastName","badgeNumber","departement","emailPerso","email","phone","password","steps","_errors$firstName","_errors$lastName","_errors$badgeNumber","_errors$departement","_errors$speciality","_errors$emailPerso","_errors$phone","_errors$password","onClose","step","setStep","loading","setLoading","register","handleSubmit","reset","formState","errors","useForm","resolver","zodResolver","useEffect","_doctor$user","_doctor$user2","user","motion","initial","opacity","scale","animate","index","React","onSubmit","_id","alert","updatedData","parseInt","DoctorService","window","location","reload","_Fragment","placeholder","prevStep","prev","Math","max","nextStep","disabled","onDelete","visibleInfo","setVisibleInfo","isEditPopupOpen","setIsEditPopupOpen","navigate","useNavigate","handleUpdate","handleDelete","Common","age","department","join","DoctorInfo","CustomRating","Progress","booked","Layout","Reminder","ShapeButton","icon","shape","hasNotification","togglePhoneVisibility","AnimatePresence","li","fadePresence","UpdateDoctorPopup","List","arr","deps","search","category","i","String","char","_item$user","GroupSeparator","PersonList","contentRef","useRef","setDoctors","selectedLetter","setSelectedLetter","lastGender","setLastGender","selectedDoctor","setSelectedDoctor","fetchDoctors","setMonth","dateFilteredArr","useGenderFilter","filteredDoctors","displayedDoctors","_doctor$user$lastName","_doctor$user$lastName2","alphabet","generateAlphabet","isCharInDoctors","some","_doctor$user2$lastNam","_contentRef$current","scrollTo","top","behavior","handleEditDoctor","Widget","Header","GenderNav","MonthNavigator","href","prevLetter","handleLetterClick","NoDataPlaceholder","WidgetBody","padding","Group","onEditDoctor","_doctor$user3","_doctor$user3$lastNam","_doctor$user3$lastNam2","formattedData","isNaN","preventDefault","marginLeft","Doctors","isTypePopupOpen","setIsTypePopupOpen","isSimplePopupOpen","setIsSimplePopupOpen","Page","handleSimpleDoctor","AddSimpleDoctorPopup","DoctorsList"],"sourceRoot":""}