{"version":3,"file":"static/js/5350.fe8856cd.chunk.js","mappings":"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","sources":["UI/Btn/index.jsx","components/Widget/style.js","layout/Page/style.js","layout/Grid/index.jsx","layout/Page/index.jsx","pages/PageNotFound.jsx"],"sourcesContent":["// styling\r\nimport styled from 'styled-components';\r\nimport {colors, textSizes, fonts, flex} from 'styles/vars';\r\nimport {darken} from 'polished';\r\n\r\n// utils\r\nimport {motion, AnimatePresence} from 'framer-motion';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n  border-radius: 8px;\r\n  background-color: ${colors.blue};\r\n  color: #fff;\r\n  font-size: ${textSizes['14']};\r\n  font-family: ${fonts.accent};\r\n  height: 40px;\r\n  width: 100%;\r\n  display: flex;\r\n  ${flex.center};\r\n  gap: 8px;\r\n  line-height: 1;\r\n  transition: background-color var(--transition);\r\n  \r\n\r\n  &:hover, &:focus {\r\n    background-color: ${darken(0.1, colors.blue)};\r\n  }\r\n\r\n  &.success {\r\n    background-color: ${colors.success};\r\n\r\n    &:hover, &:focus {\r\n      background-color: ${darken(0.1, colors.success)};\r\n    }\r\n  }\r\n\r\n  &.error {\r\n    background-color: ${colors.error};\r\n\r\n    &:hover, &:focus {\r\n      background-color: ${darken(0.1, colors.error)};\r\n    }\r\n  }\r\n\r\n  &.disabled {\r\n    background-color: ${colors.gray};\r\n    pointer-events: none;\r\n  }\r\n`\r\n\r\nconst Btn = ({text, handler, type = 'button', isVisible = true, className, icon}) => {\r\n    return (\r\n        <AnimatePresence>\r\n            {\r\n                isVisible && (\r\n                    <Button as={motion.button}\r\n                            className={className ? className : ''}\r\n                            onClick={handler}\r\n                            type={type}\r\n                            initial={false}\r\n                            animate={{opacity: 1}}\r\n                            exit={{opacity: 0}}\r\n                            transition={{duration: .3}}>\r\n                        {icon && <i className={`icon icon-${icon}`} /> } {text}\r\n                    </Button>\r\n                )\r\n            }\r\n        </AnimatePresence>\r\n    )\r\n}\r\n\r\nBtn.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    handler: PropTypes.func,\r\n    type: PropTypes.oneOf(['button', 'submit', 'reset']),\r\n    isVisible: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    icon: PropTypes.string\r\n}\r\n\r\nexport default Btn;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {flex, light, dark, colors, textSizes, effects, breakpoints} from 'styles/vars';\r\n\r\nconst bg = theme('theme', {\r\n    light: light.widgetBg,\r\n    dark: dark.widgetBg\r\n})\r\n\r\nconst bar = theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: dark.bodyBg\r\n})\r\n\r\nconst borderShadow = theme('theme', {\r\n    light: light.shadow,\r\n    dark: dark.shadow\r\n})\r\n\r\nconst navBg = theme('theme', {\r\n    light: light.highlight,\r\n    dark: dark.highlight\r\n})\r\n\r\nexport const Container = styled.div`\r\n  box-shadow: ${effects.widgetShadow};\r\n  border-radius: 10px;\r\n  position: relative;\r\n  background-color: ${bg};\r\n  overflow: hidden;\r\n  ${flex.col};\r\n  min-height: 182px;\r\n  flex-grow: 1;\r\n  ${props => props.mobile && `height: ${props.mobile}px`};\r\n  // iOS fix\r\n  transform: translate3d(0, 0, 0);\r\n  \r\n  &.shadow {\r\n    &:before, &:after {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  &:before, &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    background: ${borderShadow};\r\n    height: 100%;\r\n    width: 24px;\r\n    z-index: 3;\r\n    filter: blur(1px);\r\n    display: none;\r\n  }\r\n\r\n  &:before {\r\n    left: -2px;\r\n    transform: ${props => props.dir === 'rtl' ? 'scaleX(-1)' : 'scaleX(1)'};\r\n  }\r\n\r\n  &:after {\r\n    right: -2px;\r\n    transform: rotate(180deg) ${props => props.dir === 'rtl' ? 'scaleX(-1)' : 'scaleX(1)'};\r\n  }\r\n  \r\n  ${breakpoints.tablet} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  ${props => props.flex === 'column' ? `flex-direction: column;` : flex.between};\r\n  padding: ${props => !props.sidePadding ? '24px 24px 20px' : '24px 0 20px'};\r\n  flex-wrap: wrap;\r\n  gap: 20px 10px;\r\n  position: relative;\r\n  z-index: 10;\r\n\r\n  .title {\r\n    margin: ${props => props.sidePadding ? '0 24px' : '0'};\r\n    flex-shrink: 0;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  &.nav .title {\r\n    max-width: calc(100% - 60px);\r\n    display: block;\r\n  }\r\n`\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  ${flex.col};\r\n  width: 100%;\r\n  margin: 0 20px;\r\n  gap: 20px;\r\n\r\n  .navigator {\r\n    background-color: ${navBg};\r\n  }\r\n`\r\n\r\nexport const Body = styled.div`\r\n  padding: ${props => !props.sidePadding ? '0 24px 24px' : '0 0 24px'};\r\n  height: ${props => props.height ? `calc(100% - ${props.height}px)` : '100%'};\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  ${flex.col};\r\n  flex-grow: 1;\r\n`\r\n\r\nexport const Nav = styled.div`\r\n  font-size: ${textSizes['14']};\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${colors.gray};\r\n  margin-right: -9px;\r\n\r\n  button {\r\n    opacity: 0.5;\r\n    transition: opacity var(--transition);\r\n    padding: 0 9px;\r\n\r\n    &:hover, &:focus {\r\n      opacity: 1;\r\n    }\r\n    \r\n    &.disabled {\r\n      visibility: hidden;\r\n      pointer-events: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Navbar = styled.ul`\r\n  margin: 0 2px;\r\n  border-radius: 8px;\r\n  height: 40px;\r\n  padding-left: 22px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: ${bar};\r\n  flex-grow: 1;\r\n`\r\n\r\nexport const Divider = styled.div`\r\n  height: 2px;\r\n  background-color: ${bar};\r\n  width: 100%;\r\n`","import styled from 'styled-components';\r\nimport {breakpoints, flex} from 'styles/vars';\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px 20px 84px;\r\n  flex-grow: 1;\r\n  height: auto;\r\n  width: 100%;\r\n  display: flex;\r\n  margin-top: var(--header-height);\r\n\r\n  ${breakpoints.tablet} {\r\n    padding: 20px 30px 30px;\r\n    ${flex.col};\r\n  }\r\n\r\n  ${breakpoints.laptopL} {\r\n    padding: 0;\r\n    margin-top: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) and (min-height: 800px) {\r\n    overflow: hidden;\r\n  }\r\n`\r\nexport const ContentTitle = styled.h1`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 18px;\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n\r\n  ${breakpoints.laptopL} {\r\n    margin-top: 40px;\r\n  }\r\n\r\n  ${breakpoints.desktop} {\r\n    flex-direction: row;\r\n    ${flex.between};\r\n  }\r\n`\r\n\r\nexport const Controls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  padding-right: 16px;\r\n`\r\n\r\nexport const Widgets = styled.div`\r\n  ${flex.col};\r\n  width: 100%;\r\n  flex-grow: 1;\r\n`","// styling\r\nimport styled from 'styled-components';\r\n\r\n// components\r\nimport {Responsive, WidthProvider} from 'react-grid-layout';\r\nimport {withSize} from 'react-sizeme';\r\n\r\n// hooks\r\nimport {useInterfaceContext} from 'contexts/interfaceContext';\r\nimport {useDispatch} from 'react-redux';\r\nimport {updateLayout, saveToLocalStorage} from 'store/features/layout';\r\nimport useWindowSize from 'hooks/useWindowSize';\r\n\r\nconst ResponsiveGridLayout = withSize()(WidthProvider(Responsive));\r\n\r\nconst StaticGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n`;\r\n\r\nconst Grid = ({layouts, children, id, desktop}) => {\r\n    const {isLayoutEditable, fontScale} = useInterfaceContext();\r\n    const dispatch = useDispatch();\r\n    const isMobile = useWindowSize().width < 768;\r\n\r\n    const handleLayoutChange = (layouts) => {\r\n        if (isLayoutEditable) {\r\n            dispatch(updateLayout({id, layouts}));\r\n            dispatch(saveToLocalStorage());\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isMobile ?\r\n                    <StaticGrid>{children}</StaticGrid>\r\n                    :\r\n                    <ResponsiveGridLayout className=\"content_layout\"\r\n                                          layouts={layouts}\r\n                                          breakpoints={{xl: 1026, lg: 1039, md: 708, sm: 0}}\r\n                                          cols={{xl: 3, lg: 3, md: 2, sm: 1}}\r\n                                          margin={[24, 24]}\r\n                                          isResizable={false}\r\n                                          rowHeight={fontScale === 1 ? 182 : 182 + (fontScale * 11)}\r\n                                          isDraggable={isLayoutEditable}\r\n                                          isBounded={true}\r\n                                          compactType=\"vertical\"\r\n                                          useCSSTransforms={false}\r\n                                          autoSize={true}\r\n                                          onLayoutChange={desktop ? handleLayoutChange : undefined}>\r\n                        {children}\r\n                    </ResponsiveGridLayout>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Grid;","// styled components\r\nimport {Content, ContentTitle, Controls, Wrapper, Widgets} from './style';\r\nimport {QtyBadge} from 'UI/Badge/style';\r\nimport {ControlWrapper} from 'components/GlobalSettingsControls/style';\r\n\r\n// components\r\nimport {Helmet} from 'react-helmet';\r\nimport {\r\n    ContrastControl,\r\n    FullscreenControl,\r\n    LayoutControl,\r\n    ScaleControl,\r\n    ThemeControl,\r\n    DirectionControl\r\n} from 'components/GlobalSettingsControls';\r\nimport Grid from 'layout/Grid';\r\nimport {motion} from 'framer-motion';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\n// hooks\r\nimport useWindowSize from 'hooks/useWindowSize';\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {useRef, useEffect} from 'react';\r\n\r\nconst Page = ({title, children, hasBadge, hasTitle = true, qty}) => {\r\n    const pageRef = useRef(null);\r\n    const device = useMobileDetect();\r\n    const {width} = useWindowSize();\r\n    const isTablet = width > 767.98;\r\n\r\n    // get the current location from the router\r\n    const {pathname} = useLocation();\r\n    // detect if the current location is dashboard\r\n    const isDashboard = pathname.includes('dashboard');\r\n    // modify the path to get corresponding layout from the store\r\n    const layoutKey = pathname.replace('/', '');\r\n    const layouts = useSelector(state => state['layout'].layout);\r\n    const current = layouts[layoutKey];\r\n\r\n    useEffect(() => {\r\n        if (pageRef.current) {\r\n            pageRef.current.scrollTop = 0;\r\n        }\r\n    }, [pathname]);\r\n\r\n    return (\r\n        <Content ref={pageRef}>\r\n            <Helmet>\r\n                <title>{`Smart190 | ${title}`}</title>\r\n            </Helmet>\r\n            <Widgets>\r\n                <Wrapper as={motion.div}\r\n                         initial={{opacity: 0}}\r\n                         whileInView={{opacity: 1}}\r\n                         transition={{duration: .4}}\r\n                         viewport={{once: true}}>\r\n                    {\r\n                        hasTitle && (\r\n                            <ContentTitle>\r\n                                {title} {hasBadge && qty && qty > 0 && <QtyBadge>+{qty}</QtyBadge>}\r\n                            </ContentTitle>\r\n                        )\r\n                    }\r\n                    {\r\n                        isTablet &&\r\n                        <Controls>\r\n                            {\r\n                                device.isDesktop() && (\r\n                                    <>\r\n                                        {\r\n                                            isDashboard && (\r\n                                                <ControlWrapper>\r\n                                                    <LayoutControl/>\r\n                                                </ControlWrapper>\r\n                                            )\r\n                                        }\r\n                                        <ControlWrapper>\r\n                                            <FullscreenControl/>\r\n                                        </ControlWrapper>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            <ControlWrapper>\r\n                                <ContrastControl/>\r\n                            </ControlWrapper>\r\n                            <ControlWrapper>\r\n                                <ThemeControl/>\r\n                            </ControlWrapper>\r\n                            <ControlWrapper>\r\n                                <DirectionControl/>\r\n                            </ControlWrapper>\r\n                            <ControlWrapper>\r\n                                <ScaleControl/>\r\n                            </ControlWrapper>\r\n                        </Controls>\r\n                    }\r\n                </Wrapper>\r\n                {current ? <Grid id={layoutKey} layouts={current} desktop={device.isDesktop()}>{children}</Grid> : children}\r\n            </Widgets>\r\n        </Content>\r\n    )\r\n}\r\n\r\nPage.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]).isRequired,\r\n    hasBadge: PropTypes.bool,\r\n    hasTitle: PropTypes.bool,\r\n    qty: PropTypes.number,\r\n}\r\n\r\nexport default Page;","// styling\r\nimport styled from 'styled-components';\r\nimport {flex} from 'styles/vars';\r\n\r\n// components\r\nimport Page from 'layout/Page';\r\nimport {Container} from 'components/Widget/style';\r\nimport Lottie from 'lottie-react';\r\nimport Btn from 'UI/Btn';\r\nimport {motion} from 'framer-motion';\r\n\r\n// hooks\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n// assets\r\nimport notFound from 'assets/404.json';\r\n\r\nconst FlexContainer = styled(Container)`\r\n  justify-content: center;\r\n  padding: 24px;\r\n`;\r\n\r\nconst Animation = styled.div`\r\n  max-height: 400px;\r\n  display: flex;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  ${flex.col};\r\n  gap: 24px;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  button {\r\n    max-width: 240px;\r\n  }\r\n`;\r\n\r\nconst PageNotFound = () => {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <Page title=\"Page not found\">\r\n            <FlexContainer as={motion.div} i\r\n                           nitial={{opacity: 0}}\r\n                           whileInView={{opacity: 1}}\r\n                           transition={{duration: .4}}\r\n                           viewport={{once: true}}>\r\n                <Animation>\r\n                    <Lottie className=\"lottie\" animationData={notFound}/>\r\n                </Animation>\r\n                <Content>\r\n                    <h2>Page you're looking for doesn't exist</h2>\r\n                    <Btn text=\"Return\" handler={() => navigate(-1)}/>\r\n                </Content>\r\n            </FlexContainer>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default PageNotFound;"],"names":["Button","styled","button","colors","blue","textSizes","fonts","accent","flex","center","darken","success","error","gray","_ref","text","handler","type","isVisible","className","icon","_jsx","AnimatePresence","children","_jsxs","as","motion","onClick","initial","animate","opacity","exit","transition","duration","bg","theme","light","widgetBg","dark","bar","bodyBg","borderShadow","shadow","navBg","highlight","Container","div","effects","widgetShadow","col","props","mobile","dir","breakpoints","tablet","Header","between","sidePadding","HeaderWrapper","Body","height","Nav","Navbar","ul","Divider","Content","laptopL","ContentTitle","h1","Wrapper","desktop","Controls","Widgets","ResponsiveGridLayout","withSize","WidthProvider","Responsive","StaticGrid","layouts","id","isLayoutEditable","fontScale","useInterfaceContext","dispatch","useDispatch","isMobile","useWindowSize","width","_Fragment","xl","lg","md","sm","cols","margin","isResizable","rowHeight","isDraggable","isBounded","compactType","useCSSTransforms","autoSize","onLayoutChange","updateLayout","saveToLocalStorage","undefined","title","hasBadge","hasTitle","qty","pageRef","useRef","device","useMobileDetect","isTablet","pathname","useLocation","isDashboard","includes","layoutKey","replace","current","useSelector","state","layout","useEffect","scrollTop","ref","Helmet","whileInView","viewport","once","QtyBadge","isDesktop","ControlWrapper","LayoutControl","FullscreenControl","ContrastControl","ThemeControl","DirectionControl","ScaleControl","Grid","FlexContainer","Animation","PageNotFound","navigate","useNavigate","Page","i","nitial","Lottie","animationData","notFound","Btn"],"sourceRoot":""}