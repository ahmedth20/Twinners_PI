{"version":3,"file":"static/js/9558.4d373080.chunk.js","mappings":"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","sources":["UI/Timestamp/index.jsx","components/CartesianChart/index.jsx","utils/recharts.js","components/Chart/Labels/index.jsx","db/epi_period.js","components/ModalWindow/CloseBtn/index.jsx","widgets/EventsCompactCalendar/index.jsx","widgets/EpiContextAreaChart/index.jsx","pages/DashboardH.jsx","widgets/EventsCompactCalendar/style.js","widgets/HealthIndexChart/style.js","db/health.js","widgets/HealthIndexChart/index.jsx"],"sourcesContent":["// styling\r\nimport styled from 'styled-components';\r\nimport {fonts, textSizes} from 'styles/vars';\r\n\r\n// utils\r\nimport moment from 'moment';\r\n\r\nconst Wrapper = styled.span`\r\n  display: flex;\r\n  gap: 8px;\r\n  font-family: ${fonts.accent};\r\n  font-size: ${textSizes['10']};\r\n  text-transform: uppercase;\r\n`\r\n\r\nconst Timestamp = ({date, text, time = false}) => {\r\n    return (\r\n        <Wrapper>\r\n            {text && <span>{text}</span>}\r\n            <span>{moment(date).format('DD MMM YYYY')}</span>\r\n            {\r\n                time &&\r\n                <>\r\n                    <span>/</span>\r\n                    <span>{moment(date).format('hh:mm A')}</span>\r\n                </>\r\n            }\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Timestamp;","// styling\r\nimport {colors} from 'styles/vars';\r\nimport {StyledTooltip} from 'components/Chart/Tooltip';\r\n\r\n// components\r\nimport {LineChart, Line, ResponsiveContainer, CartesianGrid, AreaChart, Area, Tooltip} from 'recharts';\r\n\r\n// hooks\r\nimport {useTheme} from 'styled-components';\r\nimport {useLayoutEffect, useState} from 'react';\r\nimport useWindowSize from 'hooks/useWindowSize';\r\n\r\n// utils\r\nimport {generateGridPoints} from 'utils/recharts';\r\n\r\nconst CartesianChart = ({variant, id, data, elems, ...props}) => {\r\n    const {width} = useWindowSize();\r\n    const {theme} = useTheme();\r\n    const [points, setPoints] = useState([]);\r\n    const isTablet = width >= 768;\r\n\r\n    // generate grid points based on the container width\r\n    useLayoutEffect(() => {\r\n        setPoints(generateGridPoints(id));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [width]);\r\n\r\n    // custom tooltip\r\n    const renderTooltip = (props) => {\r\n        const {active, payload} = props;\r\n        if (active && payload && payload.length) {\r\n            return (\r\n                <StyledTooltip className=\"multiple\">\r\n                    {payload.map((item, index) => (\r\n                        <div className=\"item\" key={index}>\r\n                            <div className=\"color\" style={{background: item.stroke}} />\r\n                            <div className=\"value\">{item.value}</div>\r\n                        </div>\r\n                    ))}\r\n                </StyledTooltip>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ResponsiveContainer height={isTablet ? '100%' : props.height} width=\"100%\" id={id}>\r\n            {\r\n                variant === 'line' ?\r\n                    <LineChart margin={false} data={data} {...props}>\r\n                        <defs>\r\n                            <linearGradient id=\"dark\"\r\n                                            x1=\"0.00669497\"\r\n                                            y1=\"1\"\r\n                                            x2=\"0.00669497\"\r\n                                            y2=\"327.445\"\r\n                                            gradientUnits=\"userSpaceOnUse\"\r\n                            >\r\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\r\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\r\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\r\n                            </linearGradient>\r\n                            <linearGradient id=\"light\"\r\n                                            x1=\"0.00385257\"\r\n                                            y1=\"1\"\r\n                                            x2=\"0.00385257\"\r\n                                            y2=\"328.377\"\r\n                                            gradientUnits=\"userSpaceOnUse\">\r\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\r\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\r\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\r\n                                       strokeDasharray=\"6\"\r\n                                       strokeLinecap=\"square\"\r\n                                       horizontal={false}\r\n                                       verticalPoints={points}\r\n                                       width=\"100%\"\r\n                                       height=\"100%\"\r\n                        />\r\n                        {\r\n                            elems.map(el => {\r\n                                return <Line key={el.dataKey} {...el} />\r\n                            })\r\n                        }\r\n                        <Tooltip cursor={false} content={renderTooltip} />\r\n                    </LineChart>\r\n                    :\r\n                    <AreaChart margin={{ top: 5 }} data={data} {...props}>\r\n                        <defs>\r\n                            <linearGradient id=\"dark\"\r\n                                            x1=\"0.00669497\"\r\n                                            y1=\"1\"\r\n                                            x2=\"0.00669497\"\r\n                                            y2=\"327.445\"\r\n                                            gradientUnits=\"userSpaceOnUse\"\r\n                            >\r\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\r\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\r\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\r\n                            </linearGradient>\r\n                            <linearGradient id=\"light\"\r\n                                            x1=\"0.00385257\"\r\n                                            y1=\"1\"\r\n                                            x2=\"0.00385257\"\r\n                                            y2=\"328.377\"\r\n                                            gradientUnits=\"userSpaceOnUse\">\r\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\r\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\r\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\r\n                            </linearGradient>\r\n                            {props.children}\r\n                        </defs>\r\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\r\n                                       strokeDasharray=\"6\"\r\n                                       strokeLinecap=\"square\"\r\n                                       horizontal={false}\r\n                                       verticalPoints={points}\r\n                                       width=\"100%\"\r\n                                       height=\"100%\"\r\n                        />\r\n                        {\r\n                            elems.map(el => {\r\n                                return <Area key={el.dataKey} {...el} />\r\n                            })\r\n                        }\r\n                        <Tooltip cursor={false} content={renderTooltip} />\r\n                    </AreaChart>\r\n            }\r\n        </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nexport default CartesianChart;","// cartesian grid points generator\r\nexport const generateGridPoints = (id, gutter = 20) => {\r\n    const gridWidth = document.getElementById(id).offsetWidth;\r\n\r\n    let points = [];\r\n    for (let i = 0; i < gridWidth; i += gutter) {\r\n        points.push(i);\r\n    }\r\n    return points;\r\n}","import styled from 'styled-components';\r\nimport {flex, fonts, textSizes} from 'styles/vars';\r\n\r\nconst Labels = styled.div`\r\n  text-transform: uppercase;\r\n  margin: 0 24px;\r\n  display: flex;\r\n  ${flex.between}\r\n  font-family: ${fonts.accent};\r\n  font-size: ${textSizes['10']};\r\n`\r\n\r\nexport default Labels","export const year = [\r\n    {\r\n        name: 'January',\r\n        cured: 100,\r\n        sick: 80,\r\n    },\r\n    {\r\n        name: 'February',\r\n        cured: 120,\r\n        sick: 100,\r\n    },\r\n    {\r\n        name: 'March',\r\n        cured: 140,\r\n        sick: 120,\r\n    },\r\n    {\r\n        name: 'April',\r\n        cured: 190,\r\n        sick: 170,\r\n    },\r\n    {\r\n        name: 'May',\r\n        cured: 280,\r\n        sick: 260,\r\n    },\r\n    {\r\n        name: 'June',\r\n        cured: 200,\r\n        sick: 180,\r\n    },\r\n    {\r\n        name: 'July',\r\n        cured: 180,\r\n        sick: 160,\r\n    },\r\n    {\r\n        name: 'August',\r\n        cured: 160,\r\n        sick: 120,\r\n    },\r\n    {\r\n        name: 'September',\r\n        cured: 140,\r\n        sick: 80,\r\n    },\r\n    {\r\n        name: 'October',\r\n        cured: 90,\r\n        sick: 150,\r\n    },\r\n    {\r\n        name: 'November',\r\n        cured: 120,\r\n        sick: 90,\r\n    },\r\n    {\r\n        name: 'December',\r\n        cured: 300,\r\n        sick: 164,\r\n    }\r\n];\r\n\r\nexport const month = [\r\n    {\r\n        name: '1',\r\n        cured: 90,\r\n        sick: 135,\r\n    },\r\n    {\r\n        name: '2',\r\n        cured: 150,\r\n        sick: 120,\r\n    },\r\n    {\r\n        name: '3',\r\n        cured: 180,\r\n        sick: 90,\r\n    },\r\n    {\r\n        name: '4',\r\n        cured: 190,\r\n        sick: 170,\r\n    },\r\n    {\r\n        name: '5',\r\n        cured: 280,\r\n        sick: 260,\r\n    },\r\n    {\r\n        name: '6',\r\n        cured: 200,\r\n        sick: 150,\r\n    },\r\n    {\r\n        name: '7',\r\n        cured: 180,\r\n        sick: 160,\r\n    },\r\n    {\r\n        name: '8',\r\n        cured: 160,\r\n        sick: 120,\r\n    },\r\n    {\r\n        name: '9',\r\n        cured: 219,\r\n        sick: 80,\r\n    },\r\n    {\r\n        name: '10',\r\n        cured: 90,\r\n        sick: 150,\r\n    },\r\n    {\r\n        name: '11',\r\n        cured: 315,\r\n        sick: 300,\r\n    },\r\n    {\r\n        name: '12',\r\n        cured: 250,\r\n        sick: 164,\r\n    },\r\n    {\r\n        name: '13',\r\n        cured: 210,\r\n        sick: 75,\r\n    },\r\n    {\r\n        name: '14',\r\n        cured: 350,\r\n        sick: 300,\r\n    },\r\n    {\r\n        name: '15',\r\n        cured: 450,\r\n        sick: 400,\r\n    }\r\n];\r\n\r\nexport const week = [\r\n    {\r\n        name: 'sun',\r\n        cured: 450,\r\n        sick: 350,\r\n    },\r\n    {\r\n        name: 'mon',\r\n        cured: 300,\r\n        sick: 250,\r\n    },\r\n    {\r\n        name: 'tue',\r\n        cured: 200,\r\n        sick: 150,\r\n    },\r\n    {\r\n        name: 'wed',\r\n        cured: 278,\r\n        sick: 198,\r\n    },\r\n    {\r\n        name: 'thu',\r\n        cured: 189,\r\n        sick: 99,\r\n    },\r\n    {\r\n        name: 'fri',\r\n        cured: 239,\r\n        sick: 139,\r\n    },\r\n    {\r\n        name: 'sat',\r\n        cured: 349,\r\n        sick: 249,\r\n    },\r\n];","// styling\r\nimport {colors, flex, textSizes} from 'styles/vars';\r\nimport styled from 'styled-components';\r\nimport {darken} from 'polished';\r\n\r\nconst Btn = styled.button`\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  padding: 2px;\r\n  border-radius: 50%;\r\n  background-color: ${colors.error};\r\n  color: #fff;\r\n  display: flex;\r\n  ${flex.center};\r\n  position: absolute;\r\n  top: -10px;\r\n  right: -10px;\r\n  font-size: ${textSizes[12]};\r\n  line-height: 1;\r\n  will-change: transform;\r\n  z-index: 10;\r\n  transition: background-color var(--transition), transform var(--transition);\r\n\r\n  &:hover {\r\n    background-color: ${darken(0.1, colors.error)};\r\n    transform: scale(1.1);\r\n  }\r\n  \r\n  .icon {\r\n    margin-top: -1px;\r\n  }\r\n`;\r\n\r\nconst CloseBtn = ({handler}) => {\r\n    return (\r\n        <Btn onClick={handler}>\r\n            <i className=\"icon icon-close\"/>\r\n        </Btn>\r\n    )\r\n}\r\n\r\nexport default CloseBtn;","// styled components\r\nimport {EventsCalendar, Container, Popup, Backdrop} from 'widgets/EventsCompactCalendar/style';\r\n\r\n// components\r\nimport Widget from 'components/Widget';\r\nimport Calendar from 'react-calendar';\r\nimport Timestamp from 'UI/Timestamp';\r\nimport Grow from '@mui/material/Grow';\r\nimport CloseBtn from 'components/ModalWindow/CloseBtn';\r\n\r\n// hooks\r\nimport {useState, useRef} from 'react';\r\n\r\n// utils\r\nimport {nanoid} from 'nanoid';\r\nimport moment from 'moment';\r\n\r\nconst EventsCompactCalendar = () => {\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [popupVisible, setPopupVisible] = useState(false);\r\n    const popupRef = useRef(null);\r\n\r\n    const events = [\r\n        {\r\n            date: moment(),\r\n            title: 'Medical conference',\r\n        },\r\n        {\r\n            date: moment(),\r\n            title: 'Enterprise meeting',\r\n        },\r\n        {\r\n            date: moment().add(3, 'hours'),\r\n            title: 'Meeting with Anna Smith',\r\n        },\r\n        {\r\n            date: moment().add(2, 'days').add(1, 'hours'),\r\n            title: 'Visit gym',\r\n        },\r\n        {\r\n            date: moment().add(2, 'days').add(2, 'hours'),\r\n            title: 'Prepare for presentation',\r\n        }\r\n    ]\r\n\r\n    const hasEvents = date => events.filter(event => moment(event.date).isSame(date, 'day')).length > 0;\r\n\r\n    const drawPopup = date => {\r\n        const eventsOnDate = events.filter(event => moment(event.date).isSame(date, 'day'));\r\n        return eventsOnDate.map(event => {\r\n            return (\r\n                <div key={nanoid(5)}>\r\n                    <Timestamp date={date} time={true} />\r\n                    <h3>{event.title}</h3>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    const config = {\r\n        as: Calendar,\r\n        locale: 'en-US',\r\n        navigationLabel: ({date}) => `${moment(date).format('MMMM, YYYY')}`,\r\n        navigationAriaLabel: 'Current month',\r\n        prevLabel: <i className=\"icon icon-chevron-left\"/>,\r\n        nextLabel: <i className=\"icon icon-chevron-right\"/>,\r\n        prev2Label: null,\r\n        next2Label: null,\r\n        nextAriaLabel: 'Next month',\r\n        prevAriaLabel: 'Previous month',\r\n        tileContent: ({date}) => hasEvents(date) ? <span className=\"bar\"/> : null,\r\n        tileClassName: ({date}) => hasEvents(date) ? 'active' : null,\r\n        onClickDay: (value) => {\r\n            setSelectedDate(value);\r\n            setPopupVisible(true);\r\n        },\r\n    }\r\n\r\n    return (\r\n        <Widget name=\"EventsCompactCalendar\">\r\n            <Container>\r\n                <EventsCalendar {...config} />\r\n                <Backdrop>\r\n                    {\r\n                        selectedDate &&\r\n                        <Grow in={popupVisible} timeout={300} style={{transformOrigin: '0 0 0'}}>\r\n                            <Popup ref={popupRef}>\r\n                                {drawPopup(selectedDate)}\r\n                                <CloseBtn handler={() => setPopupVisible(false)}/>\r\n                            </Popup>\r\n                        </Grow>\r\n                    }\r\n                </Backdrop>\r\n            </Container>\r\n        </Widget>\r\n    )\r\n}\r\n\r\nexport default EventsCompactCalendar;","// styling\r\nimport {colors} from 'styles/vars';\r\n\r\n// styled components\r\nimport Labels from 'components/Chart/Labels';\r\n\r\n// components\r\nimport Widget from 'components/Widget';\r\nimport WidgetHeader from 'components/Widget/WidgetHeader';\r\nimport WidgetBody from 'components/Widget/WidgetBody';\r\nimport Legend from 'UI/Legend';\r\nimport LegendItem from 'UI/Legend/LegendItem';\r\nimport CartesianChart from 'components/CartesianChart';\r\n\r\n// data placeholder\r\nimport {week} from 'db/epi_period';\r\n\r\nconst EpiContextAreaChart = () => {\r\n    const common = {\r\n        type: 'monotone',\r\n        strokeWidth: 3,\r\n        fillOpacity: .8\r\n    }\r\n    const chartElems = [\r\n        {\r\n            ...common,\r\n            dataKey: 'cured',\r\n            stroke: colors.peach,\r\n            fill: colors.peach,\r\n            activeDot: {r: 5, fill: colors.peach, strokeWidth: 0}\r\n        },\r\n        {\r\n            ...common,\r\n            dataKey: 'sick',\r\n            stroke: colors.purple,\r\n            fill:  colors.purple,\r\n            activeDot: {r: 5, fill: colors.purple, strokeWidth: 0}\r\n        }\r\n    ]\r\n    return (\r\n        <Widget name=\"EpiContextAreaChart\">\r\n            <WidgetHeader title=\"Epidemiological context\">\r\n                <Legend>\r\n                    <LegendItem legend=\"sick\" color=\"purple\"/>\r\n                    <LegendItem legend=\"cured\" color=\"peach\"/>\r\n                </Legend>\r\n            </WidgetHeader>\r\n            <WidgetBody style={{padding: 0, overflow: 'hidden', justifyContent: 'space-between'}}>\r\n                <Labels>\r\n                    {\r\n                        week.map(item => {\r\n                            return (\r\n                                <span key={item.name}>{item.name}</span>\r\n                            )\r\n                        })\r\n                    }\r\n                </Labels>\r\n                <CartesianChart id=\"EpiContextAreaChart\" data={week} elems={chartElems} variant=\"area\" height={300} />\r\n            </WidgetBody>\r\n        </Widget>\r\n    );\r\n}\r\n\r\nexport default EpiContextAreaChart;","// components\r\nimport Page from 'layout/Page';\r\nimport EventsCompactCalendar from 'widgets/EventsCompactCalendar';\r\nimport EpiContextAreaChart from 'widgets/EpiContextAreaChart';\r\nimport RadarAreaChart from 'widgets/RadarAreaChart';\r\nimport HealthIndexChart from 'widgets/HealthIndexChart';\r\nimport DiagnosesDonut from 'widgets/DiagnosesDonut';\r\n\r\nconst DashboardH = () => {\r\n    return (\r\n        <Page title=\"Dashboard\">\r\n            <div key=\"events-compact\">\r\n                <EventsCompactCalendar />\r\n            </div>\r\n            <div key=\"epi-context-area\">\r\n                <EpiContextAreaChart />\r\n            </div>\r\n            <div key=\"radar\">\r\n                <RadarAreaChart />\r\n            </div>\r\n            <div key=\"health-index-compact\">\r\n                <HealthIndexChart variant=\"health\" />\r\n            </div>\r\n            <div key=\"diagnoses-donut\">\r\n                <DiagnosesDonut variant=\"wide\" />\r\n            </div>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default DashboardH;","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {light, dark, flex, textSizes, fonts, colors, breakpoints} from 'styles/vars';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  ${flex.col};\r\n  align-items: center;\r\n`;\r\n\r\nexport const Popup = styled.div`\r\n  position: relative;\r\n  z-index: 2;\r\n  background-color: ${theme('theme', {\r\n    light: light.bodyBg,\r\n    dark: dark.bodyBg,\r\n  })};\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  ${flex.col};\r\n  gap: 16px;\r\n  margin: auto;\r\n  width: calc(100% - 40px);\r\n  max-width: 320px;\r\n`;\r\n\r\nexport const Backdrop = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  display: flex;\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n`;\r\n\r\nexport const EventsCalendar = styled.div`\r\n  ${flex.col};\r\n  gap: 8px;\r\n  position: relative;\r\n  z-index: 1;\r\n  width: 100%;\r\n  margin: 2px;\r\n  flex-grow: 1;\r\n\r\n  .react-calendar {\r\n    flex-grow: 1;\r\n    height: 100%;\r\n\r\n    &__navigation {\r\n      background-color: ${theme('theme', {\r\n        light: light.bodyBg,\r\n        dark: dark.bodyBg\r\n      })};\r\n      border-radius: 8px;\r\n      min-height: 40px;\r\n      padding: 10px 22px;\r\n      display: flex;\r\n      ${flex.between};\r\n      font-size: ${textSizes['14']};\r\n      margin: 0 2px;\r\n\r\n      &__label {\r\n        pointer-events: none;\r\n      }\r\n    }\r\n\r\n    &__viewContainer {\r\n      ${flex.col};\r\n      flex-grow: 1;\r\n    }\r\n\r\n    &__tile {\r\n      font-size: ${textSizes['14']};\r\n      font-family: ${fonts.accent};\r\n\r\n      .bar {\r\n        opacity: 0;\r\n        transition: opacity var(--transition);\r\n      }\r\n    }\r\n\r\n    &__year-view__months {\r\n      gap: 20px 0;\r\n      margin-top: 20px;\r\n    }\r\n\r\n    &__month-view {\r\n      height: 100%;\r\n\r\n      & > div {\r\n        height: 100%;\r\n        align-items: stretch;\r\n      }\r\n\r\n      & > div > div {\r\n        ${flex.col};\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n        height: 100%;\r\n        padding: 0 24px 20px;\r\n      }\r\n\r\n      &__weekdays {\r\n        text-transform: uppercase;\r\n        font-size: ${textSizes['10']};\r\n        font-family: ${fonts.accent};\r\n        text-align: center;\r\n        order: 1;\r\n        display: grid !important;\r\n        grid-template-columns: repeat(7, minmax(0, 1fr));\r\n        justify-items: center;\r\n\r\n        abbr {\r\n          text-decoration: none;\r\n        }\r\n\r\n        ${breakpoints.mobileL} {\r\n          gap: 8px;\r\n\r\n          &__weekday {\r\n            width: 40px;\r\n          }\r\n        }\r\n      }\r\n\r\n      &__days {\r\n        display: grid !important;\r\n        grid-template-columns: repeat(7, minmax(0, 1fr));\r\n        grid-gap: 20px 0;\r\n        justify-items: center;\r\n\r\n        &__day {\r\n          &.active {\r\n            color: ${colors.blue};\r\n            cursor: pointer;\r\n          }\r\n\r\n          &:not(&.active) {\r\n            pointer-events: none;\r\n          }\r\n\r\n          &--neighboringMonth {\r\n            opacity: .5;\r\n          }\r\n        }\r\n\r\n        ${breakpoints.mobileL} {\r\n          grid-gap: 8px;\r\n\r\n          &__day {\r\n            width: 40px;\r\n            height: 40px;\r\n            border-radius: 4px;\r\n            background-color: ${theme('theme', {\r\n              light: light.highlight,\r\n              dark: dark.highlight\r\n            })};\r\n            position: relative;\r\n\r\n            &.active {\r\n              color: inherit;\r\n\r\n              .bar {\r\n                opacity: 1;\r\n                display: block;\r\n                position: absolute;\r\n                left: 50%;\r\n                bottom: 8px;\r\n                border-radius: 2px;\r\n                width: 16px;\r\n                height: 2px;\r\n                background-color: ${colors.blue};\r\n                transform: translateX(-50%);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport theme from 'styled-theming';\r\nimport {colors, textSizes, breakpoints, flex} from 'styles/vars';\r\n\r\nexport const HealthIndexChartWrapper = styled.div`\r\n  height: 100%;\r\n  ${flex.col};\r\n  justify-content: space-between;\r\n\r\n  .total {\r\n    display: flex;\r\n    gap: 40px;\r\n    margin: -4px 24px 0;\r\n    position: relative;\r\n\r\n    &_block {\r\n      font-size: ${textSizes['12']};\r\n\r\n      .counter {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n\r\n      .spacer {\r\n        opacity: 0;\r\n      }\r\n\r\n      .hidden {\r\n        display: none;\r\n      }\r\n\r\n      &--cured .h1 {\r\n        color: ${colors.azure};\r\n      }\r\n\r\n      &--sick {\r\n        position: relative;\r\n\r\n        .h1 {\r\n          color: ${colors.peach};\r\n        }\r\n\r\n        &:before {\r\n          content: '';\r\n          height: 100%;\r\n          width: 1px;\r\n          background: ${theme('theme', {\r\n            light: '#A2C0D4',\r\n            dark: '#383D40',\r\n          })};\r\n          position: absolute;\r\n          top: 0;\r\n          left: -20px;\r\n        }\r\n      }\r\n    }\r\n\r\n    ${breakpoints.tablet} {\r\n      .total_block {\r\n        font-size: ${textSizes['14']};\r\n\r\n        .hidden {\r\n          display: inline;\r\n        }\r\n      }\r\n    }\r\n\r\n    ${breakpoints.laptop} {\r\n      .total_block {\r\n        font-size: ${textSizes['16']};\r\n      }\r\n    }\r\n  }\r\n`;","export const y2020 = [\r\n    {cured: 314, sick: 200},\r\n    {cured: 200, sick: 400},\r\n    {cured: 265, sick: 120},\r\n    {cured: 156, sick: 300},\r\n    {cured: 412, sick: 200},\r\n    {cured: 280, sick: 500},\r\n    {cured: 251, sick: 130},\r\n    {cured: 180, sick: 300},\r\n    {cured: 304, sick: 150},\r\n    {cured: 505, sick: 408},\r\n    {cured: 328, sick: 200},\r\n    {cured: 254, sick: 90},\r\n    {cured: 301, sick: 566},\r\n    {cured: 459, sick: 189},\r\n    {cured: 354, sick: 480},\r\n    {cured: 264, sick: 400},\r\n    {cured: 309, sick: 200},\r\n    {cured: 185, sick: 500},\r\n];\r\n\r\nexport const y2021 = [\r\n    {cured: 450, sick: 250},\r\n    {cured: 150, sick: 380},\r\n    {cured: 370, sick: 200},\r\n    {cured: 300, sick: 180},\r\n    {cured: 500, sick: 250},\r\n    {cured: 400, sick: 600},\r\n    {cured: 200, sick: 300},\r\n    {cured: 400, sick: 150},\r\n    {cured: 348, sick: 130},\r\n    {cured: 400, sick: 280},\r\n    {cured: 200, sick: 400},\r\n    {cured: 300, sick: 241},\r\n    {cured: 380, sick: 480},\r\n    {cured: 200, sick: 380},\r\n    {cured: 400, sick: 200},\r\n    {cured: 500, sick: 250},\r\n    {cured: 400, sick: 300},\r\n    {cured: 300, sick: 450},\r\n];\r\n\r\nexport const y2022 = [\r\n    {cured: 200, sick: 300},\r\n    {cured: 250, sick: 350},\r\n    {cured: 390, sick: 240},\r\n    {cured: 450, sick: 320},\r\n    {cured: 550, sick: 250},\r\n    {cured: 420, sick: 200},\r\n    {cured: 368, sick: 198},\r\n    {cured: 250, sick: 370},\r\n    {cured: 322, sick: 200},\r\n    {cured: 450, sick: 270},\r\n    {cured: 210, sick: 394},\r\n    {cured: 180, sick: 270},\r\n    {cured: 380, sick: 480},\r\n    {cured: 390, sick: 550},\r\n    {cured: 450, sick: 210},\r\n    {cured: 470, sick: 360},\r\n    {cured: 360, sick: 190},\r\n    {cured: 300, sick: 250},\r\n];\r\n","// styling\r\nimport {colors, light, dark} from 'styles/vars';\r\n\r\n// styled components\r\nimport {HealthIndexChartWrapper} from 'widgets/HealthIndexChart/style';\r\n\r\n// components\r\nimport Widget from 'components/Widget';\r\nimport WidgetNav from 'components/Widget/WidgetNav';\r\nimport WidgetBody from 'components/Widget/WidgetBody';\r\nimport {ScatterChart, Scatter, ResponsiveContainer, Tooltip, Cell} from 'recharts';\r\nimport Legend from 'UI/Legend';\r\nimport LegendItem from 'UI/Legend/LegendItem';\r\nimport ChartTooltip from 'components/Chart/Tooltip';\r\nimport CountUp from 'react-countup';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\n// hooks\r\nimport useArrayNav from 'hooks/useArrayNav';\r\nimport usePeriodNav from 'hooks/usePeriodNav';\r\nimport {useTheme} from 'styled-components';\r\n\r\n// data placeholder\r\nimport {y2020, y2021, y2022} from 'db/health';\r\n\r\nconst HealthIndexChart = ({variant}) => {\r\n    const {theme} = useTheme();\r\n    const {periods} = usePeriodNav();\r\n    const {index, navigate} = useArrayNav(periods);\r\n\r\n    const averages = [\r\n        {cured: 75.08, sick: 45.27},\r\n        {cured: 84.51, sick: 33.12},\r\n        {cured: 67.14, sick: 48.65},\r\n    ]\r\n\r\n    const getCurrentData = () => {\r\n        switch (index) {\r\n            default:\r\n            case 0:\r\n                return y2020;\r\n            case 1:\r\n                return y2021;\r\n            case 2:\r\n                return y2022;\r\n        }\r\n    }\r\n    const data = getCurrentData();\r\n\r\n    const CustomScatterShape = ({cx, cy, fill, ...props}) => {\r\n        const isDominant = variant === 'both' ? props.dom === props.dataKey : props.dataKey === 'cured';\r\n\r\n        return (\r\n            <svg width=\"10\" height=\"222\" viewBox=\"0 0 10 222\" x={cx} y={cy} fill=\"none\"\r\n                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                {\r\n                    isDominant &&\r\n                    <path opacity=\"0.5\" d=\"M5 28.3799V220.38\"\r\n                          stroke={`url(#scatter_${props.dataKey})`} strokeWidth=\"2\"\r\n                          strokeLinecap=\"round\"/>\r\n                }\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n                      d=\"M5 10C7.76142 10 10 7.76142 10 5C10 2.23858 7.76142 0 5 0C2.23858 0 0 2.23858 0 5C0 7.76142 2.23858 10 5 10Z\"\r\n                      fill={fill}/>\r\n                <defs>\r\n                    <linearGradient id=\"scatter_cured\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\r\n                                    gradientUnits=\"userSpaceOnUse\">\r\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\r\n                        <stop offset=\"1\" stopColor={colors.azure}/>\r\n                    </linearGradient>\r\n                    <linearGradient id=\"scatter_sick\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\r\n                                    gradientUnits=\"userSpaceOnUse\">\r\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\r\n                        <stop offset=\"1\" stopColor={colors.peach}/>\r\n                    </linearGradient>\r\n                </defs>\r\n            </svg>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Widget name=\"HealthIndexChart\">\r\n            <WidgetNav title=\"Health index\" handler={navigate}/>\r\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\r\n                <HealthIndexChartWrapper>\r\n                    <div className=\"total\">\r\n                        <div className=\"total_block total_block--cured\">\r\n                            <span className=\"spacer h1\">{averages[index].cured}</span>\r\n                            <CountUp className=\"counter h1\" end={averages[index].cured} duration={2} decimals={2} />\r\n                            <span><span className=\"hidden\">patients</span> health rate</span>\r\n                        </div>\r\n                        {\r\n                            variant === 'both' && (\r\n                                <div className=\"total_block total_block--sick\">\r\n                                    <span className=\"spacer h1\">{averages[index].sick}</span>\r\n                                    <CountUp className=\"counter h1\" end={averages[index].sick} duration={2} decimals={2} />\r\n                                    <span><span className=\"hidden\">patients</span> sick rate</span>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <ResponsiveContainer width=\"100%\" height={250}>\r\n                        <ScatterChart margin={false} data={data}>\r\n                            {\r\n                                variant === 'both' &&\r\n                                <Scatter dataKey=\"sick\" shape={CustomScatterShape}>\r\n                                    {data.map((entry, i) => {\r\n                                        return (\r\n                                            <Cell key={`cell-${i}`}\r\n                                                  fill={colors.peach}\r\n                                                  dom={entry.sick > entry.cured ? 'sick' : 'cured'}\r\n                                                  dataKey=\"sick\"/>\r\n                                        )\r\n                                    })}\r\n                                </Scatter>\r\n                            }\r\n                            <Scatter dataKey=\"cured\" shape={CustomScatterShape}>\r\n                                {data.map((entry, i) => {\r\n                                    return (\r\n                                        <Cell key={`cell-${i}`}\r\n                                              fill={colors.azure}\r\n                                              dom={entry.cured > entry.sick ? 'cured' : 'sick'}\r\n                                              dataKey=\"cured\"/>\r\n                                    )\r\n                                })}\r\n                            </Scatter>\r\n                            <Tooltip cursor={false} content={<ChartTooltip right/>}/>\r\n                        </ScatterChart>\r\n                    </ResponsiveContainer>\r\n                    <Legend overlay={true}>\r\n                        <LegendItem color=\"azure\" legend=\"Health rate\"/>\r\n                        {variant === 'both' && <LegendItem color=\"peach\" legend=\"Sick rate\"/>}\r\n                    </Legend>\r\n                </HealthIndexChartWrapper>\r\n            </WidgetBody>\r\n        </Widget>\r\n    )\r\n}\r\n\r\nHealthIndexChart.propTypes = {\r\n    variant: PropTypes.oneOf(['health', 'both']).isRequired\r\n}\r\n\r\nexport default HealthIndexChart;"],"names":["Wrapper","styled","span","fonts","accent","textSizes","_ref","date","text","time","_jsxs","children","_jsx","moment","format","_Fragment","variant","id","data","elems","props","width","useWindowSize","theme","useTheme","points","setPoints","useState","isTablet","useLayoutEffect","gutter","arguments","length","undefined","gridWidth","document","getElementById","offsetWidth","i","push","generateGridPoints","renderTooltip","active","payload","StyledTooltip","className","map","item","index","style","background","stroke","value","ResponsiveContainer","height","LineChart","margin","x1","y1","x2","y2","gradientUnits","stopColor","colors","dark","stopOpacity","offset","light_gray","CartesianGrid","strokeDasharray","strokeLinecap","horizontal","verticalPoints","el","Line","dataKey","Tooltip","cursor","content","AreaChart","top","Area","div","flex","between","year","name","cured","sick","month","week","Btn","button","error","center","darken","handler","onClick","EventsCompactCalendar","selectedDate","setSelectedDate","popupVisible","setPopupVisible","popupRef","useRef","events","title","add","hasEvents","filter","event","isSame","config","as","Calendar","locale","navigationLabel","navigationAriaLabel","prevLabel","nextLabel","prev2Label","next2Label","nextAriaLabel","prevAriaLabel","tileContent","_ref2","tileClassName","_ref3","onClickDay","Widget","Container","EventsCalendar","Backdrop","Grow","in","timeout","transformOrigin","Popup","ref","Timestamp","nanoid","CloseBtn","EpiContextAreaChart","common","type","strokeWidth","fillOpacity","chartElems","peach","fill","activeDot","r","purple","WidgetHeader","Legend","LegendItem","legend","color","WidgetBody","padding","overflow","justifyContent","Labels","CartesianChart","DashboardH","Page","RadarAreaChart","HealthIndexChart","DiagnosesDonut","col","light","bodyBg","breakpoints","mobileL","blue","highlight","HealthIndexChartWrapper","azure","tablet","laptop","y2020","y2021","y2022","periods","usePeriodNav","navigate","useArrayNav","averages","getCurrentData","CustomScatterShape","cx","cy","isDominant","dom","viewBox","x","y","xmlns","opacity","d","fillRule","clipRule","widgetBg","WidgetNav","CountUp","end","duration","decimals","ScatterChart","Scatter","shape","entry","Cell","ChartTooltip","right","overlay"],"sourceRoot":""}