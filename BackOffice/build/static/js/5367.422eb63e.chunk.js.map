{"version":3,"file":"static/js/5367.422eb63e.chunk.js","mappings":"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","sources":["widgets/TasksList/index.jsx","pages/DashboardC.jsx","widgets/ConfirmedDiagnoses/List/style.js","widgets/ConfirmedDiagnoses/List/index.jsx","db/confirmed.js","widgets/ConfirmedDiagnoses/index.jsx"],"sourcesContent":["// styling\r\nimport styled from 'styled-components';\r\n\r\n// components\r\nimport Widget from 'components/Widget';\r\nimport WidgetHeader from 'components/Widget/WidgetHeader';\r\nimport {Navbar} from 'components/Widget/style';\r\nimport Btn from 'UI/Btn'\r\nimport TodosLegend from 'components/Todos/TodosLegend';\r\nimport AddForm from 'components/Todos/AddForm';\r\nimport DnDLayout from 'components/Todos/DnDLayout';\r\nimport ScrollContainer from 'components/ScrollContainer';\r\n\r\n// hooks\r\nimport {useSelector} from 'react-redux';\r\nimport {useState, useRef, useEffect} from 'react';\r\nimport useContentHeight from 'hooks/useContentHeight';\r\n\r\nconst Footer = styled.div`\r\n  padding: 2px 24px 22px 24px;\r\n`;\r\n\r\nconst TasksList = () => {\r\n    const todos = useSelector(state => state['todos'].todos);\r\n    const [isFormVisible, setFormVisible] = useState(false);\r\n\r\n    const headerRef = useRef(null);\r\n    const footerRef = useRef(null);\r\n    const listRef = useRef(null);\r\n    const height = useContentHeight(headerRef, footerRef);\r\n\r\n    useEffect(() => {\r\n        listRef.current.scrollTo(0, 0);\r\n    }, [isFormVisible]);\r\n\r\n    return (\r\n        <Widget name=\"TasksList\" mobile={600}>\r\n            <WidgetHeader title=\"Tasks list\" flex=\"column\" style={{paddingBottom: 2}} elRef={headerRef}>\r\n                <Navbar as=\"div\" style={{margin: '0 -22px'}}>\r\n                    <TodosLegend/>\r\n                </Navbar>\r\n            </WidgetHeader>\r\n            <ScrollContainer height={height}>\r\n                <div className=\"track\" ref={listRef} style={{overflowY: isFormVisible ? 'hidden' : 'auto'}}>\r\n                    <AddForm isVisible={isFormVisible} visibilityHandler={setFormVisible} variant=\"list\"/>\r\n                    {todos.length !== 0 ? <DnDLayout variant=\"list\"/> : null}\r\n                </div>\r\n            </ScrollContainer>\r\n            <Footer ref={footerRef}>\r\n                <Btn text=\"Add new task\" handler={() => setFormVisible(true)}/>\r\n            </Footer>\r\n        </Widget>\r\n    )\r\n}\r\n\r\nexport default TasksList;","// components\r\nimport Page from 'layout/Page';\r\nimport TasksList from 'widgets/TasksList';\r\nimport ConfirmedDiagnoses from 'widgets/ConfirmedDiagnoses';\r\nimport DiagnosesDonut from 'widgets/DiagnosesDonut';\r\nimport RadarAreaChart from 'widgets/RadarAreaChart';\r\n\r\nconst DashboardC = () => {\r\n    return (\r\n        <Page title=\"Doctor Dashboard\">\r\n            <div key=\"task-list\">\r\n                <TasksList />\r\n            </div>\r\n            <div key=\"confirmed\">\r\n                <ConfirmedDiagnoses nav=\"arrows\" />\r\n            </div>\r\n            <div key=\"diagnoses-donut\">\r\n                <DiagnosesDonut variant=\"rays\" />\r\n            </div>\r\n            <div key=\"radar\">\r\n                <RadarAreaChart />\r\n            </div>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default DashboardC;","import styled from 'styled-components';\r\nimport {flex, textSizes, fonts} from 'styles/vars';\r\n\r\nexport const List = styled.ul`\r\n  gap: 22px;\r\n  margin-top: 20px;\r\n  ${flex.col}\r\n`\r\n\r\nexport const Block = styled.div`\r\n  display: flex;\r\n  ${flex.between}\r\n  margin-bottom: 7px;\r\n  font-size: ${textSizes['14']};\r\n`\r\n\r\nexport const Text = styled.div`\r\n  display: flex;\r\n  gap: 4px;\r\n  font-family: ${fonts.accent};\r\n  \r\n  .num {\r\n    font-weight: 500;\r\n  }\r\n  & + .label {\r\n    text-transform: capitalize;\r\n  }\r\n`","// styled components\r\nimport {List, Block, Text} from \"./style\";\r\n\r\n// components\r\nimport Progress from 'UI/Progress';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\nimport {confirmedPalette} from 'styles/vars';\r\n\r\nconst ListItem = ({data, period}) => {\r\n    const {label} = data;\r\n    const progress = data[period].progress,\r\n        goal = data[period].goal;\r\n    const normalise = value => (value / (goal / 100));\r\n\r\n    return (\r\n        <li>\r\n            <Block>\r\n                <Text>\r\n                    <span className=\"num\">{progress}</span> of\r\n                    <span className=\"num\">{goal}</span>\r\n                </Text>\r\n                <span className=\"label\">{label}</span>\r\n            </Block>\r\n            <div className=\"confirmed_list-item_visualizer\">\r\n                <Progress color={confirmedPalette[label]} value={normalise(progress)} />\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst ConfirmedDiagnosesList = ({data, period, short = false}) => {\r\n    return (\r\n        <List>\r\n            {\r\n                data.map(item => {\r\n                    const {label} = item;\r\n                    if (short && label === 'diabetes') return null;\r\n                    else {\r\n                        return (\r\n                            <ListItem key={label} data={item} period={period} />\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        </List>\r\n    )\r\n}\r\n\r\nConfirmedDiagnosesList.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    short: PropTypes.bool\r\n}\r\n\r\nexport default ConfirmedDiagnosesList;","export const confirmed = [\r\n    {\r\n        label: \"cold\",\r\n        year: {\r\n            progress: 648,\r\n            goal: 751\r\n        },\r\n        month: {\r\n            progress: 53,\r\n            goal: 104\r\n        },\r\n        week: {\r\n            progress: 18,\r\n            goal: 36\r\n        }\r\n    },\r\n    {\r\n        label: \"fracture\",\r\n        year: {\r\n            progress: 215,\r\n            goal: 651\r\n        },\r\n        month: {\r\n            progress: 90,\r\n            goal: 142\r\n        },\r\n        week: {\r\n            progress: 13,\r\n            goal: 58\r\n        }\r\n    },\r\n    {\r\n        label: \"concussion\",\r\n        year: {\r\n            progress: 84,\r\n            goal: 120\r\n        },\r\n        month: {\r\n            progress: 31,\r\n            goal: 87\r\n        },\r\n        week: {\r\n            progress: 11,\r\n            goal: 43\r\n        }\r\n    },\r\n    {\r\n        label: \"hepatitis\",\r\n        year: {\r\n            progress: 804,\r\n            goal: 846\r\n        },\r\n        month: {\r\n            progress: 358,\r\n            goal: 501\r\n        },\r\n        week: {\r\n            progress: 182,\r\n            goal: 330\r\n        }\r\n    },\r\n    {\r\n        label: \"dermatitis\",\r\n        year: {\r\n            progress: 458,\r\n            goal: 901\r\n        },\r\n        month: {\r\n            progress: 215,\r\n            goal: 354\r\n        },\r\n        week: {\r\n            progress: 130,\r\n            goal: 261\r\n        }\r\n    },\r\n    {\r\n        label: \"diabetes\",\r\n        year: {\r\n            progress: 302,\r\n            goal: 514\r\n        },\r\n        month: {\r\n            progress: 187,\r\n            goal: 298\r\n        },\r\n        week: {\r\n            progress: 74,\r\n            goal: 105\r\n        }\r\n    }\r\n]","// components\r\nimport Widget from 'components/Widget';\r\nimport WidgetHeader from 'components/Widget/WidgetHeader';\r\nimport WidgetNav from 'components/Widget/WidgetNav';\r\nimport WidgetBody from 'components/Widget/WidgetBody';\r\nimport ConfirmedDiagnosesList from 'widgets/ConfirmedDiagnoses/List';\r\nimport PeriodNav from 'components/PeriodNav';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\n// hooks\r\nimport usePeriodNav from 'hooks/usePeriodNav';\r\nimport useArrayNav from 'hooks/useArrayNav';\r\n\r\n// data placeholder\r\nimport {confirmed} from 'db/confirmed';\r\n\r\nconst ConfirmedDiagnoses = ({nav}) => {\r\n    const {period, periods, setPeriod} = usePeriodNav();\r\n    const {index, navigate} = useArrayNav(periods);\r\n\r\n    return (\r\n        <Widget name=\"ConfirmedDiagnosesTabs\">\r\n            {\r\n                nav === 'tabs' ?\r\n                    <WidgetHeader title=\"Confirmed Diagnoses\" style={{paddingBottom: 16}}/>\r\n                    :\r\n                    <WidgetNav title=\"Confirmed Diagnoses\" handler={navigate} style={{paddingBottom: 8}}/>\r\n            }\r\n            <WidgetBody style={{paddingBottom: 26}}>\r\n                {\r\n                    nav === 'tabs' && <PeriodNav current={period} handler={setPeriod}/>\r\n                }\r\n                <ConfirmedDiagnosesList short={nav === 'tabs'}\r\n                                        period={nav === 'tabs' ? period : periods[index]}\r\n                                        data={confirmed}/>\r\n            </WidgetBody>\r\n        </Widget>\r\n    )\r\n}\r\n\r\nConfirmedDiagnoses.propTypes = {\r\n    nav: PropTypes.oneOf(['arrows', 'tabs']).isRequired\r\n}\r\n\r\nexport default ConfirmedDiagnoses;"],"names":["Footer","styled","div","TasksList","todos","useSelector","state","isFormVisible","setFormVisible","useState","headerRef","useRef","footerRef","listRef","height","useContentHeight","useEffect","current","scrollTo","_jsxs","Widget","name","mobile","children","_jsx","WidgetHeader","title","flex","style","paddingBottom","elRef","Navbar","as","margin","TodosLegend","ScrollContainer","className","ref","overflowY","AddForm","isVisible","visibilityHandler","variant","length","DnDLayout","Btn","text","handler","DashboardC","Page","ConfirmedDiagnoses","nav","DiagnosesDonut","RadarAreaChart","List","ul","col","Block","between","textSizes","Text","fonts","accent","ListItem","_ref","data","period","label","progress","goal","Progress","color","confirmedPalette","value","_ref2","short","map","item","confirmed","year","month","week","periods","setPeriod","usePeriodNav","index","navigate","useArrayNav","WidgetNav","WidgetBody","PeriodNav","ConfirmedDiagnosesList"],"sourceRoot":""}