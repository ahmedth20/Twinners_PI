import axios from "axios";

const API_URL = "http://localhost:5000/consultation";

const ConsultationService = {
  // üîπ Cr√©er une nouvelle consultation
  createConsultation: async (data) => {
    try {
      const response = await axios.post(API_URL, data);
      return response.data;
    } catch (error) {
      console.error("Erreur lors de la cr√©ation de la consultation:", error);
      throw error;
    }
  },

  // üîπ R√©cup√©rer toutes les consultations
  getAllConsultations: async () => {
    try {
      const response = await axios.get(API_URL);
      return response.data;
    } catch (error) {
      console.error("Erreur lors de la r√©cup√©ration des consultations:", error);
      throw error;
    }
  },

  // üîπ R√©cup√©rer une consultation par son ID
  getConsultationById: async (id) => {
    try {
      const response = await axios.get(`${API_URL}/${id}`);
      return response.data;
    } catch (error) {
      console.error("Erreur lors de la r√©cup√©ration de la consultation:", error);
      throw error;
    }
  },

  // üîπ Mettre √† jour une consultation existante
  updateConsultation: async (id, data) => {
    try {
      const response = await axios.put(`${API_URL}/${id}`, data);
      return response.data;
    } catch (error) {
      console.error("Erreur lors de la mise √† jour de la consultation:", error);
      throw error;
    }
  },

  // üîπ Supprimer une consultation
  deleteConsultation: async (id) => {
    try {
      const response = await axios.delete(`${API_URL}/${id}`);
      return response.data;
    } catch (error) {
      console.error("Erreur lors de la suppression de la consultation:", error);
      throw error;
    }
  },

  // üîπ R√©cup√©rer les consultations par l'ID de l'utilisateur (patient)
  getConsultationsByUserId: async (userId) => {
    try {
      const response = await axios.get(`${API_URL}/ByUser/${userId}`);
      return response.data;
    } catch (error) {
      console.error("Erreur lors de la r√©cup√©ration des consultations par userId:", error);
      throw error;
    }
  }
};

export default ConsultationService;
